{"version":3,"sources":["util/deleteMatchedObjArrays.js","util/changeValuesOfOjbArrays.js","store/reducers/projectReducer.js","store/reducers/usersReducer.js","store/reducers/rootReducer.js","util/createObjArraysMatchedId.js","store/actions.js","util/toggleSelectAllButton.js","components/todo/TodoInput.jsx","components/todo/TodoItems.jsx","components/todo/TodoList.jsx","components/nav/ColorPicker.jsx","components/nav/Navbar.jsx","store/context/provider.js","components/dialog/Form.jsx","components/dialog/folders/Item.jsx","components/dialog/folders/List.jsx","components/dialog/folders/Folders.jsx","components/history/Input.jsx","util/checkHistory.js","components/history/CreateItems.jsx","components/history/CreateLists.jsx","components/history/List.jsx","util/sortByDate.js","components/routine/Input.jsx","components/routine/More.jsx","components/routine/create/Elements.jsx","components/routine/create/Items.jsx","components/routine/create/Lists.jsx","components/routine/List.jsx","GlobalStyle.jsx","App.js","hooks/useTheme.js","serviceWorker.js","index.js"],"names":["deleteMatchedObjArrays","copy_sorce_array","target","i","length","includes","id","splice","changeValuesOfObjArrays","pram","boolean","initialState","todos","history","projectReducer","newHistory","result","state","type","payload","map","todo","complete","filter","item","finishedAt","moment","format","check","concat","routine","userSettings","usersReducer","newRoutine","resultObject","oldKey","Object","keys","index","newFolderName","key","newObject","routineId","name","text","console","log","folderName","rootReducer","newArray","push","createObjArraysMatchedId","projects","todoIds","uuidv4","users","selectHistoriesAction","uncheckHistoriesAction","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","undefined","TodoInput","useState","setTodo","useSelector","isActiveButton","setIsActiveButton","isActiveSellectAllButton","toggleButton","dispatch","useDispatch","classes","useStyles","useEffect","indicatorOfExecuteButton","button","Button","color","startIcon","onClick","e","preventDefault","variant","size","className","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","action","noValidate","autoComplete","style","padding","Box","placeholder","value","onChange","autoFocus","styled","div","makeStyles","theme","margin","spacing","textAlign","lineHeight","TodoItems","props","hidden","setHidden","component","todoId","toggleTodoAction","root","Text","active","Checkbox","checked","stopPropagation","IconButton","deleteTodoAction","deleteButton","ItemRight","doneTodoAction","doneButton","position","marginBottom","top","right","checkbox","p","TodoList","useTheme","message","Message","palette","hint","ColorPicker","toggleTheme","anchorEl","setAnchorEl","open","Boolean","handleClose","aria-label","aria-controls","aria-haspopup","currentTarget","edge","fontSize","Menu","onClose","PaperProps","width","height","colorArray","MenuItem","bind","StyledBoxColor","Navbar","isDarkMode","setIsDarkMode","now","setNow","setTime","month","date","setInterval","handleClick","icons","AppBar","Toolbar","Title","title","primary","Month","h1","span","flexGrow","UiContext","React","createContext","UiProvider","Provider","children","dialogFormFromRoutine","dialogFormFromHistory","dialogFolder","ahchorEl","Ui","setUi","Form","setFolderName","useContext","addRoutine","addRoutineAction","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","label","DialogActions","DialogFoldersItem","ListItem","ListItemAvatar","ListItemText","DialogFoldersList","keyArray","list","maxHeight","overflow","DialogFolders","Input","isActiveDeleteButton","setIsActiveDeleteButton","isActiveAddRoutineButton","setIsActiveAddRoutineButton","some","Folders","LeftContainer","RightContainer","disableRipple","deleteHistoryAction","deleteHistory","CreateItems","objects","setOpen","setCheck","selectHistory","selectHistoryAction","uncheckHistories","selectHistories","disableFocusRipple","checkButton","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","Divider","paddingTop","paddingBottom","secondary","CreateLists","content","List","sortedHistory","setsortedHistory","array","callback","Obj","ObjArr","k","sortByDate","StyledPaper","h2","More","handleEdit","handleDelete","StyledMenu","keepMounted","StyledMenuItem","ListItemIcon","menuButton","marginRight","withStyles","paper","boxShadow","shadows","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","Elements","Items","inputEl","useRef","openCollapseList","setOpenCollapseList","setRoutine","edit","setEdit","rename","setRename","mouseEvent","setMouseEvent","changeFolderName","folderId","changeFolderNameAction","folderIcon","ClickAwayListener","onClickAway","defaultValue","inputRef","textField","textFieldOff","onKeyPress","textOff","setTimeout","current","focus","clearTimeout","DeleteFolderAction","DeleteFolder","addRoutineFromFolderAction","AddRoutineFromFolder","display","Lists","GlobalStyle","createGlobalStyle","background","default","themeObjectFunction","main","App","setTheme","updatedTheme","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","themeConfig","createMuiTheme","ThemeProvider","Grid","container","xs","md","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.669d0a86.chunk.js","sourcesContent":["export const deleteMatchedObjArrays = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","export const changeValuesOfObjArrays = (\n  copy_sorce_array,\n  target,\n  pram,\n  boolean\n) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array[i][pram] = boolean;\n    }\n  }\n  return copy_sorce_array;\n};\n","import moment from \"moment\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { changeValuesOfObjArrays } from \"../../util/changeValuesOfOjbArrays\";\n\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  let newHistory;\n  let result;\n\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.complete === true);\n      newHistory.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistory.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n\n    case \"SELECT_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", true);\n\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"DELETE_HISTORY\":\n      newHistory = [...state.history];\n      result = deleteMatchedObjArrays(newHistory, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    case \"UNCHECK_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", false);\n      return {\n        ...state,\n        history: result,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","const initialState = { routine: {}, userSettings: {} };\n\nexport function usersReducer(state = initialState, { type, payload }) {\n  let resultObject = {};\n  let newRoutine;\n  switch (type) {\n    case \"CHANGE_FOLDER_NAME\":\n      const oldKey = Object.keys(state.routine[payload.index]);\n      return {\n        ...state,\n        routine: {\n          ...state.routine,\n          [payload.index]: {\n            [payload.newFolderName]: state.routine[payload.index][oldKey[0]],\n          },\n        },\n      };\n    case \"DELETE_FOLDER\":\n      newRoutine = { ...state.routine };\n      for (let key in newRoutine) {\n        if (key !== payload.index) {\n          resultObject[key] = newRoutine[key];\n        } else;\n      }\n      return {\n        ...state,\n        routine: {\n          ...resultObject,\n        },\n      };\n    case \"ADD_ROUTINE_FROM_FOLDER\":\n      let newObject = {\n        id: payload.routineId,\n        name: payload.text,\n        check: false,\n      };\n\n      console.log(newObject);\n      return {\n        ...state,\n        routine: {\n          ...state.routine,\n          [payload.index]: {\n            [payload.folderName]: state.routine[payload.index][\n              payload.folderName\n            ].concat(newObject),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\n","import projectReducer from \"./projectReducer\";\nimport usersReducer from \"./usersReducer\";\nimport { createObjArraysMatchedId } from \"../../util/createObjArraysMatchedId\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function rootReducer(state, { type, payload }) {\n  let newHistory;\n  let newRoutine;\n\n  switch (type) {\n    case \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\":\n      newHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(newHistory, payload.todoIds);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          id: uuidv4(),\n          check: false,\n        };\n      });\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: {\n              ...state.users.routine,\n              [uuidv4()]: {\n                [payload.folderName]: newRoutine,\n              },\n            },\n          },\n          { type, payload }\n        ),\n      };\n\n    default:\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(state.users, { type, payload }),\n      };\n  }\n}\n\n// newRoutine.concat(state.users.routine);\n","export const createObjArraysMatchedId = (copy_sorce_array, target) => {\n  let newArray = [];\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      newArray.push(copy_sorce_array[i]);\n    }\n  }\n  return newArray;\n};\n","/* -------------------------------------------------------------------------- */\n/*                                TODO ACTIONS                                */\n/* -------------------------------------------------------------------------- */\n\n/* ----------------------------------- ADD ---------------------------------- */\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               HISTORY ACTIONS                              */\n/* -------------------------------------------------------------------------- */\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\nexport const selectHistoriesAction = (todoIds) => ({\n  type: \"SELECT_HISTORIES\",\n  payload: todoIds,\n});\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\nexport const uncheckHistoriesAction = (todoIds) => ({\n  type: \"UNCHECK_HISTORIES\",\n  payload: todoIds,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               ROUTINE ACTIONS                              */\n/* -------------------------------------------------------------------------- */\nexport const addRoutineAction = (todoIds, folderName) => ({\n  type: \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\",\n  payload: { todoIds, folderName },\n});\n\nexport const changeFolderNameAction = (folderId, newFolderName, index) => ({\n  type: \"CHANGE_FOLDER_NAME\",\n  payload: { folderId, newFolderName, index },\n});\n\nexport const DeleteFolderAction = (folderId, index) => ({\n  type: \"DELETE_FOLDER\",\n  payload: { folderId, index },\n});\n\nexport const addRoutineFromFolderAction = (\n  routineId,\n  folderName,\n  index,\n  text\n) => ({\n  type: \"ADD_ROUTINE_FROM_FOLDER\",\n  payload: { routineId, folderName, index, text },\n});\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../../store/actions\";\nimport { selectAllAction } from \"../../store/actions\";\nimport { executeAction } from \"../../store/actions\";\nimport { uncheckAction } from \"../../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport const TodoInput = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.projects.todos);\n  const [isActiveButton, setIsActiveButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n  const classes = useStyles();\n\n  useEffect(() => {\n    const indicatorOfExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorOfExecuteButton === undefined || todos.length === 0) {\n      setIsActiveButton(true);\n    } else {\n      setIsActiveButton(false);\n    }\n  }, [todos]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              HANDLE FUNCTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <Button\n      color=\"secondary\"\n      startIcon={<UndoIcon />}\n      onClick={handleUncheck}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Uncheck All\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Select All\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n              autoFocus={true}\n            />\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              size=\"small\"\n              className={classes.button}\n            >\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <Button\n            onClick={handleExecute}\n            startIcon={<DoneIcon />}\n            disabled={isActiveButton}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n          >\n            Done\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Box = styled.div``;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    lineHeight: \"initial\",\n  },\n}));\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const TodoItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { todo } = props;\n  const [hidden, setHidden] = useState(false);\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleShow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setHidden(!hidden);\n  };\n  const handleToggle = (e) => {\n    e.preventDefault();\n    toggleTodo(todo.id);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteTodo(todo.id);\n  };\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    doneTodo(todo.id);\n  };\n\n  return (\n    <>\n      <Paper\n        key={todo.id}\n        component=\"div\"\n        onClick={handleToggle}\n        className={classes.root}\n      >\n        <Text complete={todo.complete} active={hidden}>\n          <Checkbox type=\"checkbox\" checked={todo.complete} color=\"default\" />\n          <span onClick={handleShow}>{todo.name}</span>\n        </Text>\n\n        <IconButton\n          color=\"secondary\"\n          onClick={handleDelete}\n          className={classes.deleteButton}\n          size=\"small\"\n        >\n          <DeleteIcon />\n        </IconButton>\n\n        <ItemRight>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<DoneIcon />}\n            disabled={!todo.complete}\n            onClick={handleDone}\n            className={classes.doneButton}\n            size=\"small\"\n          >\n            Done\n          </Button>\n        </ItemRight>\n      </Paper>\n    </>\n  );\n};\n\nexport default TodoItems;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    margin: \"1rem 1rem 0 0\",\n    padding: 0,\n  },\n  doneButton: {\n    lineHeight: \"initial\",\n  },\n  checkbox: {},\n}));\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\n\nconst Text = styled.p`\n  font-size: 1.4rem;\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n  ${({ active }) =>\n    active &&\n    `\n    cursor: pointer;\n  word-wrap: break-word;\n  text-overflow: initial;\n  overflow: initial;\n  white-space: initial;\n  `}\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { TodoItems } from \"./TodoItems\";\n\nexport const TodoList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const todos = useSelector((state) => state.projects.todos);\n\n  //toggle component\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos && todos.map((todo) => <TodoItems todo={todo} key={todo.id} />)}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.4rem;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\n/* --------------------------------- style -------------------------------- */\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\n\nexport const ColorPicker = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   state                                  */\n  /* -------------------------------------------------------------------------- */\n  const { toggleTheme } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      toggleTheme(item);\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        edge=\"start\"\n      >\n        <ColorLensIcon fontSize=\"large\" />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            height: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            {item === \"default\" ? item : null}\n            {item === \"default\" ? null : <StyledBoxColor color={item} />}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ColorPicker;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst colorArray = [\n  \"default\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\n/* ------------------------------- components ------------------------------- */\nimport { ColorPicker } from \"./ColorPicker\";\n\n/* ---------------------------------- style --------------------------------- */\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport const Navbar = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const { toggleTheme } = props;\n  const [now, setNow] = useState(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handle　actions                             */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    toggleTheme();\n  };\n\n  // toggle component\n  const icons = isDarkMode ? (\n    <IconButton\n      aria-label=\"darkmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness4Icon fontSize=\"large\" />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label=\"lightmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness7Icon fontSize=\"large\" />\n    </IconButton>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Title className={classes.title} color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <ColorPicker toggleTheme={toggleTheme} />\n          {icons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\n/* ---------------------------------- style --------------------------------- */\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n","import React, { useState } from \"react\";\n\n// 複数の Context を作成する\nexport const UiContext = React.createContext();\nexport const UiProvider = UiContext.Provider;\n\n// ラップされた子要素全てが、children に props に入ってくる\nexport const Provider = ({ children }) => {\n  const UiInitialState = {\n    dialogFormFromRoutine: false,\n    dialogFormFromHistory: false,\n    dialogFolder: false,\n    ahchorEl: null,\n  };\n\n  // この例では useState を使用している\n  const [Ui, setUi] = useState(UiInitialState);\n\n  //\n  return <UiProvider value={{ Ui, setUi }}>{children}</UiProvider>;\n};\n\n// const { Ui, setUi } = useContext(UiContext);\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n// import { UiContext } from \"../../../store/context/provider\";\n","import React, { useState, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport { addRoutineAction } from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Form = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const history = useSelector((state) => state.projects.history);\n  const [folderName, setFolderName] = useState(\"\");\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addRoutine = (todoIds, folderName) =>\n    dispatch(addRoutineAction(todoIds, folderName));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  let todoIds = [];\n  history.map((item) => {\n    if (item.check) {\n      todoIds.push(item.id);\n    } else;\n    return item;\n  });\n  const handleClose = (e) => {\n    e.preventDefault();\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  const handleChange = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (folderName.trim() === \"\") return;\n    if (Ui.dialogFormFromHistory) {\n      addRoutine(todoIds, folderName);\n    }\n    if (Ui.dialogFormFromRoutine) {\n      addRoutine([], folderName);\n    }\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  return (\n    <>\n      <Dialog\n        open={Ui.dialogFormFromRoutine || Ui.dialogFormFromHistory}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a folder</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"name\"\n              type=\"text\"\n              fullWidth={true}\n              onChange={handleChange}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Form;\n","import React, { useContext } from \"react\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersItem = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { index } = props;\n  const { Ui, setUi } = useContext(UiContext);\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleListItemClick = (index) => {\n    setUi({ ...Ui, dialogFolder: false });\n    if (typeof index !== \"string\") return;\n  };\n\n  return (\n    <>\n      <ListItem button onClick={() => handleListItemClick(index)}>\n        <ListItemAvatar>\n          <FolderIcon color=\"action\" />\n        </ListItemAvatar>\n        <ListItemText primary={index} />\n      </ListItem>\n    </>\n  );\n};\nexport default DialogFoldersItem;\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DialogFoldersItem from \"./Item\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const routine = useSelector((state) => state.users.routine);\n  const { Ui, setUi } = useContext(UiContext);\n  const classes = useStyles();\n\n  let keyArray = [];\n  for (let key in routine) {\n    const index = Object.keys(routine[key]);\n    keyArray.push(index[0]);\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  // const handleListItemClick = (value) => {\n  //   setUi({ ...Ui, dialogFolder: false });\n  //   if (typeof value !== \"string\") return;\n  // };\n\n  const handleDialogFormOpen = () => {\n    setUi({ ...Ui, dialogFolder: false, dialogFormFromHistory: true });\n  };\n\n  const handleClose = (value) => {\n    setUi({ ...Ui, dialogFolder: false });\n    if (typeof value !== \"string\") return;\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"dialog-title\"\n      open={Ui.dialogFolder}\n    >\n      <DialogTitle id=\"dialog-title\">add routines</DialogTitle>\n      <List className={classes.list}>\n        {keyArray &&\n          keyArray.map((key, index) => (\n            <DialogFoldersItem index={key} key={index} />\n          ))}\n      </List>\n      <ListItem button onClick={() => handleDialogFormOpen()}>\n        <ListItemAvatar>\n          <AddIcon color=\"primary\" />\n        </ListItemAvatar>\n        <ListItemText primary=\"Create a new folder\" />\n      </ListItem>\n    </Dialog>\n  );\n};\n\nexport default DialogFoldersList;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    maxHeight: \"10rem\",\n    overflow: \"scroll\",\n  },\n}));\n","import React from \"react\";\n\n/* -------------------------------- COMPONENT ------------------------------- */\nimport { DialogFoldersList } from \"./List\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const DialogFolders = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <DialogFoldersList />\n    </>\n  );\n};\n\nexport default DialogFolders;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n} from \"../../store/actions\";\n\n/* ------------------------------ components ------------------------------ */\nimport Form from \"../dialog/Form\";\nimport Folders from \"../dialog/folders/Folders\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\n\n/* --------------------------------- util --------------------------------- */\nimport { checkHistory } from \"../../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { Ui, setUi } = useContext(UiContext);\n  const history = useSelector((state) => state.projects.history);\n  const routine = useSelector((state) => state.users.routine);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [isActiveAddRoutineButton, setIsActiveAddRoutineButton] = useState(\n    true\n  );\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n\n  useEffect(() => {\n    //toggle select-button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete-button and add-routine-button\n    if (checkHistory(history)) {\n      setIsActiveAddRoutineButton(false);\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveAddRoutineButton(true);\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                             handle actions                              */\n  /* -------------------------------------------------------------------------- */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n\n    deleteHistory(todoIds);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    if (Object.keys(routine).length === 0) {\n      setUi({ ...Ui, dialogFormFromHistory: true });\n    } else {\n      setUi({ ...Ui, dialogFolder: true });\n    }\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <Folders />\n      <Form />\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"add routine\"\n          color=\"primary\"\n          disabled={isActiveAddRoutineButton}\n          onClick={handleAdd}\n          disableRipple={true}\n        >\n          <PlaylistAddIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\nimport {\n  selectHistoryAction,\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const CreateItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handleActions                               */\n  /* -------------------------------------------------------------------------- */\n  const todoIds = objects && objects.map((object) => object.id);\n  const handleSelect = (e) => {\n    e.stopPropagation();\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={(e) => setOpen(!open)}>\n          <div className={classes.text}>\n            <IconButton\n              color=\"default\"\n              onClick={handleSelect}\n              edge=\"start\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              className={classes.checkButton}\n            >\n              <Checkbox checked={check} color=\"default\" />\n            </IconButton>\n            {moment(index).calendar(null, {\n              sameDay: \"[Today]\",\n              nextDay: \"[Tomorrow]\",\n              nextWeek: \"dddd\",\n              lastDay: \"[Yesterday]\",\n              lastWeek: \"[Last] dddd\",\n              sameElse: \"DD/MM/YYYY\",\n            })}\n          </div>\n\n          <ListItemSecondaryAction>\n            {open ? (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandLess />\n              </IconButton>\n            ) : (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandMore />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item, index) => (\n              <ListItem\n                id={index}\n                onClick={selectHistory.bind(null, item.id)}\n                button={true}\n                key={index}\n              >\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={item.check}\n                  color=\"default\"\n                  size=\"small\"\n                />\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  checkButton: {\n    padding: \"0\",\n  },\n\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: \"1.6rem\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport { CreateItems } from \"./CreateItems\";\n\nexport const CreateLists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <CreateItems objects={result} key={`section-${keys}`} index={keys} />\n    );\n  }\n\n  return <>{content}</>;\n};\n\nexport default CreateLists;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Input } from \"./Input\";\n\n/* --------------------------------- util --------------------------------- */\nimport { sortByDate } from \"../../util/sortByDate\";\n\n/* ------------------------------ components ------------------------------ */\nimport { CreateLists } from \"./CreateLists\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const history = useSelector((state) => state.projects.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      {history.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no history...\n        </Message>\n      ) : (\n        <CreateLists objects={sortedHistory && sortedHistory} />\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React, { useContext } from \"react\";\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Form as DialogForm } from \"../dialog/Form\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  // const routine = useSelector((state) => state.users.routine);\n  // console.log(routine);\n\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* ----------------------------- HANDLE ACTIONS ----------------------------- */\n  const handleCreate = (e) => {\n    setUi({ ...Ui, dialogFormFromRoutine: true });\n  };\n\n  return (\n    <>\n      <DialogForm />\n      <LeftContainer></LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"create a new folder\"\n          color=\"primary\"\n          onClick={handleCreate}\n          disableRipple={true}\n        >\n          <CreateNewFolderIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\nexport default Input;\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","import React from \"react\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nexport const More = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { anchorEl, setAnchorEl, handleEdit, handleDelete } = props;\n\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n  };\n\n  const handleEditClick = (e) => {\n    e.preventDefault();\n    handleEdit();\n  };\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    handleDelete();\n  };\n\n  return (\n    <>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClick={handleClose}\n      >\n        <StyledMenuItem onClick={handleDeleteClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </StyledMenuItem>\n        <StyledMenuItem onClick={handleEditClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    boxShadow: theme.shadows[3],\n  },\n}))((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"& .MuiListItemIcon-root\": {\n      minWidth: 0,\n    },\n  },\n}))(MenuItem);\n","import React from \"react\";\n// import { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\n// import { selectHistoryAction } from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nexport const Elements = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const { item, index } = props;\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  // const dispatch = useDispatch();\n  // const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <ListItem id={index} onClick={handleClick} button={true} key={index}>\n        <Checkbox\n          type=\"checkbox\"\n          checked={item.check}\n          color=\"primary\"\n          size=\"small\"\n        />\n        <ListItemText primary={`${item.name}`} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default Elements;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n  changeFolderNameAction,\n  DeleteFolderAction,\n  addRoutineFromFolderAction,\n} from \"../../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { More } from \"../More\";\nimport Elements from \"./Elements\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Input from \"@material-ui/core/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TextField } from \"@material-ui/core\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const Items = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const key = Object.keys(objects);\n  const array = objects[key];\n  let inputEl = useRef(null);\n\n  const [openCollapseList, setOpenCollapseList] = useState(false);\n  const [check, setCheck] = useState(\n    array.filter((object) => object.check === false).length === 0 ? true : false\n  );\n  const [routine, setRoutine] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [rename, setRename] = useState(key[0]);\n  const [mouseEvent, setMouseEvent] = useState(false);\n\n  useEffect(() => {\n    array.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [array]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n  const todoIds = array && array.map((object) => object.id);\n  const changeFolderName = (folderId, newFolderName) =>\n    dispatch(changeFolderNameAction(folderId, newFolderName, index));\n  const DeleteFolder = (folderId, index) =>\n    dispatch(DeleteFolderAction(folderId, index));\n  const AddRoutineFromFolder = (routineId, folderName, index, text) =>\n    dispatch(addRoutineFromFolderAction(routineId, folderName, index, text));\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleSelect = (e) => {\n    setCheck(!check);\n    array && array.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (routine.trim() === \"\") return;\n    //submit here\n\n    AddRoutineFromFolder(uuidv4(), key[0], index, routine);\n    setRoutine(\"\");\n  };\n  const handleChange = (e) => {\n    setRoutine(e.target.value);\n  };\n\n  const handleOpen = (e) => {\n    e.stopPropagation();\n    setOpenCollapseList(!openCollapseList);\n  };\n\n  //folder rename functions\n  const keyPressed = (e) => {\n    if (e.key === \"Enter\") {\n      if (rename.trim() === \"\") {\n        setEdit(false);\n        return;\n      }\n      setEdit(false);\n      changeFolderName(key[0], rename, index);\n      setRename(\"\");\n    }\n  };\n\n  const handleClickAway = (e) => {\n    if (rename.trim() === \"\") {\n      setMouseEvent(false);\n      setEdit(false);\n      return;\n    } else {\n      setEdit(false);\n      setMouseEvent(false);\n      changeFolderName(key[0], rename, index);\n      setRename(\"\");\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setRename(e.target.value);\n  };\n\n  const handleEdit = () => {\n    setEdit(!edit);\n    const timeout = setTimeout(() => {\n      inputEl.current.focus();\n      setMouseEvent(\"onClick\");\n    });\n    return () => {\n      clearTimeout(timeout);\n    };\n  };\n\n  //delete folder\n  const handleDelete = () => {\n    DeleteFolder(key[0], index);\n  };\n\n  //toggle components\n  const folderIcon = openCollapseList ? (\n    <FolderOpenIcon className={classes.menuButton} />\n  ) : (\n    <FolderIcon className={classes.menuButton} />\n  );\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={handleOpen}>\n          <ListItemIcon>\n            <Box>\n              <IconButton\n                onClick={handleSelect}\n                edge=\"start\"\n                disableRipple={true}\n                disableFocusRipple={true}\n                color=\"default\"\n              >\n                {folderIcon}\n              </IconButton>\n\n              <ClickAwayListener\n                onClickAway={handleClickAway}\n                mouseEvent={mouseEvent}\n              >\n                <TextField\n                  id={index}\n                  defaultValue={key}\n                  inputRef={inputEl}\n                  onChange={handleNameChange}\n                  className={edit ? classes.textField : classes.textFieldOff}\n                  onKeyPress={keyPressed}\n                />\n              </ClickAwayListener>\n\n              <span className={edit ? classes.textOff : classes.text}>\n                {key}\n              </span>\n            </Box>\n          </ListItemIcon>\n\n          <ListItemSecondaryAction>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"end\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <More\n              edit={edit}\n              setEdit={setEdit}\n              anchorEl={anchorEl}\n              setAnchorEl={setAnchorEl}\n              inputEl={inputEl}\n              handleEdit={handleEdit}\n              handleDelete={handleDelete}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={openCollapseList} timeout=\"auto\" unmountOnExit>\n          {array && array.map((item) => <Elements item={item} key={item.id} />)}\n\n          <ListItem>\n            <IconButton edge=\"start\" color=\"primary\">\n              <AddIcon />\n            </IconButton>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n              <Input\n                name=\"todo\"\n                type=\"text\"\n                onChange={handleChange}\n                value={routine}\n              />\n            </form>\n          </ListItem>\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\nexport default Items;\n\n/* ---------------------------------- style --------------------------------- */\nconst Box = styled.div`\n  font-size: 1.6rem;\n`;\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  menuButton: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n  },\n  textOff: {\n    display: \"none\",\n  },\n  textField: {\n    color: theme.palette.text.secondary,\n  },\n  textFieldOff: {\n    display: \"none\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport Items from \"./Items\";\n\nexport const Lists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(<Items objects={result} key={keys} index={keys} />);\n  }\n\n  return <>{content}</>;\n};\n\nexport default Lists;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Input from \"./Input\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Lists as CreateList } from \"./create/Lists\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const routine = useSelector((state) => state.users.routine);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <ListIcon fontSize=\"large\" />\n      </Title>\n      {routine && Object.keys(routine).length !== 0 ? (\n        <CreateList objects={routine} />\n      ) : (\n        <Message color={theme.palette.text.hint}>\n          There is no routine...\n        </Message>\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\nh2{\n  margin:0;\n}\n`;\n\nexport const themeObjectFunction = () => {\n  return {\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#f50057\",\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport \"normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./store/reducers/rootReducer\";\nimport { createStore } from \"redux\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport TodoInput from \"./components/todo/TodoInput\";\nimport TodoList from \"./components/todo/TodoList\";\nimport Navbar from \"./components/nav/Navbar\";\nimport { List as HistoryList } from \"./components/history/List\";\nimport { List as RoutineList } from \"./components/routine/List\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useTheme } from \"./hooks/useTheme\";\n\n/* ------------------------------- CONTEXT Provider ------------------------------ */\nimport { Provider as UiProvider } from \"./store/context/provider\";\n\nexport const App = () => {\n  const [theme, toggleTheme] = useTheme();\n\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : {\n        projects: { todos: [], history: [] },\n        users: { routine: {}, userSettings: {} },\n      };\n  const persistedState = data;\n\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <Provider store={store}>\n      <UiProvider>\n        <ThemeProvider theme={themeConfig}>\n          <GlobalStyle theme={themeConfig} />\n          <Navbar toggleTheme={toggleTheme} />\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={4}>\n              <RoutineList />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TodoInput />\n              <TodoList />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <HistoryList />\n            </Grid>\n          </Grid>\n        </ThemeProvider>\n      </UiProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\nimport { themeObjectFunction } from \"../GlobalStyle\";\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(themeObjectFunction);\n\n  const {\n    palette: { type },\n  } = theme;\n  const toggleTheme = (props) => {\n    let updatedTheme;\n    if (props) {\n      const color = props === \"default\" ? \"#2196f3\" : props;\n\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          primary: {\n            ...theme.palette.primary,\n            main: `${color}`,\n          },\n        },\n      };\n    } else {\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n    }\n\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleTheme];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}