{"version":3,"sources":["util/deleteMatchedObjArrays.js","util/changeValuesOfOjbArrays.js","store/reducers/projectReducer.js","store/reducers/usersReducer.js","store/reducers/rootReducer.js","util/createObjArraysMatchedId.js","store/actions.js","util/toggleSelectAllButton.js","components/todo/TodoInput.jsx","components/todo/TodoItems.jsx","components/todo/TodoList.jsx","components/nav/ColorPicker.jsx","components/nav/Navbar.jsx","store/context/provider.js","components/dialog/Form.jsx","components/dialog/folders/Item.jsx","components/dialog/folders/List.jsx","components/dialog/folders/Folders.jsx","components/history/Input.jsx","util/checkHistory.js","components/history/CreateItems.jsx","components/history/CreateLists.jsx","components/history/List.jsx","util/sortByDate.js","components/routine/Input.jsx","components/routine/More.jsx","components/routine/create/Elements.jsx","components/routine/create/Items.jsx","components/routine/create/Lists.jsx","components/routine/List.jsx","GlobalStyle.jsx","App.js","hooks/useTheme.js","serviceWorker.js","index.js"],"names":["deleteMatchedObjArrays","copy_sorce_array","target","i","length","includes","id","splice","changeValuesOfObjArrays","pram","boolean","initialState","todos","history","projectReducer","newHistory","result","state","type","payload","map","todo","complete","filter","item","finishedAt","moment","format","check","concat","routine","userSettings","usersReducer","oldKey","Object","keys","index","newFolderName","rootReducer","newRoutine","newArray","push","createObjArraysMatchedId","projects","todoIds","uuidv4","users","folderName","selectHistoriesAction","uncheckHistoriesAction","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","undefined","TodoInput","useState","setTodo","useSelector","isActiveButton","setIsActiveButton","isActiveSellectAllButton","toggleButton","dispatch","useDispatch","classes","useStyles","useEffect","indicatorOfExecuteButton","button","Button","color","startIcon","onClick","e","preventDefault","variant","size","className","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","name","action","noValidate","autoComplete","style","padding","Box","placeholder","value","onChange","autoFocus","styled","div","makeStyles","theme","margin","spacing","textAlign","lineHeight","TodoItems","props","hidden","setHidden","key","component","todoId","toggleTodoAction","root","Text","active","Checkbox","checked","stopPropagation","IconButton","deleteTodoAction","deleteButton","ItemRight","doneTodoAction","doneButton","position","marginBottom","top","right","checkbox","p","TodoList","useTheme","message","Message","palette","text","hint","ColorPicker","toggleTheme","anchorEl","setAnchorEl","open","Boolean","handleClose","aria-label","aria-controls","aria-haspopup","currentTarget","edge","fontSize","Menu","onClose","PaperProps","width","height","colorArray","MenuItem","bind","StyledBoxColor","Navbar","isDarkMode","setIsDarkMode","now","setNow","setTime","month","date","setInterval","handleClick","icons","AppBar","Toolbar","Title","title","primary","Month","h1","span","flexGrow","UiContext","React","createContext","UiProvider","Provider","children","dialogFormFromRoutine","dialogFormFromHistory","dialogFolder","ahchorEl","Ui","setUi","Form","setFolderName","useContext","addRoutine","addRoutineAction","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","label","DialogActions","DialogFoldersItem","ListItem","ListItemAvatar","ListItemText","DialogFoldersList","keyArray","list","maxHeight","overflow","DialogFolders","Input","isActiveDeleteButton","setIsActiveDeleteButton","isActiveAddRoutineButton","setIsActiveAddRoutineButton","some","Folders","LeftContainer","RightContainer","disableRipple","deleteHistoryAction","deleteHistory","CreateItems","objects","setOpen","setCheck","selectHistory","selectHistoryAction","uncheckHistories","selectHistories","disableFocusRipple","checkButton","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","Divider","paddingTop","paddingBottom","secondary","CreateLists","content","List","sortedHistory","setsortedHistory","array","callback","Obj","ObjArr","k","sortByDate","StyledPaper","h2","More","handleEdit","StyledMenu","keepMounted","StyledMenuItem","ListItemIcon","menuButton","marginRight","withStyles","paper","boxShadow","shadows","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","Elements","console","log","Items","inputEl","useRef","openCollapseList","setOpenCollapseList","setRoutine","edit","setEdit","rename","setRename","mouseEvent","setMouseEvent","changeFolderName","folderId","changeFolderNameAction","folderIcon","ClickAwayListener","onClickAway","defaultValue","inputRef","textField","textFieldOff","onKeyPress","textOff","setTimeout","current","focus","clearTimeout","display","Lists","GlobalStyle","createGlobalStyle","background","default","themeObjectFunction","main","App","setTheme","updatedTheme","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","themeConfig","createMuiTheme","ThemeProvider","Grid","container","xs","md","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c4e872e3.chunk.js","sourcesContent":["export const deleteMatchedObjArrays = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","export const changeValuesOfObjArrays = (\n  copy_sorce_array,\n  target,\n  pram,\n  boolean\n) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array[i][pram] = boolean;\n    }\n  }\n  return copy_sorce_array;\n};\n","import moment from \"moment\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { changeValuesOfObjArrays } from \"../../util/changeValuesOfOjbArrays\";\n\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  let newHistory;\n  let result;\n\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.complete === true);\n      newHistory.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistory.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n\n    case \"SELECT_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", true);\n\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"DELETE_HISTORY\":\n      newHistory = [...state.history];\n      result = deleteMatchedObjArrays(newHistory, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    case \"UNCHECK_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", false);\n      return {\n        ...state,\n        history: result,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","const initialState = { routine: [], userSettings: {} };\n\nexport function usersReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case \"CHANGE_FOLDER_NAME\":\n      const oldKey = Object.keys(state.routine[payload.index]);\n      return {\n        ...state,\n        routine: {\n          ...state.routine,\n          [payload.index]: {\n            [payload.newFolderName]: state.routine[payload.index][oldKey[0]],\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\n","import projectReducer from \"./projectReducer\";\nimport usersReducer from \"./usersReducer\";\nimport { createObjArraysMatchedId } from \"../../util/createObjArraysMatchedId\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function rootReducer(state, { type, payload }) {\n  let newHistory;\n  let newRoutine;\n\n  switch (type) {\n    case \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\":\n      newHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(newHistory, payload.todoIds);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          id: uuidv4(),\n          check: false,\n        };\n      });\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: {\n              ...state.users.routine,\n              [uuidv4()]: {\n                [payload.folderName]: newRoutine,\n              },\n            },\n          },\n          { type, payload }\n        ),\n      };\n\n    default:\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(state.users, { type, payload }),\n      };\n  }\n}\n\n// newRoutine.concat(state.users.routine);\n","export const createObjArraysMatchedId = (copy_sorce_array, target) => {\n  let newArray = [];\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      newArray.push(copy_sorce_array[i]);\n    }\n  }\n  return newArray;\n};\n","/* -------------------------------------------------------------------------- */\n/*                                TODO ACTIONS                                */\n/* -------------------------------------------------------------------------- */\n\n/* ----------------------------------- ADD ---------------------------------- */\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               HISTORY ACTIONS                              */\n/* -------------------------------------------------------------------------- */\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\nexport const selectHistoriesAction = (todoIds) => ({\n  type: \"SELECT_HISTORIES\",\n  payload: todoIds,\n});\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\nexport const uncheckHistoriesAction = (todoIds) => ({\n  type: \"UNCHECK_HISTORIES\",\n  payload: todoIds,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               ROUTINE ACTIONS                              */\n/* -------------------------------------------------------------------------- */\nexport const addRoutineAction = (todoIds, folderName) => ({\n  type: \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\",\n  payload: { todoIds, folderName },\n});\n\nexport const changeFolderNameAction = (folderId, newFolderName, index) => ({\n  type: \"CHANGE_FOLDER_NAME\",\n  payload: { folderId, newFolderName, index },\n});\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../../store/actions\";\nimport { selectAllAction } from \"../../store/actions\";\nimport { executeAction } from \"../../store/actions\";\nimport { uncheckAction } from \"../../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport const TodoInput = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.projects.todos);\n  const [isActiveButton, setIsActiveButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n  const classes = useStyles();\n\n  useEffect(() => {\n    const indicatorOfExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorOfExecuteButton === undefined || todos.length === 0) {\n      setIsActiveButton(true);\n    } else {\n      setIsActiveButton(false);\n    }\n  }, [todos]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              HANDLE FUNCTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <Button\n      color=\"secondary\"\n      startIcon={<UndoIcon />}\n      onClick={handleUncheck}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Uncheck All\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Select All\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n              autoFocus={true}\n            />\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              size=\"small\"\n              className={classes.button}\n            >\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <Button\n            onClick={handleExecute}\n            startIcon={<DoneIcon />}\n            disabled={isActiveButton}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n          >\n            Done\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Box = styled.div``;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    lineHeight: \"initial\",\n  },\n}));\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const TodoItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { todo } = props;\n  const [hidden, setHidden] = useState(false);\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleShow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setHidden(!hidden);\n  };\n  const handleToggle = (e) => {\n    e.preventDefault();\n    toggleTodo(todo.id);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteTodo(todo.id);\n  };\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    doneTodo(todo.id);\n  };\n\n  return (\n    <>\n      <Paper\n        key={todo.id}\n        component=\"div\"\n        onClick={handleToggle}\n        className={classes.root}\n      >\n        <Text complete={todo.complete} active={hidden}>\n          <Checkbox type=\"checkbox\" checked={todo.complete} color=\"default\" />\n          <span onClick={handleShow}>{todo.name}</span>\n        </Text>\n\n        <IconButton\n          color=\"secondary\"\n          onClick={handleDelete}\n          className={classes.deleteButton}\n          size=\"small\"\n        >\n          <DeleteIcon />\n        </IconButton>\n\n        <ItemRight>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<DoneIcon />}\n            disabled={!todo.complete}\n            onClick={handleDone}\n            className={classes.doneButton}\n            size=\"small\"\n          >\n            Done\n          </Button>\n        </ItemRight>\n      </Paper>\n    </>\n  );\n};\n\nexport default TodoItems;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    margin: \"1rem 1rem 0 0\",\n    padding: 0,\n  },\n  doneButton: {\n    lineHeight: \"initial\",\n  },\n  checkbox: {},\n}));\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\n\nconst Text = styled.p`\n  font-size: 1.4rem;\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n  ${({ active }) =>\n    active &&\n    `\n    cursor: pointer;\n  word-wrap: break-word;\n  text-overflow: initial;\n  overflow: initial;\n  white-space: initial;\n  `}\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { TodoItems } from \"./TodoItems\";\n\nexport const TodoList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const todos = useSelector((state) => state.projects.todos);\n\n  //toggle component\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos && todos.map((todo) => <TodoItems todo={todo} key={todo.id} />)}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.4rem;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\n/* --------------------------------- style -------------------------------- */\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\n\nexport const ColorPicker = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   state                                  */\n  /* -------------------------------------------------------------------------- */\n  const { toggleTheme } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      toggleTheme(item);\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        edge=\"start\"\n      >\n        <ColorLensIcon fontSize=\"large\" />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            height: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            {item === \"default\" ? item : null}\n            {item === \"default\" ? null : <StyledBoxColor color={item} />}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ColorPicker;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst colorArray = [\n  \"default\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\n/* ------------------------------- components ------------------------------- */\nimport { ColorPicker } from \"./ColorPicker\";\n\n/* ---------------------------------- style --------------------------------- */\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport const Navbar = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const { toggleTheme } = props;\n  const [now, setNow] = useState(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handle　actions                             */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    toggleTheme();\n  };\n\n  // toggle component\n  const icons = isDarkMode ? (\n    <IconButton\n      aria-label=\"darkmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness4Icon fontSize=\"large\" />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label=\"lightmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness7Icon fontSize=\"large\" />\n    </IconButton>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Title className={classes.title} color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <ColorPicker toggleTheme={toggleTheme} />\n          {icons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\n/* ---------------------------------- style --------------------------------- */\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n","import React, { useState } from \"react\";\n\n// 複数の Context を作成する\nexport const UiContext = React.createContext();\nexport const UiProvider = UiContext.Provider;\n\n// ラップされた子要素全てが、children に props に入ってくる\nexport const Provider = ({ children }) => {\n  const UiInitialState = {\n    dialogFormFromRoutine: false,\n    dialogFormFromHistory: false,\n    dialogFolder: false,\n    ahchorEl: null,\n  };\n\n  // この例では useState を使用している\n  const [Ui, setUi] = useState(UiInitialState);\n\n  //\n  return <UiProvider value={{ Ui, setUi }}>{children}</UiProvider>;\n};\n\n// const { Ui, setUi } = useContext(UiContext);\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n// import { UiContext } from \"../../../store/context/provider\";\n","import React, { useState, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport { addRoutineAction } from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Form = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const history = useSelector((state) => state.projects.history);\n  const [folderName, setFolderName] = useState(\"\");\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addRoutine = (todoIds, folderName) =>\n    dispatch(addRoutineAction(todoIds, folderName));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  let todoIds = [];\n  history.map((item) => {\n    if (item.check) {\n      todoIds.push(item.id);\n    } else;\n    return item;\n  });\n  const handleClose = (e) => {\n    e.preventDefault();\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  const handleChange = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (folderName.trim() === \"\") return;\n    if (Ui.dialogFormFromHistory) {\n      addRoutine(todoIds, folderName);\n    }\n    if (Ui.dialogFormFromRoutine) {\n      addRoutine([], folderName);\n    }\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  return (\n    <>\n      <Dialog\n        open={Ui.dialogFormFromRoutine || Ui.dialogFormFromHistory}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a folder</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"name\"\n              type=\"text\"\n              fullWidth={true}\n              onChange={handleChange}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Form;\n","import React, { useContext } from \"react\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersItem = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { index } = props;\n  const { Ui, setUi } = useContext(UiContext);\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleListItemClick = (index) => {\n    setUi({ ...Ui, dialogFolder: false });\n    if (typeof index !== \"string\") return;\n  };\n\n  return (\n    <>\n      <ListItem button onClick={() => handleListItemClick(index)}>\n        <ListItemAvatar>\n          <FolderIcon color=\"action\" />\n        </ListItemAvatar>\n        <ListItemText primary={index} />\n      </ListItem>\n    </>\n  );\n};\nexport default DialogFoldersItem;\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DialogFoldersItem from \"./Item\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const routine = useSelector((state) => state.users.routine);\n  const { Ui, setUi } = useContext(UiContext);\n  const classes = useStyles();\n\n  let keyArray = [];\n  for (let key in routine) {\n    const index = Object.keys(routine[key]);\n    keyArray.push(index[0]);\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  // const handleListItemClick = (value) => {\n  //   setUi({ ...Ui, dialogFolder: false });\n  //   if (typeof value !== \"string\") return;\n  // };\n\n  const handleDialogFormOpen = () => {\n    setUi({ ...Ui, dialogFolder: false, dialogFormFromHistory: true });\n  };\n\n  const handleClose = (value) => {\n    setUi({ ...Ui, dialogFolder: false });\n    if (typeof value !== \"string\") return;\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"dialog-title\"\n      open={Ui.dialogFolder}\n    >\n      <DialogTitle id=\"dialog-title\">add routines</DialogTitle>\n      <List className={classes.list}>\n        {keyArray &&\n          keyArray.map((key, index) => (\n            <DialogFoldersItem index={key} key={index} />\n          ))}\n      </List>\n      <ListItem button onClick={() => handleDialogFormOpen()}>\n        <ListItemAvatar>\n          <AddIcon color=\"primary\" />\n        </ListItemAvatar>\n        <ListItemText primary=\"Create a new folder\" />\n      </ListItem>\n    </Dialog>\n  );\n};\n\nexport default DialogFoldersList;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    maxHeight: \"10rem\",\n    overflow: \"scroll\",\n  },\n}));\n","import React from \"react\";\n\n/* -------------------------------- COMPONENT ------------------------------- */\nimport { DialogFoldersList } from \"./List\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const DialogFolders = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <DialogFoldersList />\n    </>\n  );\n};\n\nexport default DialogFolders;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n} from \"../../store/actions\";\n\n/* ------------------------------ components ------------------------------ */\nimport Form from \"../dialog/Form\";\nimport Folders from \"../dialog/folders/Folders\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\n\n/* --------------------------------- util --------------------------------- */\nimport { checkHistory } from \"../../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { Ui, setUi } = useContext(UiContext);\n  const history = useSelector((state) => state.projects.history);\n  const routine = useSelector((state) => state.users.routine);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [isActiveAddRoutineButton, setIsActiveAddRoutineButton] = useState(\n    true\n  );\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n\n  useEffect(() => {\n    //toggle select-button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete-button and add-routine-button\n    if (checkHistory(history)) {\n      setIsActiveAddRoutineButton(false);\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveAddRoutineButton(true);\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                             handle actions                              */\n  /* -------------------------------------------------------------------------- */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n\n    deleteHistory(todoIds);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    if (routine.length === 0) {\n      setUi({ ...Ui, dialogFormFromHistory: true });\n    } else {\n      setUi({ ...Ui, dialogFolder: true });\n    }\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <Folders />\n      <Form />\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"add routine\"\n          color=\"primary\"\n          disabled={isActiveAddRoutineButton}\n          onClick={handleAdd}\n          disableRipple={true}\n        >\n          <PlaylistAddIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\nimport {\n  selectHistoryAction,\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const CreateItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handleActions                               */\n  /* -------------------------------------------------------------------------- */\n  const todoIds = objects && objects.map((object) => object.id);\n  const handleSelect = (e) => {\n    e.stopPropagation();\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={(e) => setOpen(!open)}>\n          <div className={classes.text}>\n            <IconButton\n              color=\"default\"\n              onClick={handleSelect}\n              edge=\"start\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              className={classes.checkButton}\n            >\n              <Checkbox checked={check} color=\"default\" />\n            </IconButton>\n            {moment(index).calendar(null, {\n              sameDay: \"[Today]\",\n              nextDay: \"[Tomorrow]\",\n              nextWeek: \"dddd\",\n              lastDay: \"[Yesterday]\",\n              lastWeek: \"[Last] dddd\",\n              sameElse: \"DD/MM/YYYY\",\n            })}\n          </div>\n\n          <ListItemSecondaryAction>\n            {open ? (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandLess />\n              </IconButton>\n            ) : (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandMore />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item, index) => (\n              <ListItem\n                id={index}\n                onClick={selectHistory.bind(null, item.id)}\n                button={true}\n                key={index}\n              >\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={item.check}\n                  color=\"default\"\n                  size=\"small\"\n                />\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  checkButton: {\n    padding: \"0\",\n  },\n\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: \"1.6rem\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport { CreateItems } from \"./CreateItems\";\n\nexport const CreateLists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <CreateItems objects={result} key={`section-${keys}`} index={keys} />\n    );\n  }\n\n  return <>{content}</>;\n};\n\nexport default CreateLists;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Input } from \"./Input\";\n\n/* --------------------------------- util --------------------------------- */\nimport { sortByDate } from \"../../util/sortByDate\";\n\n/* ------------------------------ components ------------------------------ */\nimport { CreateLists } from \"./CreateLists\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const history = useSelector((state) => state.projects.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      {history.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no history...\n        </Message>\n      ) : (\n        <CreateLists objects={sortedHistory && sortedHistory} />\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React, { useContext } from \"react\";\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Form as DialogForm } from \"../dialog/Form\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  // const routine = useSelector((state) => state.users.routine);\n  // console.log(routine);\n\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* ----------------------------- HANDLE ACTIONS ----------------------------- */\n  const handleCreate = (e) => {\n    setUi({ ...Ui, dialogFormFromRoutine: true });\n  };\n\n  return (\n    <>\n      <DialogForm />\n      <LeftContainer></LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"create a new folder\"\n          color=\"primary\"\n          onClick={handleCreate}\n          disableRipple={true}\n        >\n          <CreateNewFolderIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\nexport default Input;\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","import React from \"react\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nexport const More = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { anchorEl, setAnchorEl, handleEdit } = props;\n\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    handleEdit();\n  };\n\n  return (\n    <>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClick={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemIcon className={classes.menuButton}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </StyledMenuItem>\n        <StyledMenuItem onClick={handleClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    boxShadow: theme.shadows[3],\n  },\n}))((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"& .MuiListItemIcon-root\": {\n      minWidth: 0,\n    },\n  },\n}))(MenuItem);\n","import React from \"react\";\n// import { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\n// import { selectHistoryAction } from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nexport const Elements = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const { item, index } = props;\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  // const dispatch = useDispatch();\n  // const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <ListItem id={index} onClick={handleClick} button={true} key={index}>\n        <Checkbox\n          type=\"checkbox\"\n          checked={item.check}\n          color=\"primary\"\n          size=\"small\"\n        />\n        <ListItemText primary={`${item.name}`} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default Elements;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n  changeFolderNameAction,\n} from \"../../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { More } from \"../More\";\nimport Elements from \"./Elements\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Input from \"@material-ui/core/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TextField } from \"@material-ui/core\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const Items = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const key = Object.keys(objects);\n  const array = objects[key];\n  let inputEl = useRef(null);\n\n  const [openCollapseList, setOpenCollapseList] = useState(false);\n  const [check, setCheck] = useState(\n    array.filter((object) => object.check === false).length === 0 ? true : false\n  );\n  const [routine, setRoutine] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [rename, setRename] = useState(key[0]);\n  const [mouseEvent, setMouseEvent] = useState(false);\n\n  useEffect(() => {\n    array.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [array]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n  const todoIds = array && array.map((object) => object.id);\n  const changeFolderName = (folderId, newFolderName) =>\n    dispatch(changeFolderNameAction(folderId, newFolderName, index));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleSelect = (e) => {\n    setCheck(!check);\n    array.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (routine.trim() === \"\") return;\n    setRoutine(\"\");\n  };\n  const handleChange = (e) => {\n    setRoutine(e.target.value);\n  };\n\n  const handleOpen = (e) => {\n    e.stopPropagation();\n    setOpenCollapseList(!openCollapseList);\n  };\n\n  //folder rename functions\n  const keyPressed = (e) => {\n    if (e.key === \"Enter\") {\n      setEdit(false);\n      //submit rename here\n      changeFolderName(key[0], rename, index);\n      setRename(\"\");\n    }\n  };\n\n  const handleClickAway = (e) => {\n    if (rename.trim() === \"\") {\n      setMouseEvent(false);\n      setEdit(false);\n    } else {\n      setEdit(false);\n      setMouseEvent(false);\n      changeFolderName(key[0], rename, index);\n      //submit rename here\n      setRename(\"\");\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setRename(e.target.value);\n  };\n\n  const handleEdit = () => {\n    setEdit(!edit);\n    const timeout = setTimeout(() => {\n      inputEl.current.focus();\n      setMouseEvent(\"onClick\");\n    });\n    return () => {\n      clearTimeout(timeout);\n    };\n  };\n\n  //toggle components\n  const folderIcon = openCollapseList ? (\n    <FolderOpenIcon className={classes.menuButton} />\n  ) : (\n    <FolderIcon className={classes.menuButton} />\n  );\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={handleOpen}>\n          <ListItemIcon>\n            <Box>\n              <IconButton\n                onClick={handleSelect}\n                edge=\"start\"\n                disableRipple={true}\n                disableFocusRipple={true}\n                color=\"default\"\n              >\n                {folderIcon}\n              </IconButton>\n\n              <ClickAwayListener\n                onClickAway={handleClickAway}\n                mouseEvent={mouseEvent}\n              >\n                <TextField\n                  id={index}\n                  defaultValue={key}\n                  inputRef={inputEl}\n                  onChange={handleNameChange}\n                  className={edit ? classes.textField : classes.textFieldOff}\n                  onKeyPress={keyPressed}\n                />\n              </ClickAwayListener>\n\n              <span className={edit ? classes.textOff : classes.text}>\n                {key}\n              </span>\n            </Box>\n          </ListItemIcon>\n\n          <ListItemSecondaryAction>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"end\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <More\n              edit={edit}\n              setEdit={setEdit}\n              anchorEl={anchorEl}\n              setAnchorEl={setAnchorEl}\n              inputEl={inputEl}\n              handleEdit={handleEdit}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={openCollapseList} timeout=\"auto\" unmountOnExit>\n          {array && array.map((item) => <Elements item={item} key={item.id} />)}\n\n          <ListItem>\n            <IconButton edge=\"start\" color=\"primary\">\n              <AddIcon />\n            </IconButton>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n              <Input\n                name=\"todo\"\n                type=\"text\"\n                onChange={handleChange}\n                value={routine}\n              />\n            </form>\n          </ListItem>\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\nexport default Items;\n\n/* ---------------------------------- style --------------------------------- */\nconst Box = styled.div`\n  font-size: 1.6rem;\n`;\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  menuButton: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n  },\n  textOff: {\n    display: \"none\",\n  },\n  textField: {\n    color: theme.palette.text.secondary,\n  },\n  textFieldOff: {\n    display: \"none\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport Items from \"./Items\";\n\nexport const Lists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(<Items objects={result} key={keys} index={keys} />);\n  }\n\n  return <>{content}</>;\n};\n\nexport default Lists;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Input from \"./Input\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Lists as CreateList } from \"./create/Lists\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const routine = useSelector((state) => state.users.routine);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <ListIcon fontSize=\"large\" />\n      </Title>\n      {routine && routine.length !== 0 ? (\n        <CreateList objects={routine} />\n      ) : (\n        <Message color={theme.palette.text.hint}>\n          There is no routine...\n        </Message>\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\nh2{\n  margin:0;\n}\n`;\n\nexport const themeObjectFunction = () => {\n  return {\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#f50057\",\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport \"normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./store/reducers/rootReducer\";\nimport { createStore } from \"redux\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport TodoInput from \"./components/todo/TodoInput\";\nimport TodoList from \"./components/todo/TodoList\";\nimport Navbar from \"./components/nav/Navbar\";\nimport { List as HistoryList } from \"./components/history/List\";\nimport { List as RoutineList } from \"./components/routine/List\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useTheme } from \"./hooks/useTheme\";\n\n/* ------------------------------- CONTEXT Provider ------------------------------ */\nimport { Provider as UiProvider } from \"./store/context/provider\";\n\nexport const App = () => {\n  const [theme, toggleTheme] = useTheme();\n\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : {\n        projects: { todos: [], history: [] },\n        users: { routine: [], userSettings: {} },\n      };\n  const persistedState = data;\n\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <Provider store={store}>\n      <UiProvider>\n        <ThemeProvider theme={themeConfig}>\n          <GlobalStyle theme={themeConfig} />\n          <Navbar toggleTheme={toggleTheme} />\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={4}>\n              <RoutineList />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TodoInput />\n              <TodoList />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <HistoryList />\n            </Grid>\n          </Grid>\n        </ThemeProvider>\n      </UiProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\nimport { themeObjectFunction } from \"../GlobalStyle\";\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(themeObjectFunction);\n\n  const {\n    palette: { type },\n  } = theme;\n  const toggleTheme = (props) => {\n    let updatedTheme;\n    if (props) {\n      const color = props === \"default\" ? \"#2196f3\" : props;\n\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          primary: {\n            ...theme.palette.primary,\n            main: `${color}`,\n          },\n        },\n      };\n    } else {\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n    }\n\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleTheme];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}