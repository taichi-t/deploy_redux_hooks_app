{"version":3,"sources":["store/reducers/projectReducer.js","components/TodoInput.jsx","store/actions.js","components/TodoList.jsx","components/Navbar.jsx","components/History.jsx","common/createLabel.js","common/createList.js","components/RoutineWork.jsx","GlobalStyle.jsx","App.js","hooks/useDarkMode.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["initialState","todos","history","projectReducer","state","type","payload","map","todo","id","complete","newHistory","filter","item","finishedAt","moment","format","concat","newHistories","TodoInput","useState","setTodo","useSelector","isActiveExecuteButton","setIsActiveExecuteButton","isActiveSellectAllButton","setIsActiveSellectAll","toggleButton","setToggleButton","dispatch","useDispatch","useEffect","indicatorWithExecuteButton","find","indicatorWithSellectAllButton","length","undefined","button","Button","color","startIcon","onClick","e","preventDefault","Text","fontSize","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","uuidv4","name","action","noValidate","autoComplete","style","padding","Box","Input","placeholder","value","onChange","target","ColorButton","styled","div","p","props","withStyles","theme","root","palette","success","main","TodoList","useTheme","toggleTodo","todoId","toggleTodoAction","deleteTodo","deleteTodoAction","message","Message","text","hint","key","bind","ItemLeft","Checkbox","checked","ItemRight","variant","span","Navbar","isDarkMode","setIsDarkMode","toggleDarkMode","now","setNow","setTime","month","date","setInterval","AppBar","position","Toolbar","Title","primary","Month","size","speed","h1","History","organizedHistory","setOrganizedHistory","array","callback","Obj","ObjArr","k","push","createLabel","StyledPaper","List","subheader","objects","ListSubheader","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","index","ListItem","ListItemText","createList","h2","RoutineWork","GlobalStyle","createGlobalStyle","background","default","themeObject","secondary","App","setTheme","updatedTheme","useDarkMode","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","themeConfig","createMuiTheme","ThemeProvider","Grid","container","spacing","xs","sm","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.40ba45ad.chunk.js","sourcesContent":["import moment from \"moment\";\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n    case \"DELETE_TODO\":\n      let newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map(\n        (item) => (item.finishedAt = moment().format(\"YYYY-MM-DD\"))\n      );\n\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: state.history.concat(newHistory),\n      };\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n    case \"EXECUTE_TODO\":\n      let newHistories = state.todos.filter((todo) => todo.complete === true);\n      newHistories.map(\n        (history) => (history.finishedAt = moment().format(\"YYYY-MM-DD\"))\n      );\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: state.history.concat(newHistories),\n      };\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../store/actions\";\nimport { selectAllAction } from \"../store/actions\";\nimport { executeAction } from \"../store/actions\";\nimport { uncheckAction } from \"../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//style\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nexport const TodoInput = () => {\n  //state\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.todos);\n  const [isActiveExecuteButton, setIsActiveExecuteButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  //dispatch actions\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n\n  useEffect(() => {\n    const indicatorWithExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    const indicatorWithSellectAllButton = todos.find(\n      (todo) => todo.complete === false\n    );\n\n    //to toggle selectAllButton\n\n    if (todos.length === 0 && indicatorWithSellectAllButton === undefined) {\n      setIsActiveSellectAll(true); //selectAllButton disable\n      setToggleButton(false); //selectAllButton on\n    }\n    if (todos.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n      setToggleButton(false); //selectAllButton on\n      setIsActiveSellectAll(false); //selectAllButton active\n    }\n    if (todos.length !== 0 && indicatorWithSellectAllButton === undefined) {\n      setIsActiveSellectAll(true); //selectAllButton disable\n      setToggleButton(true); //uncheckButton on\n    } else;\n\n    //to toggle executeButton\n    if (indicatorWithExecuteButton === undefined || todos.length === 0) {\n      setIsActiveExecuteButton(true);\n    } else {\n      setIsActiveExecuteButton(false);\n    }\n  }, [todos]);\n\n  //handle functions\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  const button = toggleButton ? (\n    <Button color=\"secondary\" startIcon={<UndoIcon />} onClick={handleUncheck}>\n      <Text fontSize={0.5}>Uncheck All</Text>\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <Text fontSize={0.5}>Select All</Text>\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n            />\n            <Button type=\"submit\" color=\"primary\" startIcon={<AddIcon />}>\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <ColorButton\n            onClick={handleExecute}\n            startIcon={<CheckCircleOutlineIcon />}\n            disabled={isActiveExecuteButton}\n          >\n            <Text fontSize={0.5}>Execute</Text>\n          </ColorButton>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n//style\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Text = styled.p`\n  font-size: ${(props) => props.fontSize}rem;\n`;\n\nconst Box = styled.div``;\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.success.main,\n  },\n}))(Button);\n","export const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\n\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\n\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\n\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleTodoAction, deleteTodoAction } from \"../store/actions\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const TodoList = () => {\n  const theme = useTheme();\n  const todos = useSelector((state) => state.todos);\n\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos &&\n        todos.map((todo) => (\n          <Paper key={todo.id}>\n            <Box\n              onClick={\n                ((e) => e.preventDefault(), toggleTodo.bind(null, todo.id))\n              }\n            >\n              <ItemLeft>\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={todo.complete}\n                  color=\"primary\"\n                />\n                <Text complete={todo.complete}>{todo.name}</Text>\n              </ItemLeft>\n\n              <ItemRight>\n                {todo.complete ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<DoneIcon />}\n                    onClick={deleteTodo.bind(null, todo.id)}\n                  >\n                    Done\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    onClick={deleteTodo.bind(null, todo.id)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </ItemRight>\n            </Box>\n          </Paper>\n        ))}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.6rem;\n`;\n\nconst Box = styled.div`\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\nconst ItemLeft = styled.div`\n  text-align: left;\n`;\n\nconst Text = styled.span`\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\n//style\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nexport const Navbar = (props) => {\n  //state\n  const theme = useTheme();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const { toggleDarkMode } = props;\n  const [now, setNow] = useState(\"\");\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  //handle actions\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    toggleDarkMode();\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Box>\n          <Title color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <div onClick={handleClick}>\n            <DarkModeToggle checked={isDarkMode} size={50} speed={6} />\n          </div>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n\n//style\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n  text-align: center;\n`;\n\nconst Box = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { createLabel } from \"../common/createLabel\";\nimport { createList } from \"../common/createList\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nexport const History = () => {\n  const history = useSelector((state) => state.history);\n  const [organizedHistory, setOrganizedHistory] = useState();\n\n  useEffect(() => {\n    setOrganizedHistory(createLabel(history));\n  }, [history]);\n\n  return (\n    <Container>\n      <StyledPaper>\n        <Title>\n          <HistoryIcon fontSize=\"large\" />\n        </Title>\n        <List subheader={<li />}>\n          {organizedHistory && createList(organizedHistory)}\n        </List>\n      </StyledPaper>\n    </Container>\n  );\n};\n\nexport default History;\n\n//style\nconst Container = styled.div`\n  padding: 1rem;\n`;\n\nconst StyledPaper = styled(Paper)`\n  max-height: 600px;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  font-weight: normal;\n  padding: 1rem 0;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","export const createLabel = (array, callback) => {\n  var Obj = {};\n  var ObjArr = [];\n\n  for (var k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n  return Obj;\n};\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport moment from \"moment\";\n\n//style\n\nexport const createList = (objects) => {\n  for (let key in objects) {\n    return (\n      <li key={`section-${key}`}>\n        <ul>\n          <ListSubheader style={{ fontSize: \"1.5rem\" }}>\n            {moment(key).calendar(null, {\n              sameDay: \"[Today]\",\n              nextDay: \"[Tomorrow]\",\n              nextWeek: \"dddd\",\n              lastDay: \"[Yesterday]\",\n              lastWeek: \"[Last] dddd\",\n              sameElse: \"DD/MM/YYYY\",\n            })}\n          </ListSubheader>\n          {objects &&\n            objects[key].map((item, index) => (\n              <ListItem key={index}>\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </ul>\n      </li>\n    );\n  }\n};\n","import React from \"react\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport const RoutineWork = () => {\n  return (\n    <Container>\n      <StyledPaper>\n        <Title>\n          <RepeatIcon fontSize=\"large\" />\n        </Title>\n      </StyledPaper>\n    </Container>\n  );\n};\n\nexport default RoutineWork;\n\n//style\nconst Container = styled.div`\n  padding: 1rem;\n`;\n\nconst StyledPaper = styled(Paper)`\n  max-height: 600px;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  font-weight: normal;\n  padding: 1rem 0;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  \n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n  h2{\n    margin:0\n  }\n`;\n\nexport const themeObject = {\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#2196f3\",\n    },\n    secondary: {\n      main: \"#f50057\",\n    },\n  },\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport projectReducer from \"./store/reducers/projectReducer\";\nimport { createStore } from \"redux\";\n\n//components\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport Navbar from \"./components/Navbar\";\nimport History from \"./components/History\";\nimport RoutineWork from \"./components/RoutineWork\";\n//style\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n//hooks\nimport { useDarkMode } from \"./hooks/useDarkMode\";\n\nfunction App() {\n  const [theme, toggleDarkMode] = useDarkMode();\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : { todos: [], history: [] };\n  const persistedState = data;\n\n  const store = createStore(\n    projectReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={themeConfig}>\n        <GlobalStyle theme={themeConfig} />\n\n        <Navbar toggleDarkMode={toggleDarkMode} />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={4}>\n            <RoutineWork />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TodoInput />\n            <TodoList />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <History />\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport { themeObject } from \"../GlobalStyle\";\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState(themeObject);\n\n  const {\n    palette: { type },\n  } = theme;\n  const toggleDarkMode = () => {\n    const updatedTheme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        type: type === \"light\" ? \"dark\" : \"light\",\n      },\n    };\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleDarkMode];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}