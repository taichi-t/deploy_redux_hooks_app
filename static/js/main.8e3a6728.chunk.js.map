{"version":3,"sources":["util/deleteMatchedObjArrays.js","util/changeValuesOfOjbArrays.js","util/createObjArraysMatchedId.js","store/reducers/projectReducer.js","util/toggleSelectAllButton.js","components/TodoInput.jsx","store/actions.js","components/TodoList.jsx","components/ColorPicker.jsx","components/Navbar.jsx","components/HistoryInput.jsx","util/checkHistory.js","components/CreateHistoryItem.jsx","components/CreateHistoryList.jsx","components/HistoryList.jsx","util/sortByDate.js","components/RoutineWork.jsx","GlobalStyle.jsx","App.js","hooks/useTheme.js","serviceWorker.js","index.js"],"names":["deleteMatchedObjArrays","copy_sorce_array","target","i","length","includes","id","splice","changeValuesOfObjArrays","pram","boolean","createObjArraysMatchedId","newArray","push","initialState","todos","history","routine","userSetting","projectReducer","newHistory","result","newRoutine","state","type","payload","map","todo","complete","filter","item","finishedAt","moment","format","check","concat","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","undefined","TodoInput","useState","setTodo","useSelector","isActiveExecuteButton","setIsActiveExecuteButton","isActiveSellectAllButton","toggleButton","dispatch","useDispatch","useEffect","indicatorOfExecuteButton","button","Button","color","startIcon","onClick","e","preventDefault","Text","fontSize","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","uuidv4","name","action","noValidate","autoComplete","style","padding","Box","Input","placeholder","value","onChange","ColorButton","styled","div","p","props","withStyles","theme","root","palette","success","main","TodoList","useTheme","toggleTodo","todoId","toggleTodoAction","deleteTodo","deleteTodoAction","doneTodo","doneTodoAction","message","Message","text","hint","key","bind","ItemLeft","Checkbox","checked","ItemRight","variant","span","useStyles","makeStyles","menuButton","marginRight","spacing","colorArray","ColorPicker","toggleTheme","anchorEl","setAnchorEl","open","Boolean","classes","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","className","Menu","onClose","PaperProps","width","height","index","MenuItem","StyledBoxColor","title","alignSelf","flexGrow","Navbar","isDarkMode","setIsDarkMode","now","setNow","setTime","month","date","setInterval","handleClick","icons","edge","AppBar","position","Toolbar","toolbar","Title","primary","Month","h1","HistoryInput","isActiveDeleteButton","setIsActiveDeleteButton","isActiveAddRoutineButton","setIsActiveAddRoutineButton","some","LeftContainer","RightContainer","todoIds","addRoutineAction","addRoutine","deleteHistoryAction","deleteHistory","CreateHistoryItem","objects","setOpen","setCheck","selectHistory","selectHistoryAction","List","component","ListItem","ListItemIcon","uncheckHistoriesAction","uncheckHistories","selectHistoriesAction","selectHistories","disableRipple","disableFocusRipple","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","size","ListItemText","Divider","CreateHistoryList","content","keys","HistoryList","sortedHistory","setsortedHistory","array","callback","Obj","ObjArr","k","sortByDate","StyledPaper","h2","RoutineWork","GlobalStyle","createGlobalStyle","background","default","themeObjectFunction","secondary","App","setTheme","updatedTheme","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","themeConfig","createMuiTheme","ThemeProvider","Grid","container","xs","md","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8e3a6728.chunk.js","sourcesContent":["export const deleteMatchedObjArrays = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","export const changeValuesOfObjArrays = (\n  copy_sorce_array,\n  target,\n  pram,\n  boolean\n) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array[i][pram] = boolean;\n    }\n  }\n  return copy_sorce_array;\n};\n","export const createObjArraysMatchedId = (copy_sorce_array, target) => {\n  let newArray = [];\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      newArray.push(copy_sorce_array[i]);\n    }\n  }\n  return newArray;\n};\n","import moment from \"moment\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { changeValuesOfObjArrays } from \"../../util/changeValuesOfOjbArrays\";\nimport { createObjArraysMatchedId } from \"../../util/createObjArraysMatchedId\";\nconst initialState = { todos: [], history: [], routine: [], userSetting: {} };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  let newHistory;\n  let result;\n  let newRoutine;\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.complete === true);\n      newHistory.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistory.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n\n    case \"SELECT_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", true);\n\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"DELETE_HISTORY\":\n      newHistory = [...state.history];\n      result = deleteMatchedObjArrays(newHistory, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    case \"UNCHECK_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", false);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"ADD_ROUTINE\":\n      newHistory = [...state.history];\n      newRoutine = createObjArraysMatchedId(newHistory, payload);\n      newHistory = deleteMatchedObjArrays(newHistory, payload);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          check: false,\n        };\n      });\n\n      return {\n        ...state,\n        history: newHistory,\n        routine: newRoutine,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../store/actions\";\nimport { selectAllAction } from \"../store/actions\";\nimport { executeAction } from \"../store/actions\";\nimport { uncheckAction } from \"../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//util\nimport { toggleSelectAllButton } from \"../util/toggleSelectAllButton\";\n\n//style\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nexport const TodoInput = () => {\n  //state\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.todos);\n  const [isActiveExecuteButton, setIsActiveExecuteButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  //dispatch actions\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n\n  useEffect(() => {\n    const indicatorOfExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorOfExecuteButton === undefined || todos.length === 0) {\n      setIsActiveExecuteButton(true);\n    } else {\n      setIsActiveExecuteButton(false);\n    }\n  }, [todos]);\n\n  //handle functions\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  const button = toggleButton ? (\n    <Button color=\"secondary\" startIcon={<UndoIcon />} onClick={handleUncheck}>\n      <Text fontSize={0.5}>Uncheck All</Text>\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <Text fontSize={0.5}>Select All</Text>\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n            />\n            <Button type=\"submit\" color=\"primary\" startIcon={<AddIcon />}>\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <ColorButton\n            onClick={handleExecute}\n            startIcon={<CheckCircleOutlineIcon />}\n            disabled={isActiveExecuteButton}\n          >\n            <Text fontSize={0.5}>Execute</Text>\n          </ColorButton>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n//style\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Text = styled.p`\n  font-size: ${(props) => props.fontSize}rem;\n`;\n\nconst Box = styled.div``;\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.success.main,\n  },\n}))(Button);\n","//todo actions\n\n//add\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\n//update\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\n\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\n\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\n\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\n\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\n//delete\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\n//history actions\n\n//delete\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\n//update\n\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\n\nexport const selectHistoriesAction = (todoIds) => ({\n  type: \"SELECT_HISTORIES\",\n  payload: todoIds,\n});\n\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\n\nexport const uncheckHistoriesAction = (todoIds) => ({\n  type: \"UNCHECK_HISTORIES\",\n  payload: todoIds,\n});\n\nexport const addRoutineAction = (todoIds) => ({\n  type: \"ADD_ROUTINE\",\n  payload: todoIds,\n});\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../store/actions\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const TodoList = () => {\n  const theme = useTheme();\n  const todos = useSelector((state) => state.todos);\n\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos &&\n        todos.map((todo) => (\n          <Paper key={todo.id}>\n            <Box\n              onClick={\n                ((e) => e.preventDefault(), toggleTodo.bind(null, todo.id))\n              }\n            >\n              <ItemLeft>\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={todo.complete}\n                  color=\"primary\"\n                />\n                <Text complete={todo.complete}>{todo.name}</Text>\n              </ItemLeft>\n\n              <ItemRight>\n                {todo.complete ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<DoneIcon />}\n                    onClick={doneTodo.bind(null, todo.id)}\n                  >\n                    Done\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    onClick={deleteTodo.bind(null, todo.id)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </ItemRight>\n            </Box>\n          </Paper>\n        ))}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.6rem;\n`;\n\nconst Box = styled.div`\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\nconst ItemLeft = styled.div`\n  text-align: left;\n`;\n\nconst Text = styled.span`\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\n//style\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(3),\n  },\n}));\n\nconst colorArray = [\n  \"default\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n\nexport const ColorPicker = (props) => {\n  //state\n  const { toggleTheme } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const classes = useStyles();\n\n  //handle actions\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      toggleTheme(item);\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        className={classes.menuButton}\n      >\n        <ColorLensIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            height: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            {item === \"default\" ? item : null}\n            {item === \"default\" ? null : <StyledBoxColor color={item} />}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ColorPicker;\n\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\n//components\nimport { ColorPicker } from \"./ColorPicker\";\n\n//style\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(3),\n  },\n  title: {\n    alignSelf: \"flex-end\",\n    flexGrow: 1,\n  },\n}));\n\nexport const Navbar = (props) => {\n  //state\n  const theme = useTheme();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const { toggleTheme } = props;\n  const [now, setNow] = useState(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  //handle actions\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    toggleTheme();\n  };\n\n  //toggle component\n  const icons = isDarkMode ? (\n    <IconButton\n      aria-label=\"darkmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      className={classes.menuButton}\n      onClick={handleClick}\n    >\n      <Brightness4Icon />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label=\"lightmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      className={classes.menuButton}\n      onClick={handleClick}\n    >\n      <Brightness7Icon />\n    </IconButton>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Title className={classes.title} color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <ColorPicker toggleTheme={toggleTheme} />\n          {icons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\n//style\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n  addRoutineAction,\n} from \"../store/actions\";\n\n//style\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\n\n//util\nimport { checkHistory } from \"../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../util/toggleSelectAllButton\";\n\nexport const HistoryInput = () => {\n  //state\n  const history = useSelector((state) => state.history);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [isActiveAddRoutineButton, setIsActiveAddRoutineButton] = useState(\n    true\n  );\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n\n  //dispatchActions\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n  const addRoutine = (todoIds) => dispatch(addRoutineAction(todoIds));\n\n  useEffect(() => {\n    //toggle select-button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete-button and add-routine-button\n    if (checkHistory(history)) {\n      setIsActiveAddRoutineButton(false);\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveAddRoutineButton(true);\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  //handle actions\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n\n    setIsActiveDeleteButton(false);\n    deleteHistory(todoIds);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n    setIsActiveAddRoutineButton(false);\n    addRoutine(todoIds);\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"add routine\"\n          color=\"primary\"\n          disabled={isActiveAddRoutineButton}\n          onClick={handleAdd}\n        >\n          <PlaylistAddIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n//style\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n//actions\nimport { selectHistoryAction } from \"../store/actions\";\nimport { selectHistoriesAction } from \"../store/actions\";\nimport { uncheckHistoriesAction } from \"../store/actions\";\n\n//style\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nexport const CreateHistoryItem = (props) => {\n  const { objects, index } = props;\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  //dispatchActions\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n\n  const todoIds = objects && objects.map((object) => object.id);\n\n  const handleSelect = (e) => {\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n  return (\n    <>\n      <List component=\"ul\">\n        <ListItem>\n          <ListItemIcon>\n            <Box>\n              <IconButton\n                color=\"primary\"\n                onClick={handleSelect}\n                edge=\"start\"\n                disableRipple={true}\n                disableFocusRipple={true}\n              >\n                <Checkbox checked={check} color=\"primary\" />\n              </IconButton>\n              {moment(index).calendar(null, {\n                sameDay: \"[Today]\",\n                nextDay: \"[Tomorrow]\",\n                nextWeek: \"dddd\",\n                lastDay: \"[Yesterday]\",\n                lastWeek: \"[Last] dddd\",\n                sameElse: \"DD/MM/YYYY\",\n              })}\n            </Box>\n          </ListItemIcon>\n\n          <ListItemSecondaryAction>\n            {open ? (\n              <IconButton\n                color=\"primary\"\n                onClick={(e) => setOpen(!open)}\n                edge=\"end\"\n                component=\"div\"\n              >\n                <ExpandLess />\n              </IconButton>\n            ) : (\n              <IconButton\n                color=\"primary\"\n                onClick={(e) => setOpen(!open)}\n                edge=\"end\"\n                component=\"div\"\n              >\n                <ExpandMore />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item, index) => (\n              <ListItem\n                id={index}\n                onClick={selectHistory.bind(null, item.id)}\n                button={true}\n                key={index}\n              >\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={item.check}\n                  color=\"primary\"\n                  size=\"small\"\n                />\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\nconst Box = styled.div`\n  font-size: 1.5rem;\n`;\n","import React from \"react\";\n\n//components\nimport { CreateHistoryItem } from \"./CreateHistoryItem\";\n\nexport const CreateHistoryList = (props) => {\n  //state\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <CreateHistoryItem\n        objects={result}\n        key={`section-${keys}`}\n        index={keys}\n      />\n    );\n  }\n\n  return <>{content}</>;\n};\n\nexport default CreateHistoryList;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HistoryInput } from \"./HistoryInput\";\n\n//util\nimport { sortByDate } from \"../util/sortByDate\";\n\n//components\nimport { CreateHistoryList } from \"./CreateHistoryList\";\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n// import List from \"@material-ui/core/List\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const HistoryList = () => {\n  //state\n  const theme = useTheme();\n  const history = useSelector((state) => state.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      {history && history.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no history...\n        </Message>\n      ) : (\n        <CreateHistoryList objects={sortedHistory && sortedHistory} />\n      )}\n\n      <HistoryInput />\n    </StyledPaper>\n  );\n};\n\nexport default HistoryList;\n\n//style\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React from \"react\";\n// import { useSelector } from \"react-redux\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport const RoutineWork = () => {\n  //state\n  // const routine = useSelector((state) => state.routine);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <RepeatIcon fontSize=\"large\" />\n      </Title>\n    </StyledPaper>\n  );\n};\n\nexport default RoutineWork;\n\n//style\n\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  font-weight: normal;\n  padding: 1rem 0;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\n`;\n\nexport const themeObjectFunction = () => {\n  return {\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#f50057\",\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport \"normalize.css\";\nimport { Provider } from \"react-redux\";\nimport projectReducer from \"./store/reducers/projectReducer\";\nimport { createStore } from \"redux\";\n\n//components\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport Navbar from \"./components/Navbar\";\nimport HistoryList from \"./components/HistoryList\";\nimport RoutineWork from \"./components/RoutineWork\";\n//style\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n//hooks\nimport { useTheme } from \"./hooks/useTheme\";\n\nfunction App() {\n  const [theme, toggleTheme] = useTheme();\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : { todos: [], history: [], routine: [], userSetting: {} };\n  const persistedState = data;\n\n  const store = createStore(\n    projectReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={themeConfig}>\n        <GlobalStyle theme={themeConfig} />\n        <Navbar toggleTheme={toggleTheme} />\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <RoutineWork />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TodoInput />\n            <TodoList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HistoryList />\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport { themeObjectFunction } from \"../GlobalStyle\";\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(themeObjectFunction);\n\n  const {\n    palette: { type },\n  } = theme;\n  const toggleTheme = (props) => {\n    let updatedTheme;\n    if (props) {\n      const color = props === \"default\" ? \"#2196f3\" : props;\n\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          primary: {\n            ...theme.palette.primary,\n            main: `${color}`,\n          },\n        },\n      };\n    } else {\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n    }\n\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleTheme];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}