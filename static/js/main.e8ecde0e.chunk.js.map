{"version":3,"sources":["store/actions.js","util/toggleSelectAllButton.js","hooks/useEmojiPicker.js","components/todo/TodoInput.jsx","hooks/useHideText.js","components/todo/TodoItems.jsx","components/todo/TodoList.jsx","components/nav/ColorPicker.jsx","components/nav/Navbar.jsx","store/context/provider.js","components/dialog/Form.jsx","components/dialog/folders/Item.jsx","components/dialog/folders/List.jsx","components/dialog/folders/Folders.jsx","components/history/Input.jsx","util/checkHistory.js","components/history/CreateElements.jsx","components/history/CreateItems.jsx","components/history/CreateLists.jsx","components/history/List.jsx","util/sortByDate.js","components/routine/Input.jsx","components/routine/More.jsx","components/routine/create/Elements.jsx","components/routine/create/Items.jsx","components/routine/create/Lists.jsx","components/routine/List.jsx","components/home/Home.jsx","GlobalStyle.jsx","components/app/App.jsx","hooks/useTheme.js","serviceWorker.js","util/deleteMatchedObjArrays.js","util/changeValuesOfOjbArrays.js","store/reducers/projectReducer.js","util/moveAt.js","store/reducers/usersReducer.js","util/createObjArraysMatchedId.js","index.js","store/reducers/rootReducer.js"],"names":["selectHistoriesAction","todoIds","type","payload","uncheckHistoriesAction","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","item","length","undefined","useEmojiPicker","value","setValue","edit","__setMountEvent","useSelector","state","users","userSettings","useState","anchorEl","setAnchorEl","open","setOpen","mountEvent","setMountEvent","id","ClickAwayListener","onClickAway","mouseEvent","Popper","style","zIndex","set","sheetSize","theme","perLine","title","emoji","onSelect","native","e","target","TodoInput","todo","setTodo","todos","projects","isActiveButton","setIsActiveButton","isActiveSellectAllButton","toggleButton","emojipicker","handleEmojiOpen","dispatch","useDispatch","classes","useStyles","useEffect","indicatorOfExecuteButton","complete","button","Button","color","startIcon","onClick","preventDefault","variant","size","className","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","uuidv4","name","action","noValidate","autoComplete","padding","Box","placeholder","onChange","autoFocus","IconButton","edge","emojiButton","styled","div","makeStyles","margin","spacing","textAlign","lineHeight","breakpoints","down","display","useHideText","hidden","setHidden","handleShow","stopPropagation","text","check","fontSize","Text","active","Checkbox","checked","p","props","TodoItems","key","component","todoId","toggleTodoAction","root","deleteTodoAction","deleteButton","ItemRight","doneTodoAction","doneButton","position","marginBottom","top","right","TodoList","useTheme","message","Message","palette","hint","map","ColorPicker","Boolean","handleClose","changeSettingColorAction","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","onClose","PaperProps","width","height","colorArray","index","MenuItem","bind","StyledBoxColor","Navbar","now","setNow","isDarkMode","setIsDarkMode","setTime","month","moment","format","date","setInterval","handleClick","icons","AppBar","Toolbar","Title","primary","Month","h1","span","flexGrow","UiContext","React","createContext","UiProvider","Provider","children","dialogFormFromRoutine","dialogFormFromHistory","dialogFolder","ahchorEl","Ui","setUi","Form","folderName","setFolderName","useContext","Dialog","aria-labelledby","fullWidth","maxWidth","disableBackdropClick","DialogTitle","addRoutineAction","createNewFolderAction","createNewFolder","DialogContent","TextField","label","DialogActions","alignItems","DialogFoldersItem","ListItem","listId","addNewRoutineToExistFolderAction","ListItemAvatar","ListItemText","DialogFoldersList","routine","keyArray","push","list","maxHeight","overflow","DialogFolders","Input","history","isActiveDeleteButton","setIsActiveDeleteButton","isActiveAddRoutineButton","setIsActiveAddRoutineButton","some","Folders","LeftContainer","RightContainer","Object","keys","disableRipple","deleteHistoryAction","deleteHistory","CreateElements","selectHistoryAction","CreateItems","objects","filter","setCheck","uncheckHistories","selectHistories","disableFocusRipple","checkButton","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","Divider","paddingTop","paddingBottom","secondary","CreateLists","content","result","List","sortedHistory","setsortedHistory","array","callback","Obj","ObjArr","k","finishedAt","sortByDate","StyledPaper","h2","More","handleEdit","handleDelete","StyledMenu","keepMounted","StyledMenuItem","ListItemIcon","menuButton","marginRight","withStyles","paper","boxShadow","shadows","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","Elements","routineId","toggleRoutineAction","toggle","deleteRoutineAction","deleteRoutine","Items","items","inputEl","useRef","openCollapseList","setOpenCollapseList","setRoutine","setEdit","rename","setRename","setMouseEvent","routineEmojipicker","routineHandleEmojiOpen","changeFolderName","newFolderName","changeFolderNameAction","folderIcon","inputRef","textField","textFieldOff","onKeyPress","buttonOff","setTimeout","current","focus","clearTimeout","DeleteFolderAction","DeleteFolder","addRoutineFromFolderAction","AddRoutineFromFolder","textOff","verticalAlign","left","Lists","routines","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","onDragEnd","destination","source","droppableId","sorce","DragAndDropActions","dragAndDrop","doroppableProps","Home","Grid","container","sm","md","box1","box2","box3","order","GlobalStyle","createGlobalStyle","background","default","App","setting","setTheme","useLayoutEffect","main","values","xl","themeConfig","createMuiTheme","ThemeProvider","window","location","hostname","match","deleteMatchedObjArrays","copy_sorce_array","i","includes","splice","changeValuesOfObjArrays","pram","boolean","initialState","projectReducer","newHistory","concat","moveAt","at","tail","slice","Array","prototype","apply","usersReducer","newRoutine","el","copyRoutine","createObjArraysMatchedId","newArray","persistedState","localStorage","getItem","JSON","parse","store","createStore","copyHistory","checkedId","forEach","devToolsExtension","subscribe","setItem","stringify","getState","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"yPAkDaA,EAAwB,SAACC,GAAD,MAAc,CACjDC,KAAM,mBACNC,QAASF,IAQEG,EAAyB,SAACH,GAAD,MAAc,CAClDC,KAAM,oBACNC,QAASF,I,SC9DEI,EAAwB,SACnCC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAgCJ,EAAOK,MAC3C,SAACC,GAAD,OAA0B,IAAhBA,EAAKH,MAGK,IAAlBH,EAAOO,aAAkDC,IAAlCJ,IACzBF,GAAsB,GACtBD,GAAgB,IAEI,IAAlBD,EAAOO,aAAkDC,IAAlCJ,IACzBH,GAAgB,GAChBC,GAAsB,IAEF,IAAlBF,EAAOO,aAAkDC,IAAlCJ,IACzBF,GAAsB,GACtBD,GAAgB,K,oCCbPQ,EAAiB,SAACC,EAAOC,EAAUC,EAAMC,GACpD,IAAMjB,EAAOkB,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,aAAarB,QADW,EAExCsB,mBAAS,MAF+B,mBAEjEC,EAFiE,KAEvDC,EAFuD,OAGhDF,oBAAS,GAHuC,mBAGjEG,EAHiE,KAG3DC,EAH2D,OAIpCJ,oBAAS,GAJ2B,mBAIjEK,EAJiE,KAIrDC,EAJqD,KAKlEC,EAAKJ,EAAO,cAAWb,EAwC7B,MAAO,CAnBL,kBAACkB,EAAA,EAAD,CAAmBC,YAPF,WACjBL,GAAQ,GACRF,EAAY,MACZI,GAAc,GACdX,GAAmBA,EAAgB,YAGSe,WAAYL,GACtD,kBAACM,EAAA,EAAD,CACEJ,GAAIA,EACJJ,KAAMA,EACNF,SAAUA,EACVW,MAAO,CAAEC,OAAQ,UAEjB,kBAAC,IAAD,CACEC,IAAI,UACJC,UAAW,GACXC,MAAgB,UAATtC,EAAmB,QAAU,OACpCuC,QAAS,EACTC,MAAM,GACNC,MAAM,GACNC,SAzBkB,SAACD,GACzB1B,EAAS,GAAD,OAAID,EAAQ2B,EAAME,cATJ,SAACC,GACnB5B,IAASA,IACbC,GAAmBA,GAAgB,GACnCO,EAAYD,EAAW,KAAOqB,EAAEC,QAChCnB,GAAQD,GACRG,EAAc,aAiCsBH,I,qVCzBjC,IA0JQqB,EA1JU,WAAM,MAILxB,mBAAS,IAJJ,mBAItByB,EAJsB,KAIhBC,EAJgB,KAKvBC,EAAQ/B,aAAY,SAACC,GAAD,OAAWA,EAAM+B,SAASD,SALvB,EAMe3B,oBAAS,GANxB,mBAMtB6B,EANsB,KAMNC,EANM,OAO6B9B,oBAAS,GAPtC,mBAOtB+B,EAPsB,KAOI/C,EAPJ,OAQWgB,oBAAS,GARpB,mBAQtBgC,EARsB,KAQRjD,EARQ,OASUQ,EAAekC,EAAMC,GAT/B,mBAStBO,EATsB,KASTC,EATS,KAcvBC,EAAWC,cAKXC,EAAUC,IAEhBC,qBAAU,WACR,IAAMC,EAA2Bb,EAAMxC,MACrC,SAACsC,GAAD,OAA4B,IAAlBA,EAAKgB,YAGjB5D,EACE8C,EACA5C,EACAC,EACA,iBAI+BM,IAA7BkD,GAA2D,IAAjBb,EAAMtC,OAClDyC,GAAkB,GAElBA,GAAkB,KAEnB,CAACH,IAKJ,IA4BMe,EAASV,EACb,kBAACW,EAAA,EAAD,CACEC,MAAM,YACNC,UAAW,kBAAC,IAAD,MACXC,QAVkB,SAACxB,GACrBA,EAAEyB,iBAjDkBZ,EHpBY,CAClCzD,KAAM,kBG8EFsE,QAAQ,YACRC,KAAK,QACLC,UAAWb,EAAQK,QANrB,eAWA,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,UAAW,kBAAC,IAAD,MACXM,SAAUpB,EACVe,QA9BiB,SAACxB,GACpBA,EAAEyB,iBA3CoBZ,EHxBY,CACpCzD,KAAM,gBGgGFsE,QAAQ,YACRC,KAAK,QACLC,UAAWb,EAAQK,QAPrB,cAYF,OACE,kBAACU,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,0BACEC,SApDa,SAAChC,GACpBA,EAAEyB,iBACkB,KAAhBtB,EAAK8B,UAnCK,SAAC9B,GAASU,EHrCC,SAACV,GAAD,MAAW,CACtC/C,KAAM,WACNC,QAAS8C,GGmC0B+B,CAAc/B,IAoC/CgC,CAAQ,CACNlD,GAAImD,cACJC,KAAMlC,EACNgB,UAAU,IAEZf,EAAQ,MA6CFkC,OAAO,SACPC,YAAU,EACVC,aAAa,MACblD,MAAO,CAAEmD,QAAS,SAElB,kBAACC,EAAD,KACE,kBAAC,IAAD,CACEtF,KAAK,OACLiF,KAAK,OACLM,YAAY,gBACZzE,MAAOiC,EACPyC,SApES,SAAC5C,GACpBI,EAAQJ,EAAEC,OAAO/B,QAoEP2E,WAAW,IAEb,kBAACC,EAAA,EAAD,CACEtB,QAASZ,EACTmC,KAAK,QACLpB,KAAK,QACLL,MAAM,UACNM,UAAWb,EAAQiC,aAEnB,kBAAC,IAAD,OAEDrC,EAED,kBAACmC,EAAA,EAAD,CACE1F,KAAK,SACLkE,MAAM,UACNK,KAAK,QACLoB,KAAK,MACLnB,UAAWb,EAAQK,QAEnB,kBAAC,IAAD,QAGHA,EACD,kBAACC,EAAA,EAAD,CACEG,QA5EY,SAACxB,GACrBA,EAAEyB,iBA9CkBZ,EHtBY,CAClCzD,KAAM,kBG+IImE,UAAW,kBAAC,IAAD,MACXM,SAAUtB,EACVmB,QAAQ,YACRJ,MAAM,UACNK,KAAK,QACLC,UAAWb,EAAQK,QAPrB,YAoBJU,EAAYmB,IAAOC,IAAV,KAMTR,EAAMO,IAAOC,IAAV,KAEHlC,EAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvC0B,OAAQ,CACNgC,OAAQ1D,EAAM2D,QAAQ,GACtBC,UAAW,SACXC,WAAY,WAEdP,YAAY,eACTtD,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BC,QAAS,a,wSCpMR,IAAMC,EAAc,WAAO,IAAD,EACHjF,oBAAS,GADN,mBACxBkF,EADwB,KAChBC,EADgB,KAEzBC,EAAa,SAAC9D,GAClBA,EAAEyB,iBACFzB,EAAE+D,kBACFF,GAAWD,IAUb,MAAO,CARM,SAACI,EAAMC,EAAOb,EAAQc,GAAtB,OACX,kBAACC,EAAD,CAAMF,MAAOA,EAAOG,OAAQR,EAAQR,OAAQA,EAAQc,SAAUA,GACjD,OAAVD,EAAiB,KAChB,kBAACI,EAAA,EAAD,CAAUjH,KAAK,WAAWkH,QAASL,EAAO3C,MAAM,YAElD,0BAAME,QAASsC,GAAaE,OAM5BG,EAAOlB,IAAOsB,EAAV,KAEE,SAACC,GAAD,OAAWA,EAAMpB,UACd,SAACoB,GAAD,OAAWA,EAAMN,YAMX,SAACM,GAAD,OAAYA,EAAMP,MAAQ,eAAiB,QAC5D,qBAAGG,QACG,kI,8GCXH,IAAMK,EAAY,SAACD,GAAU,IAI1BrE,EAASqE,EAATrE,KACFY,EAAUC,IALkB,EAMnB2C,IAARK,EAN2B,oBAW5BnD,EAAWC,cAwBjB,OACE,oCACE,kBAACiB,EAAA,EAAD,CACE2C,IAAKvE,EAAKlB,GACV0F,UAAU,MACVnD,QApBe,SAACxB,GARH,IAAC4E,EASlB5E,EAAEyB,iBATgBmD,EAUPzE,EAAKlB,GAVa4B,ELvBD,SAAC+D,GAAD,MAAa,CAC3CxH,KAAM,cACNC,QAASuH,GKqB+BC,CAAiBD,KA6BnDhD,UAAWb,EAAQ+D,MAElBd,EAAK7D,EAAKkC,KAAMlC,EAAKgB,SAAU,SAAU,SAAU,QAEpD,kBAAC2B,EAAA,EAAD,CACExB,MAAM,YACNE,QAtBa,SAACxB,GAZH,IAAC4E,EAalB5E,EAAEyB,iBAbgBmD,EAcPzE,EAAKlB,GAda4B,ELLD,SAAC+D,GAAD,MAAa,CAC3CxH,KAAM,cACNC,QAASuH,GKG+BG,CAAiBH,KAmCjDhD,UAAWb,EAAQiE,aACnBrD,KAAK,SAEL,kBAAC,IAAD,OAGF,kBAACsD,EAAD,KACE,kBAAC5D,EAAA,EAAD,CACEK,QAAQ,YACRJ,MAAM,UACNC,UAAW,kBAAC,IAAD,MACXM,UAAW1B,EAAKgB,SAChBK,QA9BS,SAACxB,GAhBH,IAAC4E,EAiBhB5E,EAAEyB,iBAjBcmD,EAkBPzE,EAAKlB,GAlBa4B,ELrBD,SAAC+D,GAAD,MAAa,CACzCxH,KAAM,YACNC,QAASuH,GKmB6BM,CAAeN,KA+C3ChD,UAAWb,EAAQoE,WACnBxD,KAAK,SAPP,YAqBJX,EAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCoF,KAAM,CACJM,SAAU,WACV3C,QAAS,OACT4C,aAAc,QAEhBL,aAAc,CACZI,SAAU,WACVE,IAAK,IACLC,MAAO,IACPnC,OAAQ,gBACRX,QAAS,GAEX0C,WAAY,CACV5B,WAAY,eAIV0B,EAAYhC,IAAOC,IAAV,K,kPCxGR,IAqBQsC,GArBS,WAItB,IAAM9F,EAAQ+F,cACRpF,EAAQ/B,aAAY,SAACC,GAAD,OAAWA,EAAM+B,SAASD,SAG9CqF,EACa,IAAjBrF,EAAMtC,OACJ,kBAAC4H,GAAD,CAASrE,MAAO5B,EAAMkG,QAAQ5B,KAAK6B,MAAnC,uBACE,KAEN,OACE,kBAAC,GAAD,KACGxF,GAASA,EAAMyF,KAAI,SAAC3F,GAAD,OAAU,kBAAC,EAAD,CAAWA,KAAMA,EAAMuE,IAAKvE,EAAKlB,QAC9DyG,IASD5D,GAAYmB,IAAOC,IAAV,KAKTyC,GAAU1C,IAAOsB,EAAV,KAGF,SAACC,GAAD,OAAWA,EAAMlD,S,2MC/BrB,IAAMyE,GAAc,WAIzB,IAAMlF,EAAWC,cAJc,EAQCpC,mBAAS,MARV,mBAQxBC,EARwB,KAQdC,EARc,KASzBC,EAAOmH,QAAQrH,GAQfsH,EAAc,SAACnI,GACC,kBAATA,EACTc,EAAY,OAEZA,EAAY,MAfdiC,EP2FoC,SAACS,GAAD,MAAY,CAClDlE,KAAM,eACNC,QAASiE,GO7FE4E,CAgBYpI,MAIvB,OACE,oCACE,kBAACgF,EAAA,EAAD,CACEqD,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACd7E,QAlBc,SAACxB,GACnBpB,EAAYoB,EAAEsG,gBAkBVvD,KAAK,SAEL,kBAAC,KAAD,CAAemB,SAAS,WAE1B,kBAACqC,GAAA,EAAD,CACEtH,GAAG,YACHN,SAAUA,EACVE,KAAMA,EACN2H,QAASP,EACTQ,WAAY,CACVnH,MAAO,CACLoH,MAAO,OACPC,OAAQ,WAIXC,GAAWd,KAAI,SAAChI,EAAM+I,GAAP,OACd,kBAACC,GAAA,EAAD,CACE5I,MAAOJ,EACP4G,IAAKmC,EACLrF,QAASyE,EAAYc,KAAK,KAAMjJ,IAEhC,kBAACkJ,GAAD,CAAgB1F,MAAOxD,WAW7BkJ,GAAiB/D,YAAOP,KAAPO,CAAH,MACE,SAACuB,GAAD,OAAWA,EAAMlD,SAKjCsF,GAAa,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,yQCnFK,IA0EQK,GA1EO,WAKpB,IAAM7J,EAAOkB,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,aAAarB,QACvDsC,EAAQ+F,cANY,EAOJ/G,mBAAS,IAPL,mBAOnBwI,EAPmB,KAOdC,EAPc,KAQpBpG,EAAUC,KARU,EASUtC,mBAAkB,UAATtB,GATnB,mBASnBgK,EATmB,KASPC,EATO,KAcpBxG,EAAWC,cAGjBG,qBAAU,WACR,IAAMqG,EAAU,WACd,IAAMC,EAAQC,OAASC,OAAO,QACxBC,EAAOF,OAASC,OAAO,MAC7BN,EAAO,CAAEI,QAAOG,UAElBJ,IACAK,YAAYL,EAAS,OACpB,IAKH,IAAMM,EAAc,SAAC5H,GACnBA,EAAEyB,iBACF4F,GAAeD,GAjBQvG,ERiFY,CACrCzD,KAAM,iBQ5DAyK,EAAQT,EACZ,kBAACtE,EAAA,EAAD,CACEqD,aAAW,WACX7E,MAAM,UACNyB,KAAK,MACLvB,QAASoG,GAET,kBAAC,KAAD,CAAiB1D,SAAS,WAG5B,kBAACpB,EAAA,EAAD,CACEqD,aAAW,YACX7E,MAAM,UACNyB,KAAK,MACLvB,QAASoG,GAET,kBAAC,KAAD,CAAiB1D,SAAS,WAI9B,OACE,yBAAKtC,UAAWb,EAAQ+D,MACtB,kBAACgD,GAAA,EAAD,CAAQ1C,SAAS,UACf,kBAAC2C,GAAA,EAAD,KACE,kBAACC,GAAD,CAAOpG,UAAWb,EAAQnB,MAAO0B,MAAO5B,EAAMkG,QAAQ5B,KAAKiE,SACzD,8BAAOf,EAAIQ,KAAX,KACA,kBAACQ,GAAD,KAAQhB,EAAIK,QAGd,kBAAC,GAAD,MACCM,MAULG,GAAQ/E,IAAOkF,GAAV,MACA,SAAC3D,GAAD,OAAWA,EAAMlD,SAItB4G,GAAQjF,IAAOmF,KAAV,MAILpH,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCE,MAAO,CACLyI,SAAU,O,0DC1GDC,GAAYC,IAAMC,gBAClBC,GAAaH,GAAUI,SAEvBA,GAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAQpBjK,mBAPG,CACrBkK,uBAAuB,EACvBC,uBAAuB,EACvBC,cAAc,EACdC,SAAU,OAL4B,mBAQjCC,EARiC,KAQ7BC,EAR6B,KAWxC,OAAO,kBAACR,GAAD,CAAYvK,MAAO,CAAE8K,KAAIC,UAAUN,ICO/BO,GAAO,WAAM,MAIYxK,mBAAS,IAJrB,mBAIjByK,EAJiB,KAILC,EAJK,OAKFC,qBAAWf,IAAzBU,EALgB,EAKhBA,GAAIC,EALY,EAKZA,MALY,EAMqBhL,EAC3CkL,EACAC,GARsB,mBAMjBzI,EANiB,KAMJC,EANI,KAMa/B,EANb,KAUlBkC,EAAUC,KAKVH,EAAWC,cAUXmF,EAAc,SAACjG,GACnBA,EAAEyB,iBACFwH,EAAM,6BACDD,GADA,IAEHH,uBAAuB,EACvBD,uBAAuB,KAEzBQ,EAAc,KA0BhB,OACE,oCACE,kBAACE,GAAA,EAAD,CACEzK,KAAMmK,EAAGJ,uBAAyBI,EAAGH,sBACrCrC,QAASP,EACTsD,kBAAgB,oBAChBC,WAAW,EACXC,SAAS,KACTC,uBAAsB7K,GAEtB,kBAAC8K,GAAA,EAAD,CAAa1K,GAAG,qBAAhB,mBACA,0BAAM+C,SA9BS,SAAChC,IACpBA,EAAEyB,iBAEwB,KAAtB0H,EAAWlH,UACX+G,EAAGH,wBA1BPhI,EV4B4B,SAACsI,GAAD,MAAiB,CAC/C/L,KAAM,gCACNC,QAAS,CAAE8L,eU9BAS,CA2BIT,IACXC,EAAc,KAEZJ,EAAGJ,yBA7Be,SAACO,GACvBtI,EV6DiC,SAACsI,GAAD,MAAiB,CACpD/L,KAAM,oBACNC,QAAS8L,GU/DEU,CAAsBV,IA6B7BW,CAAgBX,GAChBC,EAAc,KAEhBH,EAAM,6BACDD,GADA,IAEHH,uBAAuB,EACvBD,uBAAuB,QAgBnB,kBAACmB,GAAA,EAAD,CAAenI,UAAWb,EAAQ+D,MAChC,kBAACkF,GAAA,EAAD,CACEC,MAAM,OACN7M,KAAK,OACLc,MAAOiL,EACPvG,SAxCS,SAAC5C,GACpBoJ,EAAcpJ,EAAEC,OAAO/B,QAwCbsL,WAAW,IAEb,6BACE,kBAAC1G,EAAA,EAAD,CACEtB,QAASZ,EACTmC,KAAK,QACLpB,KAAK,QACLL,MAAM,UACNM,UAAWb,EAAQiC,aAEnB,kBAAC,IAAD,OAEDrC,IAIL,kBAACuJ,GAAA,EAAD,KACE,kBAAC7I,EAAA,EAAD,CAAQG,QAASyE,EAAa3E,MAAM,aAApC,UAGA,kBAACD,EAAA,EAAD,CAAQC,MAAM,UAAUlE,KAAK,UAA7B,eAUG8L,MAGTlI,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCoF,KAAM,CACJpB,QAAS,OACTyG,WAAY,UAEdnH,YAAY,eACTtD,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BC,QAAS,a,4DC1FA0G,GAlCkB,SAAC5F,GAAU,IAIlC1G,EAAS0G,EAAT1G,KAJkC,EAKpBuL,qBAAWf,IAAzBU,EALkC,EAKlCA,GAAIC,EAL8B,EAK9BA,MAKNpI,EAAWC,cAajB,OACE,oCACE,kBAACuJ,GAAA,EAAD,CAAUjJ,QAAM,EAACI,QARO,SAACxB,GANE,IAACsK,EAO9BtK,EAAEyB,iBAP4B6I,EAQPxM,EAAKmB,GAP5B4B,EXuE4C,SAACyJ,GAAD,MAAa,CAC3DlN,KAAM,iCACNC,QAASiN,GWzEEC,CAAiCD,IAQ1CrB,EAAM,6BAAKD,GAAN,IAAUF,cAAc,OAMzB,kBAAC0B,GAAA,EAAD,KACE,kBAAC,KAAD,CAAYlJ,MAAM,YAEpB,kBAACmJ,GAAA,EAAD,CAAcxC,QAASnK,EAAKqL,gBC3BvBuB,GAAoB,WAK/B,IAAMC,EAAUrM,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMmM,WALd,EAMftB,qBAAWf,IAAzBU,EAN6B,EAM7BA,GAAIC,EANyB,EAMzBA,MACNlI,EAAUC,KAEZ4J,EAAW,GACfD,EAAQ7E,KAAI,SAAChI,GAAD,OACV8M,EAASC,KAAK,CAAE1B,WAAYrL,EAAKqL,WAAYlK,GAAInB,EAAKmB,QAgBxD,OACE,kBAACqK,GAAA,EAAD,CACE9C,QAPgB,SAACtI,GACnB+K,EAAM,6BAAKD,GAAN,IAAUF,cAAc,MAO3BS,kBAAgB,eAChB1K,KAAMmK,EAAGF,cAET,kBAACa,GAAA,EAAD,CAAa1K,GAAG,gBAAhB,gBACA,kBAAC,KAAD,CAAM2C,UAAWb,EAAQ+J,MACtBF,GACCA,EAAS9E,KAAI,SAAChI,GAAD,OACX,kBAAC,GAAD,CAAmBA,KAAMA,EAAM4G,IAAK5G,EAAKmB,SAG/C,kBAACoL,GAAA,EAAD,CAAUjJ,QAAM,EAACI,QAAS,WArB5ByH,EAAM,6BAAKD,GAAN,IAAUF,cAAc,EAAOD,uBAAuB,OAsBvD,kBAAC2B,GAAA,EAAD,KACE,kBAAC,IAAD,CAASlJ,MAAM,aAEjB,kBAACmJ,GAAA,EAAD,CAAcxC,QAAQ,2BASxBjH,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCoL,KAAM,CACJC,UAAW,QACXC,SAAU,cClDCC,GAhBc,WAS3B,OACE,oCACE,kBAAC,GAAD,Q,oSCWC,IAAMC,GAAQ,WAAM,MAIH7B,qBAAWf,IAAzBU,EAJiB,EAIjBA,GAAIC,EAJa,EAIbA,MACNkC,EAAU7M,aAAY,SAACC,GAAD,OAAWA,EAAM+B,SAAS6K,WAChDR,EAAUrM,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMmM,WAN1B,EAO+BjM,oBAAS,GAPxC,mBAOlB0M,EAPkB,KAOIC,EAPJ,OAQuC3M,oBAC9D,GATuB,mBAQlB4M,EARkB,KAQQC,EARR,OAWe7M,oBAAS,GAXxB,mBAWlBgC,EAXkB,KAWJjD,EAXI,OAYiCiB,oBAAS,GAZ1C,mBAYlB+B,EAZkB,KAYQ/C,EAZR,KAiBnBmD,EAAWC,cAKjBG,qBAAU,WAER1D,EACE4N,EACA1N,EACAC,EACA,SAIeyN,EC5DGK,MAAK,SAAC1N,GAC1B,OAAsB,IAAfA,EAAKmG,UD4DVsH,GAA4B,GAC5BF,GAAwB,KAExBE,GAA4B,GAC5BF,GAAwB,MAEzB,CAACF,IAKJ,IAiCM/J,EAASV,EACb,kBAACoC,EAAA,EAAD,CAAYxB,MAAM,YAAYE,QArBV,SAACxB,GACrBA,EAAEyB,iBAtCyBZ,EdQY,CACzCzD,KAAM,sBckDF,kBAAC,IAAD,OAGF,kBAAC0F,EAAA,EAAD,CACExB,MAAM,UACN6E,aAAW,aACXtE,SAAUpB,EACVe,QAxBiB,SAACxB,GACpBA,EAAEyB,iBA5C0BZ,EdMa,CAC3CzD,KAAM,yBc8DF,kBAAC,IAAD,OAGJ,OACE,oCACE,kBAACqO,GAAD,MACA,kBAAC,GAAD,MACA,kBAACC,GAAD,KAAgBtK,GAChB,kBAACuK,GAAD,KACE,kBAAC7I,EAAA,EAAD,CACEqD,aAAW,cACX7E,MAAM,UACNO,SAAUyJ,EACV9J,QAlCU,SAACxB,GACjBA,EAAEyB,iBACkC,IAAhCmK,OAAOC,KAAKlB,GAAS5M,OACvBkL,EAAM,6BAAKD,GAAN,IAAUH,uBAAuB,KAEtCI,EAAM,6BAAKD,GAAN,IAAUF,cAAc,MA8BzBgD,eAAe,GAEf,kBAAC,KAAD,OAEF,kBAAChJ,EAAA,EAAD,CACEqD,aAAW,SACXtE,SAAUuJ,EACV9J,MAAM,YACNE,QAlEa,SAACxB,GACpBA,EAAEyB,iBACF,IAAItE,EAAU,GACdgO,EAAQrF,KAAI,SAAChI,GAIX,OAHIA,EAAKmG,OACP9G,EAAQ0N,KAAK/M,EAAKmB,IAEbnB,KAjCW,SAACX,GAAY0D,EdPF,SAAC1D,GAAD,MAAc,CAC/CC,KAAM,iBACNC,QAASF,GcKmC4O,CAAoB5O,IAoC9D6O,CAAc7O,KA0DR,kBAAC,IAAD,UAQJuO,GAAgBzI,IAAOC,IAAV,MAMbyI,GAAiB1I,IAAOC,IAAV,MErJP+I,GAAiB,SAACzH,GAAW,IAChChH,EAAWgH,EAAXhH,OACAyB,EAAoBzB,EAApByB,GAAIoD,EAAgB7E,EAAhB6E,KAAM4B,EAAUzG,EAAVyG,MAFqB,EAGxBN,IAARK,EAHgC,oBAIjCnD,EAAWC,cAMjB,OACE,kBAACuJ,GAAA,EAAD,CAAUpL,GAAIA,EAAIuC,QALQ,SAACxB,GAC3BA,EAAEyB,iBAF8BZ,EhBmCD,SAAC+D,GAAD,MAAa,CAC9CxH,KAAM,iBACNC,QAASuH,GgBrCkCsH,CAG3BjN,KAGkCmC,QAAQ,EAAMsD,IAAKzF,GAChE+E,EAAK3B,EAAM4B,EAAO,IAAK,Y,wECQjBkI,GAAc,SAAC3H,GAI1B,IAAMzD,EAAUC,KACRoL,EAAmB5H,EAAnB4H,QAASvF,EAAUrC,EAAVqC,MALmB,EAMZnI,oBAAS,GANG,mBAM7BG,EAN6B,KAMvBC,EANuB,OAOVJ,mBACsC,IAA9D0N,EAAQC,QAAO,SAAC7O,GAAD,OAA6B,IAAjBA,EAAOyG,SAAiBlG,QARjB,mBAO7BkG,EAP6B,KAOtBqI,EAPsB,KAapCrL,qBAAU,WACsD,IAA9DmL,EAAQC,QAAO,SAAC7O,GAAD,OAA6B,IAAjBA,EAAOyG,SAAiBlG,OAC/CuO,GAAS,GACTA,GAAS,KACZ,CAACF,IAKJ,IAAMvL,EAAWC,cAQX3D,EAAUiP,GAAWA,EAAQtG,KAAI,SAACtI,GAAD,OAAYA,EAAOyB,MAS1D,OACE,oCACE,kBAAC,KAAD,CAAM0F,UAAU,KAAK/C,UAAWb,EAAQ+J,MACtC,kBAACT,GAAA,EAAD,CAAUzI,UAAWb,EAAQ+J,KAAMtJ,QAAS,SAACxB,GAAD,OAAOlB,GAASD,KAC1D,yBAAK+C,UAAWb,EAAQiD,MACtB,kBAAClB,EAAA,EAAD,CACExB,MAAM,UACNE,QAfS,SAACxB,GACpBA,EAAE+D,kBACFuI,GAAUrI,GACoD,IAA9DmI,EAAQC,QAAO,SAAC7O,GAAD,OAA6B,IAAjBA,EAAOyG,SAAiBlG,OAV5B,SAACZ,GACxB0D,EAASvD,EAAuBH,IAU5BoP,CAAiBpP,GAZC,SAACA,GAAY0D,EAAS3D,EAAsBC,IAa9DqP,CAAgBrP,IAWV4F,KAAK,QACL+I,eAAe,EACfW,oBAAoB,EACpB7K,UAAWb,EAAQ2L,aAEnB,kBAACrI,EAAA,EAAD,CAAUC,QAASL,EAAO3C,MAAM,aAEjCkG,KAAOX,GAAO8F,SAAS,KAAM,CAC5BC,QAAS,UACTC,QAAS,aACTC,SAAU,OACVC,QAAS,cACTC,SAAU,cACVC,SAAU,gBAId,kBAACC,GAAA,EAAD,KACGrO,EACC,kBAACiE,EAAA,EAAD,CAAYtB,QAAS,SAACxB,GAAD,OAAOlB,GAASD,IAAOkE,KAAK,OAC/C,kBAAC,KAAD,OAGF,kBAACD,EAAA,EAAD,CAAYtB,QAAS,SAACxB,GAAD,OAAOlB,GAASD,IAAOkE,KAAK,OAC/C,kBAAC,KAAD,SAKR,kBAACoK,GAAA,EAAD,CAAUC,GAAIvO,EAAMwO,QAAQ,OAAOC,eAAa,GAC7ClB,GACCA,EAAQtG,KAAI,SAAChI,GAAD,OACV,kBAAC,GAAD,CAAgBN,OAAQM,EAAM4G,IAAK5G,EAAKmB,UAIhD,kBAACsO,GAAA,EAAD,CAAS7L,QAAQ,aASjBV,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCoL,KAAM,CACJ0C,WAAY9N,EAAM2D,QAAQ,GAC1BoK,cAAe/N,EAAM2D,QAAQ,IAE/BqJ,YAAa,CACXjK,QAAS,KAGXuB,KAAM,CACJ1C,MAAO5B,EAAMkG,QAAQ5B,KAAK0J,UAC1BxJ,SAAU,cC5HDyJ,GAAc,SAACnJ,GAAU,IAI5B4H,EAAY5H,EAAZ4H,QAEJwB,EAAU,GACd,IAAK,IAAI/B,KAAQO,EAAS,CACxB,IAAIyB,EAASzB,EAAQP,GACrB+B,EAAQ/C,KACN,kBAAC,GAAD,CAAauB,QAASyB,EAAQnJ,IAAG,kBAAamH,GAAQhF,MAAOgF,KAIjE,OAAO,oCAAG+B,I,mZCHL,IAAME,GAAO,WAIlB,IAAMpO,EAAQ+F,cACR0F,EAAU7M,aAAY,SAACC,GAAD,OAAWA,EAAM+B,SAAS6K,WAL9B,EAMkBzM,qBANlB,mBAMjBqP,EANiB,KAMFC,EANE,KAYxB,OAJA/M,qBAAU,WACR+M,ECzBsB,SAACC,EAAOC,GAIhC,IAHA,IAAIC,EAAM,GACNC,EAAS,GAEJC,EAAI,EAAGA,EAAIJ,EAAMlQ,OAAQsQ,IAC5BJ,EAAMI,GAAGC,cAAcH,KAAQ,IAAMC,EAAS,IAClDA,EAAOvD,KAAKoD,EAAMI,IAClBF,EAAIF,EAAMI,GAAGC,YAAcF,EAG7B,OAAOD,EDeYI,CAAWpD,MAC3B,CAACA,IAGF,kBAACqD,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAatK,SAAS,WAEJ,IAAnBiH,EAAQpN,OACP,kBAAC,GAAD,CAASuD,MAAO5B,EAAMkG,QAAQ5B,KAAK6B,MAAnC,0BAIA,kBAAC,GAAD,CAAauG,QAAS2B,GAAiBA,IAGzC,kBAAC,GAAD,QAQAS,GAAcvL,YAAOlB,IAAPkB,CAAH,MAMX+E,GAAQ/E,IAAOwL,GAAV,MAKL9I,GAAU1C,IAAOsB,EAAV,MAGF,SAACC,GAAD,OAAWA,EAAMlD,S,oSEnDrB,IAgCQ4J,GAhCM,WAAM,MAOH7B,qBAAWf,IAAzBU,EAPiB,EAOjBA,GAAIC,EAPa,EAObA,MAOZ,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAACnG,EAAA,EAAD,CACEqD,aAAW,sBACX7E,MAAM,UACNE,QAZa,SAACxB,GACpBiJ,EAAM,6BAAKD,GAAN,IAAUJ,uBAAuB,MAYhCkD,eAAe,GAEf,kBAAC,KAAD,UAUJJ,GAAgBzI,IAAOC,IAAV,MAKbyI,GAAiB1I,IAAOC,IAAV,M,uCCxCPwL,GAAO,SAAClK,GAAU,IAIrB7F,EAAoD6F,EAApD7F,SAAUC,EAA0C4F,EAA1C5F,YAAa+P,EAA6BnK,EAA7BmK,WAAYC,EAAiBpK,EAAjBoK,aAErC7N,EAAUC,KAoBhB,OACE,oCACE,kBAAC6N,GAAD,CACE5P,GAAG,kBACHN,SAAUA,EACVmQ,aAAW,EACXjQ,KAAMmH,QAAQrH,GACd6C,QArBc,SAACxB,GACnBpB,EAAY,QAsBR,kBAACmQ,GAAD,CAAgBvN,QAdI,SAACxB,GACzBA,EAAEyB,iBACFmN,MAaM,kBAACI,GAAA,EAAD,CAAcpN,UAAWb,EAAQkO,YAC/B,kBAAC,IAAD,CAAY/K,SAAS,WAEvB,kBAACuG,GAAA,EAAD,CAAcxC,QAAQ,YAExB,kBAAC8G,GAAD,CAAgBvN,QAzBE,SAACxB,GACvBA,EAAEyB,iBACFkN,MAwBM,kBAACK,GAAA,EAAD,CAAcpN,UAAWb,EAAQkO,YAC/B,kBAAC,KAAD,CAAU/K,SAAS,WAErB,kBAACuG,GAAA,EAAD,CAAcxC,QAAQ,aAW1BjH,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCuP,WAAY,CACVC,YAAaxP,EAAM2D,QAAQ,QAIzBwL,GAAaM,cAAW,SAACzP,GAAD,MAAY,CACxC0P,MAAO,CACLC,UAAW3P,EAAM4P,QAAQ,OAFVH,EAIf,SAAC3K,GAAD,OACF,kBAAC+B,GAAA,EAAD,eACEgJ,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVnL,OAIFuK,GAAiBI,cAAW,SAACzP,GAAD,MAAY,CAC5CoF,KAAM,CACJ,0BAA2B,CACzB+K,SAAU,OAHOV,CAMnBrI,MClCWgJ,GAhDS,SAACtL,GAAU,IAIzB1G,EAAiB0G,EAAjB1G,KAAMwM,EAAW9F,EAAX8F,OAJmB,EAKlB3G,IAARK,EAL0B,oBAU3BnD,EAAWC,cAmBjB,OACE,oCACE,kBAACuJ,GAAA,EAAD,CAAU7I,QAZM,SAACxB,GACnBA,EAAEyB,iBATW,SAAC6I,EAAQyF,GACtBlP,EvB0D+B,SAACyJ,EAAQyF,GAAT,MAAwB,CACzD3S,KAAM,iBACNC,QAAS,CAAEiN,SAAQyF,cuB5DRC,CAAoB1F,EAAQyF,IASrCE,CAAO3F,EAAQxM,EAAKmB,KAUcmC,QAAQ,GACrC4C,EAAKlG,EAAKuE,KAAMvE,EAAKmG,MAAO,IAAK,UAClC,kBAACiJ,GAAA,EAAD,KACE,kBAACpK,EAAA,EAAD,CACEC,KAAK,MACLoD,aAAW,SACX7E,MAAM,YACNE,QAdW,SAACxB,GACpBA,EAAEyB,iBAZkB,SAAC6I,EAAQyF,GAC7BlP,EvB6D+B,SAACyJ,EAAQyF,GAAT,MAAwB,CACzD3S,KAAM,iBACNC,QAAS,CAAEiN,SAAQyF,cuB/DRG,CAAoB5F,EAAQyF,IAYrCI,CAAc7F,EAAQxM,EAAKmB,MAcnB,kBAAC,IAAD,W,0MClBL,IAyOQmR,GAzOM,SAAC5L,GAIpB,IAAMzD,EAAUC,KACRoL,EAAY5H,EAAZ4H,QACF1H,EAAM0H,EAAQnN,GACdkK,EAAaiD,EAAQjD,WACrBkH,EAAQjE,EAAQiE,MAClBC,EAAUC,iBAAO,MATS,EAUkB7R,oBAAS,GAV3B,mBAUvB8R,EAVuB,KAULC,EAVK,OAWJ/R,mBACoC,IAA5D2R,EAAMhE,QAAO,SAAC7O,GAAD,OAA6B,IAAjBA,EAAOyG,SAAiBlG,QAZrB,mBAWvBkG,EAXuB,KAWhBqI,EAXgB,OAcA5N,mBAAS,IAdT,mBAcvBiM,EAduB,KAcd+F,EAdc,OAeNhS,oBAAS,GAfH,mBAevBN,EAfuB,KAejBuS,EAfiB,OAgBEjS,mBAAS,MAhBX,mBAgBvBC,EAhBuB,KAgBbC,EAhBa,OAiBFF,mBAASyK,GAjBP,mBAiBvByH,EAjBuB,KAiBfC,EAjBe,OAkBMnS,oBAAS,GAlBf,mBAkBvBU,EAlBuB,KAkBX0R,EAlBW,OAmBe7S,EAC3C2S,EACAC,EACAzS,EACA0S,GAvB4B,mBAmBvBnQ,EAnBuB,KAmBVC,EAnBU,KAmBO/B,EAnBP,OAyBuBZ,EACnD0M,EACA+F,GA3B4B,oBAyBvBK,GAzBuB,MAyBHC,GAzBG,SA6BfrN,IAARK,GA7BuB,qBA+B9B/C,qBAAU,WACoD,IAA5DoP,EAAMhE,QAAO,SAAC7O,GAAD,OAA6B,IAAjBA,EAAOyG,SAAiBlG,OAC7CuO,GAAS,GACTA,GAAS,KACZ,CAAC+D,IAKJ,IAAMxP,GAAWC,cAIX3D,GAAUkT,GAASA,EAAMvK,KAAI,SAACtI,GAAD,OAAYA,EAAOyB,MAChDgS,GAAmB,SAACC,EAAexM,GAAhB,OACvB7D,GxBbkC,SAACqQ,EAAexM,GAAhB,MAAyB,CAC7DtH,KAAM,qBACNC,QAAS,CAAE6T,gBAAexM,QwBWfyM,CAAuBD,EAAexM,KAiF3C0M,GAAaZ,EACjB,kBAAC,KAAD,CAAgB5O,UAAWb,EAAQkO,aAEnC,kBAAC,KAAD,CAAYrN,UAAWb,EAAQkO,aAGjC,OACE,oCACE,kBAAC,KAAD,CAAMtK,UAAU,KAAK/C,UAAWb,EAAQ+J,MACtC,kBAACT,GAAA,EAAD,CAAUzI,UAAWb,EAAQ+J,KAAMtJ,QA9DtB,SAACxB,GAClBA,EAAE+D,kBACElF,GAAQT,GACZqS,GAAqBD,KA4Df,kBAAC,GAAD,KACE,kBAAC1N,EAAA,EAAD,CACEtB,QAtFS,SAACxB,GACpBsM,GAAUrI,GACVoM,GAAqE,IAA5DA,EAAMhE,QAAO,SAAC7O,GAAD,OAA6B,IAAjBA,EAAOyG,SAAiBlG,OAbnC,SAACZ,GACxB0D,GAASvD,EAAuBH,IAa5BoP,CAAiBpP,IAfC,SAACA,GAAY0D,GAAS3D,EAAsBC,IAgB9DqP,CAAgBrP,KAmFV4F,KAAK,QACL+I,eAAe,EACfW,oBAAoB,EACpBnL,MAAM,WAEL8P,IAEFhT,EAAO,KAAO4F,GAAKmF,EAAY,KAAM,IAAK,UAE3C,kBAACjK,EAAA,EAAD,CACEC,YAxDY,WAEtB,GADA2R,GAAc,GACQ,KAAlBF,EAAO3O,QAAiB2O,IAAWzH,EAIrC,OAHAwH,GAAQ,GACRE,EAAU1H,QACV2H,GAAc,GAGhBH,GAAQ,GACRM,GAAiBL,EAAQlM,IAgDftF,WAAYA,GAEZ,oCACE,kBAAC4K,GAAA,EAAD,CACE/K,GAAIyF,EACJxG,MAAO0S,EACPS,SAAUf,EACV1N,SApDS,SAAC5C,GACxB6Q,EAAU7Q,EAAEC,OAAO/B,QAoDL0D,UAAWxD,EAAO2C,EAAQuQ,UAAYvQ,EAAQwQ,aAC9CC,WA/EG,SAACxR,GAElB,GADA8Q,GAAc,GACA,UAAV9Q,EAAE0E,IAAiB,CACrB,GAAsB,KAAlBkM,EAAO3O,QAAiB2O,IAAWzH,EAGrC,OAFAwH,GAAQ,QACRE,EAAU1H,GAGZwH,GAAQ,GACRM,GAAiBL,EAAQlM,OAwEf,kBAAC5B,EAAA,EAAD,CACEtB,QAASZ,EACTmC,KAAK,QACLpB,KAAK,QACLL,MAAM,UACNM,UAAWxD,EAAO2C,EAAQK,OAASL,EAAQ0Q,WAE3C,kBAAC,IAAD,OAED9Q,KAKP,kBAACuM,GAAA,EAAD,KACE,kBAACpK,EAAA,EAAD,CACElB,UAAWb,EAAQkO,WACnBlM,KAAK,MACL+I,eAAe,EACfW,oBAAoB,EACpBjL,QA1HQ,SAACxB,GACnBpB,EAAYoB,EAAEsG,iBA2HJ,kBAAC,KAAD,OAEF,kBAAC,GAAD,CACElI,KAAMA,EACNuS,QAASA,EACThS,SAAUA,EACVC,YAAaA,EACb0R,QAASA,EACT3B,WAlFO,WACjBgC,GAASvS,GACT,IAAMiP,EAAUqE,YAAW,WACzBpB,EAAQqB,QAAQC,QAChBd,EAAc,cAEhB,OAAO,WACLe,aAAaxE,KA4ELuB,aAvES,YA3EA,SAAClK,GAAQ7D,GxBTE,SAAC6D,GAAD,MAAU,CAC1CtH,KAAM,gBACNC,QAASqH,GwBO8BoN,CAAmBpN,IA4ExDqN,CAAarN,QA0ET,kBAACyI,GAAA,EAAD,CAAUC,GAAIoD,EAAkBnD,QAAQ,OAAOC,eAAa,GACzD+C,GACCA,EAAMvK,KAAI,SAAChI,GAAD,OACR,kBAAC,GAAD,CAAUA,KAAMA,EAAM4G,IAAK5G,EAAKmB,GAAIqL,OAAQ5F,OAGhD,kBAAC2F,GAAA,EAAD,KACE,kBAACvH,EAAA,EAAD,CAAYC,KAAK,QAAQzB,MAAM,WAC7B,kBAAC,IAAD,OAEF,0BAAMU,SA/IK,SAAChC,GACpBA,EAAEyB,iBACqB,KAAnBkJ,EAAQ1I,UAlBe,SAACyC,EAAKiG,GACjC9J,GxBNsC,SAAC6D,EAAKiG,GAAN,MAAmB,CAC3DvN,KAAM,0BACNC,QAAS,CAAEqH,MAAKiG,YwBILqH,CAA2BtN,EAAKiG,IAkBzCsH,CAAqBvN,EAAKiG,GAC1B+F,EAAW,MA2I2BnO,YAAU,EAACC,aAAa,OACpD,kBAAC,IAAD,CACEH,KAAK,OACLjF,KAAK,OACLwF,SA7IO,SAAC5C,GACpB0Q,EAAW1Q,EAAEC,OAAO/B,QA6IRA,MAAOyM,KAGX,kBAAC7H,EAAA,EAAD,CACEtB,QAASwP,GACTjO,KAAK,QACLpB,KAAK,QACLL,MAAM,UACNM,UAAWb,EAAQiC,aAEnB,kBAAC,IAAD,OAED+N,MAIP,kBAACxD,GAAA,EAAD,CAAS7L,QAAQ,aAQjBgB,GAAMO,IAAOC,IAAV,MAOHlC,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCoL,KAAM,CACJ0C,WAAY9N,EAAM2D,QAAQ,GAC1BoK,cAAe/N,EAAM2D,QAAQ,IAE/B4L,WAAY,CACV3N,MAAO5B,EAAMkG,QAAQ5B,KAAK0J,WAE5B1J,KAAM,CACJ1C,MAAO5B,EAAMkG,QAAQ5B,KAAK0J,WAE5BwE,QAAS,CACPxO,QAAS,QAEX4N,UAAW,CACThQ,MAAO5B,EAAMkG,QAAQ5B,KAAK0J,WAE5B6D,aAAc,CACZ7N,QAAS,QAEXtC,OAAO,aACL+Q,cAAe,YACdzS,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BC,QAAS,SAGb+N,UAAU,aACRrM,SAAU,WACVE,IAAK,UACL8M,KAAM,WACL1S,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BC,QAAS,SAGbV,YAAY,eACTtD,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BC,QAAS,a,SCvTF2O,GAAQ,SAAC7N,GAAU,IAItB8N,EAAa9N,EAAb8N,SAEJ1E,EAAU,GAiBd,OAhBA0E,EAASxM,KAAI,SAAC6E,EAAS9D,GAAV,OACX+G,EAAQ/C,KACN,kBAAC,KAAD,CAAW0H,YAAa5H,EAAQ1L,GAAI4H,MAAOA,EAAOnC,IAAKiG,EAAQ1L,KAC5D,SAACuT,GAAD,OACC,yCACMA,EAASC,eACTD,EAASE,gBAFf,CAGEC,IAAKH,EAASI,WAEd,kBAAC,GAAD,CAAOxG,QAASzB,EAASjG,IAAKiG,EAAQ1L,aAOzC,oCAAG2O,I,mZCVL,IAAME,GAAO,WAIlB,IAAMpO,EAAQ+F,cACR5E,EAAWC,cACX6J,EAAUrM,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMmM,WAyBnD,OACE,kBAAC,KAAD,CAAiBkI,UAlBD,SAAChF,GAAY,IACrBiF,EAAwBjF,EAAxBiF,YAAaC,EAAWlF,EAAXkF,OAEhBD,IAKHA,EAAYE,cAAgBD,EAAOC,aACnCF,EAAYjM,QAAUkM,EAAOlM,OAZb,SAACoM,EAAOH,GAC1BjS,E1BuF8B,SAACoS,EAAOH,GAAR,MAAyB,CACzD1V,KAAM,gBACNC,QAAS,CAAE4V,QAAOH,gB0BzFPI,CAAmBD,EAAOH,IAgBnCK,CAAYL,EAAYjM,MAAOkM,EAAOlM,UAKpC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAU3C,SAAS,WAEpByG,GAA8B,IAAnBA,EAAQ5M,OAClB,kBAAC,KAAD,CAAWiV,YAAY,SACpB,SAACR,GAAD,OACC,uCACE9N,IAAK,GACD8N,EAASY,gBAFf,CAGET,IAAKH,EAASI,WAEd,kBAAC,GAAD,CAAYN,SAAU3H,IACrB6H,EAAS7P,gBAKhB,kBAAC,GAAD,CAASrB,MAAO5B,EAAMkG,QAAQ5B,KAAK6B,MAAnC,0BAKF,kBAAC,GAAD,SASF2I,GAAcvL,YAAOlB,IAAPkB,CAAH,MAMX+E,GAAQ/E,IAAOwL,GAAV,MAKL9I,GAAU1C,IAAOsB,EAAV,MAGF,SAACC,GAAD,OAAWA,EAAMlD,S,UCtFf+R,GAAO,WAClB,IAAMtS,EAAUC,KAEhB,OACE,oCACE,kBAAC,GAAD,MACA,kBAACsS,GAAA,EAAD,CAAMC,WAAS,EAAClQ,QAAS,GACvB,kBAACiQ,GAAA,EAAD,CAAMxV,MAAI,EAAC0V,GAAI,GAAIC,GAAI,EAAG7R,UAAWb,EAAQ2S,MAC3C,kBAAC,GAAD,OAGF,kBAACJ,GAAA,EAAD,CAAMxV,MAAI,EAAC0V,GAAI,GAAIC,GAAI,EAAG7R,UAAWb,EAAQ4S,MAC3C,kBAAC,EAAD,MACA,kBAAC,GAAD,OAGF,kBAACL,GAAA,EAAD,CAAMxV,MAAI,EAAC0V,GAAI,GAAIC,GAAI,EAAG7R,UAAWb,EAAQ6S,MAC3C,kBAAC,GAAD,UAOJ5S,GAAYmC,aAAW,SAACzD,GAAD,MAAY,CACvCgU,KAAK,eACFhU,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BoQ,MAAO,IAGXF,KAAK,eACFjU,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BoQ,MAAO,IAGXD,KAAK,eACFlU,EAAM8D,YAAYC,KAAK,MAAQ,CAC9BoQ,MAAO,Q,8QCjDN,IAAMC,GAAcC,YAAH,MAGR,qBAAGrU,MAAkBkG,QAAQoO,WAAWC,WAC9C,qBAAGvU,MAAkBkG,QAAQ5B,KAAKiE,W,oBCW/BiM,GAAM,WAAO,IAAD,ECdD,WACtB,IAAMC,EAAU7V,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,gBADvB,EAEFC,qBAFE,mBAErBgB,EAFqB,KAEd0U,EAFc,KAwB5B,OArBAC,2BAAgB,WACdD,EAAS,CACPxO,QAAS,CACPxI,KAAM+W,EAAQ/W,KACd6K,QAAS,CACPqM,KAAMH,EAAQ7S,OAEhBoM,UAAW,CACT4G,KAAM,YAGV9Q,YAAa,CACX+Q,OAAQ,CACNf,GAAI,EACJC,GAAI,IACJe,GAAI,WAIT,CAACL,IAEG,CAACzU,GDTQ+F,GAAT/F,EADgB,oBAGjB+U,EAAcC,aAAehV,GACnC,OACE,kBAAC,GAAD,KACE,kBAACoU,GAAD,CAAapU,MAAO+U,IACpB,kBAACE,GAAA,EAAD,CAAejV,MAAO+U,GACpB,kBAAC,GAAD,SEbYzO,QACW,cAA7B4O,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aClBOC,GAAyB,SAACC,EAAkBhV,GACvD,IAAK,IAAIiV,EAAI,EAAGA,EAAID,EAAiBlX,OAAQmX,IACvCjV,EAAOkV,SAASF,EAAiBC,GAAGjW,KACtCgW,EAAiBG,OAAOF,IAAK,GAGjC,OAAOD,GCNII,GAA0B,SACrCJ,EACAhV,EACAqV,EACAC,GAEA,IAAK,IAAIL,EAAI,EAAGA,EAAID,EAAiBlX,OAAQmX,IACvCjV,EAAOkV,SAASF,EAAiBC,GAAGjW,MACtCgW,EAAiBC,GAAGI,GAAQC,GAGhC,OAAON,GCPHO,GAAe,CAAEnV,MAAO,GAAI8K,QAAS,IAwH5BsK,OAtHR,WAAkE,IAAD,EAClEC,EACA7H,EAFyBtP,EAAyC,uDAAjCiX,GAAiC,yCAAjBpY,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAI3D,OAAQD,GACN,IAAK,WACH,OAAO,6BACFmB,GADL,IAEE8B,MAAM,CAAEhD,GAAH,oBAAekB,EAAM8B,UAE9B,IAAK,cACH,OAAO,6BACF9B,GADL,IAEE8B,MAAO9B,EAAM8B,MAAMyF,KAAI,SAAC3F,GAAD,OACrBA,EAAKlB,KAAO5B,EAAZ,6BAA2B8C,GAA3B,IAAiCgB,UAAWhB,EAAKgB,WAAahB,OAIpE,IAAK,YAQH,OAPAuV,EAAanX,EAAM8B,MAAMgM,QAAO,SAAClM,GAAD,OAAUA,EAAKlB,KAAO5B,MAE3CyI,KAAI,SAAChI,GAGd,OAFAA,EAAKwQ,WAAa9G,OAASC,OAAO,cAClC3J,EAAKmG,OAAQ,EACNnG,KAEF,6BACFS,GADL,IAEE8B,MAAO9B,EAAM8B,MAAMgM,QAAO,SAAClM,GAAD,OAAUA,EAAKlB,KAAO5B,KAChD8N,SAAS,EAAAuK,GAAWC,OAAX,qBAAqBpX,EAAM4M,YAExC,IAAK,cACH,OAAO,6BACF5M,GADL,IAEE8B,MAAO9B,EAAM8B,MAAMgM,QAAO,SAAClM,GAAD,OAAUA,EAAKlB,KAAO5B,OAGpD,IAAK,aACH,OAAO,6BACFkB,GADL,IAEE8B,MAAO9B,EAAM8B,MAAMyF,KAAI,SAAC3F,GAAD,OACrBA,EAAKgB,SAAWhB,EAAhB,6BAA4BA,GAA5B,IAAkCgB,UAAU,SAIlD,IAAK,eAOH,OANAuU,EAAanX,EAAM8B,MAAMgM,QAAO,SAAClM,GAAD,OAA4B,IAAlBA,EAAKgB,aACpC2E,KAAI,SAACqF,GAGd,OAFAA,EAAQmD,WAAa9G,OAASC,OAAO,cACrC0D,EAAQlH,OAAQ,EACTkH,KAEF,6BACF5M,GADL,IAEE8B,MAAO9B,EAAM8B,MAAMgM,QAAO,SAAClM,GAAD,OAA4B,IAAlBA,EAAKgB,YACzCgK,QAASuK,EAAWC,OAAOpX,EAAM4M,WAGrC,IAAK,eACH,OAAO,6BACF5M,GADL,IAEE8B,MAAO9B,EAAM8B,MAAMyF,KAAI,SAAC3F,GAAD,OACrBA,EAAKgB,SAAL,6BAAqBhB,GAArB,IAA2BgB,UAAU,IAAUhB,OAGrD,IAAK,iBACH,OAAO,6BACF5B,GADL,IAEE4M,QAAS5M,EAAM4M,QAAQrF,KAAI,SAAC3F,GAAD,OACzBA,EAAKlB,KAAO5B,EAAZ,6BAA2B8C,GAA3B,IAAiC8D,OAAQ9D,EAAK8D,QAAU9D,OAI9D,IAAK,mBAIH,OAHAuV,EAAU,aAAOnX,EAAM4M,SACvB0C,EAASwH,GAAwBK,EAAYrY,EAAS,SAAS,GAExD,6BACFkB,GADL,IAEE4M,QAAS0C,IAGb,IAAK,iBAGH,OAFA6H,EAAU,aAAOnX,EAAM4M,SACvB0C,EAASmH,GAAuBU,EAAYrY,GACrC,6BACFkB,GADL,IAEE4M,QAAS0C,IAGb,IAAK,qBACH,OAAO,6BACFtP,GADL,IAEE4M,QAAS5M,EAAM4M,QAAQrF,KAAI,SAAC3F,GAAD,OACzBA,EAAK8D,MAAQ9D,EAAb,6BAAyBA,GAAzB,IAA+B8D,OAAO,SAI5C,IAAK,kBACH,OAAO,6BACF1F,GADL,IAEE4M,QAAS5M,EAAM4M,QAAQrF,KAAI,SAAC3F,GAAD,OACzBA,EAAK8D,MAAL,6BAAkB9D,GAAlB,IAAwB8D,OAAO,IAAU9D,OAG/C,IAAK,oBAGH,OAFAuV,EAAU,aAAOnX,EAAM4M,SACvB0C,EAASwH,GAAwBK,EAAYrY,EAAS,SAAS,GACxD,6BACFkB,GADL,IAEE4M,QAAS0C,IAGb,QACE,OAAOtP,ICxHAqX,GAAS,SAAC3H,EAAOpH,EAAOgP,GACnC,IAAM3X,EAAQ+P,EAAMpH,GACdiP,EAAO7H,EAAM8H,MAAMlP,EAAQ,GAIjC,OAHAoH,EAAMmH,OAAOvO,GACbmP,MAAMC,UAAUpL,KAAKqL,MAAMjI,EAAO6H,GAClC7H,EAAMmH,OAAOS,EAAI,EAAG3X,GACb+P,GCJHuH,GAAe,CACnB7K,QAAS,GACTlM,aAAc,CAAE6C,MAAO,UAAWlE,KAAM,UAgH3B+Y,OA7GR,WAAgE,IACjEC,EADuB7X,EAAyC,uDAAjCiX,GAAiC,yCAAjBpY,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAEzD,OAAQD,GACN,IAAK,qBAMH,OALAgZ,EAAa7X,EAAMoM,QAAQ7E,KAAI,SAAChI,GAAD,OAC7BA,EAAKmB,KAAO5B,EAAQqH,IAApB,6BACS5G,GADT,IACeqL,WAAY9L,EAAQ6T,gBAC/BpT,KAEC,6BACFS,GADL,IAEEoM,QAASyL,IAEb,IAAK,gBAEH,OADAA,EAAa7X,EAAMoM,QAAQ0B,QAAO,SAACvO,GAAD,OAAUA,EAAKmB,KAAO5B,KACjD,6BACFkB,GADL,IAEEoM,QAASyL,IAEb,IAAK,0BAaH,OAZAA,EAAa7X,EAAMoM,QAAQ7E,KAAI,SAAChI,GAAD,OAC7BA,EAAKmB,KAAO5B,EAAQqH,IAApB,6BAES5G,GAFT,IAGMuS,MAAOvS,EAAKuS,MAAMsF,OAAO,CACvB1W,GAAImD,cACJ6B,OAAO,EACP5B,KAAMhF,EAAQsN,YAGlB7M,KAEC,6BACFS,GADL,IAEEoM,QAASyL,IAEb,IAAK,iBAWH,OAVAA,EAAa7X,EAAMoM,QAAQ7E,KAAI,SAAChI,GAAD,OAC7BA,EAAKmB,KAAO5B,EAAQiN,OAApB,6BAESxM,GAFT,IAGMuS,MAAOvS,EAAKuS,MAAMvK,KAAI,SAACuQ,GAAD,OACpBA,EAAGpX,KAAO5B,EAAQ0S,UAAlB,6BAAmCsG,GAAnC,IAAuCpS,OAAQoS,EAAGpS,QAAUoS,OAGhEvY,KAEC,6BACFS,GADL,IAEEoM,QAASyL,IAGb,IAAK,iBASH,OARAA,EAAa7X,EAAMoM,QAAQ7E,KAAI,SAAChI,GAAD,OAC7BA,EAAKmB,KAAO5B,EAAQiN,OAApB,6BAESxM,GAFT,IAGMuS,MAAOvS,EAAKuS,MAAMhE,QAAO,SAACgK,GAAD,OAAQA,EAAGpX,KAAO5B,EAAQ0S,eAErDjS,KAEC,6BACFS,GADL,IAEEoM,QAASyL,IAGb,IAAK,oBAMH,OALAA,EAAa7X,EAAMoM,QAAQgL,OAAO,CAChC1W,GAAImD,cACJ+G,WAAY9L,EACZgT,MAAO,KAEF,6BACF9R,GADL,IAEEoM,QAASyL,IAGb,IAAK,eACH,OAAO,6BACF7X,GADL,IAEEE,aAAa,6BACRF,EAAME,cADC,IAEV6C,MAAOjE,MAIb,IAAK,cACH,OAAO,6BACFkB,GADL,IAEEE,aAAa,6BACRF,EAAME,cADC,IAEVrB,KAAkC,UAA5BmB,EAAME,aAAarB,KAAmB,OAAS,YAI3D,IAAK,gBACH,IAAIkZ,EAAW,aAAO/X,EAAMoM,SAI5B,OAFAyL,EAAaR,GAAOU,EAAajZ,EAAQyV,YAAazV,EAAQ4V,OAEvD,6BACF1U,GADL,IAEEoM,QAASyL,IAEb,QACE,OAAO7X,IChHAgY,GAA2B,SAACtB,EAAkBhV,GAEzD,IADA,IAAIuW,EAAW,GACNtB,EAAI,EAAGA,EAAID,EAAiBlX,OAAQmX,IACvCjV,EAAOkV,SAASF,EAAiBC,GAAGjW,KACtCuX,EAAS3L,KAAKoK,EAAiBC,IAGnC,OAAOsB,G,aCWHC,GATOC,aAAaC,QAAQ,QAC9BC,KAAKC,MAAMH,aAAaC,QAAQ,SAChC,CACErW,SAAU,CAAED,MAAO,GAAI8K,QAAS,IAChC3M,MAAO,CACLmM,QAAS,GACTlM,aAAc,CAAE6C,MAAO,UAAWlE,KAAM,WAK1C0Z,GAAQC,cCfP,SAAqBxY,EAArB,GAAgD,IACjDyY,EACAZ,EACAvI,EAH+BzQ,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAIrC4Z,EAAY,GAKhB,OAJA1Y,EAAM+B,SAAS6K,QAAQ+L,SAAQ,SAACpZ,GAC9BmZ,EAAUpM,KAAK/M,EAAKmB,OAGd7B,GACN,IAAK,gCAmBH,OAlBA4Z,EAAW,aAAOzY,EAAM+B,SAAS6K,SAEjCiL,GADAA,EAAaG,GAAyBS,EAAaC,IAC3BnR,KAAI,SAAC3F,GAE3B,cADOA,EAAKgB,SACL,6BACFhB,GADL,IAEElB,GAAImD,cACJ6B,OAAO,OAGX4J,EAAS,CACP,CACE5O,GAAImD,cACJ+G,WAAY9L,EAAQ8L,WACpBkH,MAAM,aAAK+F,KAIR,CACL9V,SAAUmV,GAAe,6BAElBlX,EAAM+B,UAFW,IAGpB6K,QAAS5M,EAAM+B,SAAS6K,QAAQrF,KAAI,SAAChI,GACnC,OAAO,6BACFA,GADL,IAEEmG,OAAO,SAIb,CAAE7G,OAAMC,YAEVmB,MAAO2X,GAAa,6BAEb5X,EAAMC,OAFM,IAGfmM,QAASpM,EAAMC,MAAMmM,QAAQgL,OAAO9H,KAEtC,CAAEzQ,OAAMC,aAId,IAAK,iCAYH,OAXA2Z,EAAW,aAAOzY,EAAM+B,SAAS6K,SAEjCiL,GADAA,EAAaG,GAAyBS,EAAaC,IAC3BnR,KAAI,SAAC3F,GAE3B,cADOA,EAAKgB,SACL,6BACFhB,GADL,IAEElB,GAAImD,cACJ6B,OAAO,OAIJ,CACL3D,SAAUmV,GAAe,6BAElBlX,EAAM+B,UAFW,IAGpB6K,QAAS5M,EAAM+B,SAAS6K,QAAQrF,KAAI,SAAChI,GACnC,OAAO,6BACFA,GADL,IAEEmG,OAAO,SAIb,CAAE7G,OAAMC,YAEVmB,MAAO2X,GAAa,6BAEb5X,EAAMC,OAFM,IAGfmM,QAASpM,EAAMC,MAAMmM,QAAQ7E,KAAI,SAAChI,GAAD,OAC/BA,EAAKmB,KAAO5B,EAAZ,6BACSS,GADT,IACeuS,MAAOvS,EAAKuS,MAAMsF,OAAOS,KACpCtY,OAGR,CAAEV,OAAMC,aAId,QACE,MAAO,CACLiD,SAAUmV,GAAelX,EAAM+B,SAAU,CAAElD,OAAMC,YACjDmB,MAAO2X,GAAa5X,EAAMC,MAAO,CAAEpB,OAAMC,gBD3E/CoZ,GACA7B,OAAOuC,mBAAqBvC,OAAOuC,qBAGrCL,GAAMM,WAAU,WACdV,aAAaW,QAAQ,OAAQT,KAAKU,UAAUR,GAAMS,gBAGpDC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAUZ,MAAOA,IACf,kBAAC,GAAD,QAGJa,SAASC,eAAe,SP+FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM1S,c","file":"static/js/main.e8ecde0e.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                TODO ACTIONS                                */\n/* -------------------------------------------------------------------------- */\n\n/* ----------------------------------- ADD ---------------------------------- */\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               HISTORY ACTIONS                              */\n/* -------------------------------------------------------------------------- */\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\nexport const selectHistoriesAction = (todoIds) => ({\n  type: \"SELECT_HISTORIES\",\n  payload: todoIds,\n});\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\nexport const uncheckHistoriesAction = (todoIds) => ({\n  type: \"UNCHECK_HISTORIES\",\n  payload: todoIds,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               ROUTINE ACTIONS                              */\n/* -------------------------------------------------------------------------- */\nexport const addRoutineAction = (folderName) => ({\n  type: \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\",\n  payload: { folderName },\n});\n\nexport const changeFolderNameAction = (newFolderName, key) => ({\n  type: \"CHANGE_FOLDER_NAME\",\n  payload: { newFolderName, key },\n});\n\nexport const DeleteFolderAction = (key) => ({\n  type: \"DELETE_FOLDER\",\n  payload: key,\n});\n\nexport const addRoutineFromFolderAction = (key, routine) => ({\n  type: \"ADD_ROUTINE_FROM_FOLDER\",\n  payload: { key, routine },\n});\n\nexport const toggleRoutineAction = (listId, routineId) => ({\n  type: \"TOGGLE_ROUTINE\",\n  payload: { listId, routineId },\n});\n\nexport const deleteRoutineAction = (listId, routineId) => ({\n  type: \"DELETE_ROUTINE\",\n  payload: { listId, routineId },\n});\n\nexport const addNewRoutineToExistFolderAction = (listId) => ({\n  type: \"ADD_NEW_ROUTINE_TO_EXIT_FOLDER\",\n  payload: listId,\n});\n\nexport const createNewFolderAction = (folderName) => ({\n  type: \"CREATE_NEW_FOLDER\",\n  payload: folderName,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                                USER SETTINGS                               */\n/* -------------------------------------------------------------------------- */\nexport const changeSettingColorAction = (color) => ({\n  type: \"CHANGE_COLOR\",\n  payload: color,\n});\n\nexport const changeTypeAction = () => ({\n  type: \"CHANGE_TYPE\",\n});\n\nexport const DragAndDropActions = (sorce, destination) => ({\n  type: \"DRAG_AND_DROP\",\n  payload: { sorce, destination },\n});\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport Popper from \"@material-ui/core/Popper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nexport const useEmojiPicker = (value, setValue, edit, __setMountEvent) => {\n  const type = useSelector((state) => state.users.userSettings.type);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [mountEvent, setMountEvent] = useState(false);\n  const id = open ? \"popper\" : undefined;\n\n  const handleEmojiOpen = (e) => {\n    if (edit && !edit) return;\n    __setMountEvent && __setMountEvent(false);\n    setAnchorEl(anchorEl ? null : e.target);\n    setOpen(open ? false : true);\n    setMountEvent(\"onClick\");\n  };\n\n  const handleEmojiSelect = (emoji) => {\n    setValue(`${value + emoji.native}`);\n  };\n\n  const handleAway = () => {\n    setOpen(false);\n    setAnchorEl(null);\n    setMountEvent(false);\n    __setMountEvent && __setMountEvent(\"onClick\");\n  };\n  const emojipicker = (\n    <ClickAwayListener onClickAway={handleAway} mouseEvent={mountEvent}>\n      <Popper\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        style={{ zIndex: \"99999\" }}\n      >\n        <Picker\n          set=\"twitter\"\n          sheetSize={32}\n          theme={type === \"light\" ? \"light\" : \"dark\"}\n          perLine={7}\n          title=\"\"\n          emoji=\"\"\n          onSelect={handleEmojiSelect}\n        />\n      </Popper>\n    </ClickAwayListener>\n  );\n  return [emojipicker, handleEmojiOpen, open];\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../../store/actions\";\nimport { selectAllAction } from \"../../store/actions\";\nimport { executeAction } from \"../../store/actions\";\nimport { uncheckAction } from \"../../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useEmojiPicker } from \"../../hooks/useEmojiPicker\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport { IconButton } from \"@material-ui/core\";\n\nexport const TodoInput = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.projects.todos);\n  const [isActiveButton, setIsActiveButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n  const [emojipicker, handleEmojiOpen] = useEmojiPicker(todo, setTodo);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n  const classes = useStyles();\n\n  useEffect(() => {\n    const indicatorOfExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorOfExecuteButton === undefined || todos.length === 0) {\n      setIsActiveButton(true);\n    } else {\n      setIsActiveButton(false);\n    }\n  }, [todos]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              HANDLE FUNCTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <Button\n      color=\"secondary\"\n      startIcon={<UndoIcon />}\n      onClick={handleUncheck}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Uncheck All\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Select All\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n              autoFocus={true}\n            />\n            <IconButton\n              onClick={handleEmojiOpen}\n              edge=\"start\"\n              size=\"small\"\n              color=\"default\"\n              className={classes.emojiButton}\n            >\n              <EmojiEmotionsIcon />\n            </IconButton>\n            {emojipicker}\n\n            <IconButton\n              type=\"submit\"\n              color=\"primary\"\n              size=\"small\"\n              edge=\"end\"\n              className={classes.button}\n            >\n              <AddIcon />\n            </IconButton>\n          </Box>\n          {button}\n          <Button\n            onClick={handleExecute}\n            startIcon={<DoneIcon />}\n            disabled={isActiveButton}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n          >\n            Done\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Box = styled.div``;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    lineHeight: \"initial\",\n  },\n  emojiButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport const useHideText = () => {\n  const [hidden, setHidden] = useState(false);\n  const handleShow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setHidden(!hidden);\n  };\n  const text = (text, check, margin, fontSize) => (\n    <Text check={check} active={hidden} margin={margin} fontSize={fontSize}>\n      {check === null ? null : (\n        <Checkbox type=\"checkbox\" checked={check} color=\"default\" />\n      )}\n      <span onClick={handleShow}>{text}</span>\n    </Text>\n  );\n  return [text];\n};\n\nconst Text = styled.p`\n  display: inline-block;\n  margin: ${(props) => props.margin};\n  font-size: ${(props) => props.fontSize};\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  text-decoration: ${(props) => (props.check ? \"line-through\" : null)};\n  ${({ active }) =>\n    active &&\n    `\n  cursor: pointer;\n  word-wrap: break-word;\n  text-overflow: initial;\n  overflow: initial;\n  white-space: initial;\n  `}\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useHideText } from \"../../hooks/useHideText\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const TodoItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { todo } = props;\n  const classes = useStyles();\n  const [text] = useHideText();\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleToggle = (e) => {\n    e.preventDefault();\n    toggleTodo(todo.id);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteTodo(todo.id);\n  };\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    doneTodo(todo.id);\n  };\n\n  return (\n    <>\n      <Paper\n        key={todo.id}\n        component=\"div\"\n        onClick={handleToggle}\n        className={classes.root}\n      >\n        {text(todo.name, todo.complete, \"1rem 0\", \"1.4rem\", \"100%\")}\n\n        <IconButton\n          color=\"secondary\"\n          onClick={handleDelete}\n          className={classes.deleteButton}\n          size=\"small\"\n        >\n          <DeleteIcon />\n        </IconButton>\n\n        <ItemRight>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<DoneIcon />}\n            disabled={!todo.complete}\n            onClick={handleDone}\n            className={classes.doneButton}\n            size=\"small\"\n          >\n            Done\n          </Button>\n        </ItemRight>\n      </Paper>\n    </>\n  );\n};\n\nexport default TodoItems;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    margin: \"1rem 1rem 0 0\",\n    padding: 0,\n  },\n  doneButton: {\n    lineHeight: \"initial\",\n  },\n}));\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { TodoItems } from \"./TodoItems\";\n\nexport const TodoList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const todos = useSelector((state) => state.projects.todos);\n\n  //toggle component\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos && todos.map((todo) => <TodoItems todo={todo} key={todo.id} />)}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.4rem;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ACTIONS -------------------------------- */\nimport { changeSettingColorAction } from \"../../store/actions\";\n\n/* --------------------------------- style -------------------------------- */\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\nexport const ColorPicker = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   state                                  */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const changeSettingColor = (color) =>\n    dispatch(changeSettingColorAction(color));\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      changeSettingColor(item);\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        edge=\"start\"\n      >\n        <ColorLensIcon fontSize=\"large\" />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            height: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            <StyledBoxColor color={item} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ColorPicker;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst colorArray = [\n  \"#2196f3\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\n/* --------------------------------- ACTIONS -------------------------------- */\nimport { changeTypeAction } from \"../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { ColorPicker } from \"./ColorPicker\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport const Navbar = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const type = useSelector((state) => state.users.userSettings.type);\n  const theme = useTheme();\n  const [now, setNow] = useState(\"\");\n  const classes = useStyles();\n  const [isDarkMode, setIsDarkMode] = useState(type === \"light\" ? true : false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               DISPATCH ACTION                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const changeType = () => dispatch(changeTypeAction());\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handle　actions                             */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    changeType();\n  };\n\n  // toggle component\n  const icons = isDarkMode ? (\n    <IconButton\n      aria-label=\"darkmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness4Icon fontSize=\"large\" />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label=\"lightmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness7Icon fontSize=\"large\" />\n    </IconButton>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Title className={classes.title} color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <ColorPicker />\n          {icons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\n/* ---------------------------------- style --------------------------------- */\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n","import React, { useState } from \"react\";\n\nexport const UiContext = React.createContext();\nexport const UiProvider = UiContext.Provider;\n\nexport const Provider = ({ children }) => {\n  const UiInitialState = {\n    dialogFormFromRoutine: false,\n    dialogFormFromHistory: false,\n    dialogFolder: false,\n    ahchorEl: null,\n  };\n\n  const [Ui, setUi] = useState(UiInitialState);\n\n  //\n  return <UiProvider value={{ Ui, setUi }}>{children}</UiProvider>;\n};\n","import React, { useState, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport { addRoutineAction, createNewFolderAction } from \"../../store/actions\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useEmojiPicker } from \"../../hooks/useEmojiPicker\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Form = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const [folderName, setFolderName] = useState(\"\");\n  const { Ui, setUi } = useContext(UiContext);\n  const [emojipicker, handleEmojiOpen, open] = useEmojiPicker(\n    folderName,\n    setFolderName\n  );\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addRoutine = (todoIds, folderName) =>\n    dispatch(addRoutineAction(todoIds, folderName));\n  const createNewFolder = (folderName) =>\n    dispatch(createNewFolderAction(folderName));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n    setFolderName(\"\");\n  };\n\n  const handleChange = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (folderName.trim() === \"\") return;\n    if (Ui.dialogFormFromHistory) {\n      addRoutine(folderName);\n      setFolderName(\"\");\n    }\n    if (Ui.dialogFormFromRoutine) {\n      createNewFolder(folderName);\n      setFolderName(\"\");\n    }\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  return (\n    <>\n      <Dialog\n        open={Ui.dialogFormFromRoutine || Ui.dialogFormFromHistory}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"xs\"\n        disableBackdropClick={open ? true : false}\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a folder</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent className={classes.root}>\n            <TextField\n              label=\"name\"\n              type=\"text\"\n              value={folderName}\n              onChange={handleChange}\n              fullWidth={true}\n            ></TextField>\n            <div>\n              <IconButton\n                onClick={handleEmojiOpen}\n                edge=\"start\"\n                size=\"small\"\n                color=\"default\"\n                className={classes.emojiButton}\n              >\n                <EmojiEmotionsIcon />\n              </IconButton>\n              {emojipicker}\n            </div>\n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Form;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  emojiButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import React, { useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ACITONS -------------------------------- */\nimport { addNewRoutineToExistFolderAction } from \"../../../store/actions\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersItem = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { item } = props;\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addHistoryToExitFolder = (listId) =>\n    dispatch(addNewRoutineToExistFolderAction(listId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleListItemClick = (e) => {\n    e.preventDefault();\n    addHistoryToExitFolder(item.id);\n    setUi({ ...Ui, dialogFolder: false });\n  };\n\n  return (\n    <>\n      <ListItem button onClick={handleListItemClick}>\n        <ListItemAvatar>\n          <FolderIcon color=\"action\" />\n        </ListItemAvatar>\n        <ListItemText primary={item.folderName} />\n      </ListItem>\n    </>\n  );\n};\nexport default DialogFoldersItem;\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DialogFoldersItem from \"./Item\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const routine = useSelector((state) => state.users.routine);\n  const { Ui, setUi } = useContext(UiContext);\n  const classes = useStyles();\n\n  let keyArray = [];\n  routine.map((item) =>\n    keyArray.push({ folderName: item.folderName, id: item.id })\n  );\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleDialogFormOpen = () => {\n    setUi({ ...Ui, dialogFolder: false, dialogFormFromHistory: true });\n  };\n\n  const handleClose = (value) => {\n    setUi({ ...Ui, dialogFolder: false });\n    if (typeof value !== \"string\") return;\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"dialog-title\"\n      open={Ui.dialogFolder}\n    >\n      <DialogTitle id=\"dialog-title\">add routines</DialogTitle>\n      <List className={classes.list}>\n        {keyArray &&\n          keyArray.map((item) => (\n            <DialogFoldersItem item={item} key={item.id} />\n          ))}\n      </List>\n      <ListItem button onClick={() => handleDialogFormOpen()}>\n        <ListItemAvatar>\n          <AddIcon color=\"primary\" />\n        </ListItemAvatar>\n        <ListItemText primary=\"Create a new folder\" />\n      </ListItem>\n    </Dialog>\n  );\n};\n\nexport default DialogFoldersList;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    maxHeight: \"10rem\",\n    overflow: \"scroll\",\n  },\n}));\n","import React from \"react\";\n\n/* -------------------------------- COMPONENT ------------------------------- */\nimport { DialogFoldersList } from \"./List\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const DialogFolders = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <DialogFoldersList />\n    </>\n  );\n};\n\nexport default DialogFolders;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n} from \"../../store/actions\";\n\n/* ------------------------------ components ------------------------------ */\nimport Form from \"../dialog/Form\";\nimport Folders from \"../dialog/folders/Folders\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\n\n/* --------------------------------- util --------------------------------- */\nimport { checkHistory } from \"../../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { Ui, setUi } = useContext(UiContext);\n  const history = useSelector((state) => state.projects.history);\n  const routine = useSelector((state) => state.users.routine);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [isActiveAddRoutineButton, setIsActiveAddRoutineButton] = useState(\n    true\n  );\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n\n  useEffect(() => {\n    //toggle select-button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete-button and add-routine-button\n    if (checkHistory(history)) {\n      setIsActiveAddRoutineButton(false);\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveAddRoutineButton(true);\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                             handle actions                              */\n  /* -------------------------------------------------------------------------- */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n\n    deleteHistory(todoIds);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    if (Object.keys(routine).length === 0) {\n      setUi({ ...Ui, dialogFormFromHistory: true });\n    } else {\n      setUi({ ...Ui, dialogFolder: true });\n    }\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <Folders />\n      <Form />\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"add routine\"\n          color=\"primary\"\n          disabled={isActiveAddRoutineButton}\n          onClick={handleAdd}\n          disableRipple={true}\n        >\n          <PlaylistAddIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { useDispatch } from \"react-redux\";\nimport { selectHistoryAction } from \"../../store/actions\";\nimport { useHideText } from \"../../hooks/useHideText\";\n\nexport const CreateElements = (props) => {\n  const { object } = props;\n  const { id, name, check } = object;\n  const [text] = useHideText();\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n  const handleSelectHistory = (e) => {\n    e.preventDefault();\n    selectHistory(id);\n  };\n  return (\n    <ListItem id={id} onClick={handleSelectHistory} button={true} key={id}>\n      {text(name, check, \"0\", \"1.2rem\")}\n    </ListItem>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\nimport {\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n} from \"../../store/actions\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { CreateElements } from \"./CreateElements\";\n\n/* ---------------------------------- style --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const CreateItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handleActions                               */\n  /* -------------------------------------------------------------------------- */\n  const todoIds = objects && objects.map((object) => object.id);\n  const handleSelect = (e) => {\n    e.stopPropagation();\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={(e) => setOpen(!open)}>\n          <div className={classes.text}>\n            <IconButton\n              color=\"default\"\n              onClick={handleSelect}\n              edge=\"start\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              className={classes.checkButton}\n            >\n              <Checkbox checked={check} color=\"default\" />\n            </IconButton>\n            {moment(index).calendar(null, {\n              sameDay: \"[Today]\",\n              nextDay: \"[Tomorrow]\",\n              nextWeek: \"dddd\",\n              lastDay: \"[Yesterday]\",\n              lastWeek: \"[Last] dddd\",\n              sameElse: \"DD/MM/YYYY\",\n            })}\n          </div>\n\n          <ListItemSecondaryAction>\n            {open ? (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandLess />\n              </IconButton>\n            ) : (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandMore />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item) => (\n              <CreateElements object={item} key={item.id} />\n            ))}\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  checkButton: {\n    padding: \"0\",\n  },\n\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: \"1.6rem\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport { CreateItems } from \"./CreateItems\";\n\nexport const CreateLists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <CreateItems objects={result} key={`section-${keys}`} index={keys} />\n    );\n  }\n\n  return <>{content}</>;\n};\n\nexport default CreateLists;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Input } from \"./Input\";\n\n/* --------------------------------- util --------------------------------- */\nimport { sortByDate } from \"../../util/sortByDate\";\n\n/* ------------------------------ components ------------------------------ */\nimport { CreateLists } from \"./CreateLists\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const history = useSelector((state) => state.projects.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      {history.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no history...\n        </Message>\n      ) : (\n        <CreateLists objects={sortedHistory && sortedHistory} />\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React, { useContext } from \"react\";\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Form as DialogForm } from \"../dialog/Form\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  // const routine = useSelector((state) => state.users.routine);\n  // console.log(routine);\n\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* ----------------------------- HANDLE ACTIONS ----------------------------- */\n  const handleCreate = (e) => {\n    setUi({ ...Ui, dialogFormFromRoutine: true });\n  };\n\n  return (\n    <>\n      <DialogForm />\n      <LeftContainer></LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"create a new folder\"\n          color=\"primary\"\n          onClick={handleCreate}\n          disableRipple={true}\n        >\n          <CreateNewFolderIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\nexport default Input;\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","import React from \"react\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nexport const More = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { anchorEl, setAnchorEl, handleEdit, handleDelete } = props;\n\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n  };\n\n  const handleEditClick = (e) => {\n    e.preventDefault();\n    handleEdit();\n  };\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    handleDelete();\n  };\n\n  return (\n    <>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClick={handleClose}\n      >\n        <StyledMenuItem onClick={handleDeleteClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </StyledMenuItem>\n        <StyledMenuItem onClick={handleEditClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    boxShadow: theme.shadows[3],\n  },\n}))((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"& .MuiListItemIcon-root\": {\n      minWidth: 0,\n    },\n  },\n}))(MenuItem);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  toggleRoutineAction,\n  deleteRoutineAction,\n} from \"../../../store/actions\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useHideText } from \"../../../hooks/useHideText\";\n\n/* ---------------------------------- style --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const Elements = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { item, listId } = props;\n  const [text] = useHideText();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggle = (listId, routineId) =>\n    dispatch(toggleRoutineAction(listId, routineId));\n  const deleteRoutine = (listId, routineId) =>\n    dispatch(deleteRoutineAction(listId, routineId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleCheck = (e) => {\n    e.preventDefault();\n    toggle(listId, item.id);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteRoutine(listId, item.id);\n  };\n\n  return (\n    <>\n      <ListItem onClick={handleCheck} button={true}>\n        {text(item.name, item.check, \"0\", \"1.2rem\")}\n        <ListItemSecondaryAction>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            color=\"secondary\"\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </>\n  );\n};\n\nexport default Elements;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n  changeFolderNameAction,\n  DeleteFolderAction,\n  addRoutineFromFolderAction,\n} from \"../../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { More } from \"../More\";\nimport Elements from \"./Elements\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useEmojiPicker } from \"../../../hooks/useEmojiPicker\";\nimport { useHideText } from \"../../../hooks/useHideText\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Input from \"@material-ui/core/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TextField } from \"@material-ui/core\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const Items = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects } = props;\n  const key = objects.id;\n  const folderName = objects.folderName;\n  const items = objects.items;\n  let inputEl = useRef(null);\n  const [openCollapseList, setOpenCollapseList] = useState(false);\n  const [check, setCheck] = useState(\n    items.filter((object) => object.check === false).length === 0 ? true : false\n  );\n  const [routine, setRoutine] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [rename, setRename] = useState(folderName);\n  const [mouseEvent, setMouseEvent] = useState(false);\n  const [emojipicker, handleEmojiOpen, open] = useEmojiPicker(\n    rename,\n    setRename,\n    edit,\n    setMouseEvent\n  );\n  const [routineEmojipicker, routineHandleEmojiOpen] = useEmojiPicker(\n    routine,\n    setRoutine\n  );\n  const [text] = useHideText();\n\n  useEffect(() => {\n    items.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [items]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n  const todoIds = items && items.map((object) => object.id);\n  const changeFolderName = (newFolderName, key) =>\n    dispatch(changeFolderNameAction(newFolderName, key));\n  const DeleteFolder = (key) => dispatch(DeleteFolderAction(key));\n  const AddRoutineFromFolder = (key, routine) =>\n    dispatch(addRoutineFromFolderAction(key, routine));\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleSelect = (e) => {\n    setCheck(!check);\n    items && items.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (routine.trim() === \"\") return;\n    AddRoutineFromFolder(key, routine);\n    setRoutine(\"\");\n  };\n  const handleChange = (e) => {\n    setRoutine(e.target.value);\n  };\n\n  const handleOpen = (e) => {\n    e.stopPropagation();\n    if (open || edit) return;\n    setOpenCollapseList(!openCollapseList);\n  };\n\n  //folder rename functions\n  const keyPressed = (e) => {\n    setMouseEvent(false);\n    if (e.key === \"Enter\") {\n      if (rename.trim() === \"\" || rename === folderName) {\n        setEdit(false);\n        setRename(folderName);\n        return;\n      }\n      setEdit(false);\n      changeFolderName(rename, key);\n    }\n  };\n\n  const handleClickAway = () => {\n    setMouseEvent(false);\n    if (rename.trim() === \"\" || rename === folderName) {\n      setEdit(false);\n      setRename(folderName);\n      setMouseEvent(false);\n      return;\n    }\n    setEdit(false);\n    changeFolderName(rename, key);\n  };\n\n  const handleNameChange = (e) => {\n    setRename(e.target.value);\n  };\n\n  const handleEdit = () => {\n    setEdit(!edit);\n    const timeout = setTimeout(() => {\n      inputEl.current.focus();\n      setMouseEvent(\"onClick\");\n    });\n    return () => {\n      clearTimeout(timeout);\n    };\n  };\n\n  //delete folder\n  const handleDelete = () => {\n    DeleteFolder(key);\n  };\n\n  //toggle components\n  const folderIcon = openCollapseList ? (\n    <FolderOpenIcon className={classes.menuButton} />\n  ) : (\n    <FolderIcon className={classes.menuButton} />\n  );\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={handleOpen}>\n          <Box>\n            <IconButton\n              onClick={handleSelect}\n              edge=\"start\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              color=\"default\"\n            >\n              {folderIcon}\n            </IconButton>\n            {edit ? null : text(folderName, null, \"0\", \"1.6rem\")}\n\n            <ClickAwayListener\n              onClickAway={handleClickAway}\n              mouseEvent={mouseEvent}\n            >\n              <>\n                <TextField\n                  id={key}\n                  value={rename}\n                  inputRef={inputEl}\n                  onChange={handleNameChange}\n                  className={edit ? classes.textField : classes.textFieldOff}\n                  onKeyPress={keyPressed}\n                />\n                <IconButton\n                  onClick={handleEmojiOpen}\n                  edge=\"start\"\n                  size=\"small\"\n                  color=\"default\"\n                  className={edit ? classes.button : classes.buttonOff}\n                >\n                  <EmojiEmotionsIcon />\n                </IconButton>\n                {emojipicker}\n              </>\n            </ClickAwayListener>\n          </Box>\n\n          <ListItemSecondaryAction>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"end\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <More\n              edit={edit}\n              setEdit={setEdit}\n              anchorEl={anchorEl}\n              setAnchorEl={setAnchorEl}\n              inputEl={inputEl}\n              handleEdit={handleEdit}\n              handleDelete={handleDelete}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={openCollapseList} timeout=\"auto\" unmountOnExit>\n          {items &&\n            items.map((item) => (\n              <Elements item={item} key={item.id} listId={key} />\n            ))}\n\n          <ListItem>\n            <IconButton edge=\"start\" color=\"primary\">\n              <AddIcon />\n            </IconButton>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n              <Input\n                name=\"todo\"\n                type=\"text\"\n                onChange={handleChange}\n                value={routine}\n              />\n            </form>\n            <IconButton\n              onClick={routineHandleEmojiOpen}\n              edge=\"start\"\n              size=\"small\"\n              color=\"default\"\n              className={classes.emojiButton}\n            >\n              <EmojiEmotionsIcon />\n            </IconButton>\n            {routineEmojipicker}\n          </ListItem>\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\nexport default Items;\n\n/* ---------------------------------- style --------------------------------- */\nconst Box = styled.div`\n  width: 100%;\n  align-items: center;\n  display: inline-flex;\n  font-size: 1.6rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  menuButton: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n  },\n  textOff: {\n    display: \"none\",\n  },\n  textField: {\n    color: theme.palette.text.secondary,\n  },\n  textFieldOff: {\n    display: \"none\",\n  },\n  button: {\n    verticalAlign: \"baseline\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  buttonOff: {\n    position: \"absolute\",\n    top: \"-9999px\",\n    left: \"-9999px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  emojiButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport Items from \"./Items\";\n\n/* ------------------------------ DRAG AND DROP ----------------------------- */\nimport { Draggable } from \"react-beautiful-dnd\";\n\nexport const Lists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { routines } = props;\n\n  let content = [];\n  routines.map((routine, index) =>\n    content.push(\n      <Draggable draggableId={routine.id} index={index} key={routine.id}>\n        {(provided) => (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <Items objects={routine} key={routine.id} />\n          </div>\n        )}\n      </Draggable>\n    )\n  );\n\n  return <>{content}</>;\n};\n\nexport default Lists;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Input from \"./Input\";\n\n/* --------------------------------- ACTIONS -------------------------------- */\nimport { DragAndDropActions } from \"../../store/actions\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Lists as CreateList } from \"./create/Lists\";\n\n/* ------------------------------ DRAG AND DROP ----------------------------- */\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const routine = useSelector((state) => state.users.routine);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dragAndDrop = (sorce, destination) =>\n    dispatch(DragAndDropActions(sorce, destination));\n\n  const onDragEnd = (result) => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    dragAndDrop(destination.index, source.index);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <StyledPaper>\n        <Title>\n          <ListIcon fontSize=\"large\" />\n        </Title>\n        {routine && routine.length !== 0 ? (\n          <Droppable droppableId=\"list\">\n            {(provided) => (\n              <div\n                key={1}\n                {...provided.doroppableProps}\n                ref={provided.innerRef}\n              >\n                <CreateList routines={routine}></CreateList>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ) : (\n          <Message color={theme.palette.text.hint}>\n            There is no routine...\n          </Message>\n        )}\n\n        <Input />\n      </StyledPaper>\n    </DragDropContext>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React from \"react\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport TodoInput from \"../todo/TodoInput\";\nimport TodoList from \"../todo/TodoList\";\nimport Navbar from \"../nav/Navbar\";\nimport { List as HistoryList } from \"../history/List\";\nimport { List as RoutineList } from \"../routine/List\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const Home = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Navbar />\n      <Grid container spacing={1}>\n        <Grid item sm={12} md={4} className={classes.box1}>\n          <RoutineList />\n        </Grid>\n\n        <Grid item sm={12} md={4} className={classes.box2}>\n          <TodoInput />\n          <TodoList />\n        </Grid>\n\n        <Grid item sm={12} md={4} className={classes.box3}>\n          <HistoryList />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  box1: {\n    [theme.breakpoints.down(\"sm\")]: {\n      order: 2,\n    },\n  },\n  box2: {\n    [theme.breakpoints.down(\"sm\")]: {\n      order: 1,\n    },\n  },\n  box3: {\n    [theme.breakpoints.down(\"sm\")]: {\n      order: 3,\n    },\n  },\n}));\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\nh2{\n  margin:0;\n}\n`;\n","import React from 'react';\nimport 'normalize.css';\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Home } from '../home/Home';\n\n/* ------------------------------- CONTEXT Provider ------------------------------ */\nimport { Provider as UiProvider } from '../../store/context/provider';\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useTheme } from '../../hooks/useTheme';\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport { GlobalStyle } from '../../GlobalStyle';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const App = () => {\n  const [theme] = useTheme();\n\n  const themeConfig = createMuiTheme(theme);\n  return (\n    <UiProvider>\n      <GlobalStyle theme={themeConfig} />\n      <ThemeProvider theme={themeConfig}>\n        <Home />\n      </ThemeProvider>\n    </UiProvider>\n  );\n};\n","import { useState, useLayoutEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const useTheme = () => {\n  const setting = useSelector((state) => state.users.userSettings);\n  const [theme, setTheme] = useState();\n  useLayoutEffect(() => {\n    setTheme({\n      palette: {\n        type: setting.type,\n        primary: {\n          main: setting.color,\n        },\n        secondary: {\n          main: \"#f50057\",\n        },\n      },\n      breakpoints: {\n        values: {\n          sm: 0, //0-900\n          md: 900, //901-1920\n          xl: 1920, //1920--\n        },\n      },\n    });\n  }, [setting]);\n\n  return [theme];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const deleteMatchedObjArrays = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","export const changeValuesOfObjArrays = (\n  copy_sorce_array,\n  target,\n  pram,\n  boolean\n) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array[i][pram] = boolean;\n    }\n  }\n  return copy_sorce_array;\n};\n","import moment from \"moment\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { changeValuesOfObjArrays } from \"../../util/changeValuesOfOjbArrays\";\n\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  let newHistory;\n  let result;\n\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.complete === true);\n      newHistory.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistory.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n\n    case \"SELECT_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", true);\n\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"DELETE_HISTORY\":\n      newHistory = [...state.history];\n      result = deleteMatchedObjArrays(newHistory, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    case \"UNCHECK_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", false);\n      return {\n        ...state,\n        history: result,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","export const moveAt = (array, index, at) => {\n  const value = array[index];\n  const tail = array.slice(index + 1);\n  array.splice(index);\n  Array.prototype.push.apply(array, tail);\n  array.splice(at, 0, value);\n  return array;\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { moveAt } from \"../../util/moveAt\";\nconst initialState = {\n  routine: [],\n  userSettings: { color: \"#2196f3\", type: \"light\" },\n};\n\nexport function usersReducer(state = initialState, { type, payload }) {\n  let newRoutine;\n  switch (type) {\n    case \"CHANGE_FOLDER_NAME\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.key\n          ? { ...item, folderName: payload.newFolderName }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    case \"DELETE_FOLDER\":\n      newRoutine = state.routine.filter((item) => item.id !== payload);\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    case \"ADD_ROUTINE_FROM_FOLDER\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.key\n          ? {\n              ...item,\n              items: item.items.concat({\n                id: uuidv4(),\n                check: false,\n                name: payload.routine,\n              }),\n            }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    case \"TOGGLE_ROUTINE\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.listId\n          ? {\n              ...item,\n              items: item.items.map((el) =>\n                el.id === payload.routineId ? { ...el, check: !el.check } : el\n              ),\n            }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n\n    case \"DELETE_ROUTINE\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.listId\n          ? {\n              ...item,\n              items: item.items.filter((el) => el.id !== payload.routineId),\n            }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n\n    case \"CREATE_NEW_FOLDER\":\n      newRoutine = state.routine.concat({\n        id: uuidv4(),\n        folderName: payload,\n        items: [],\n      });\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n\n    case \"CHANGE_COLOR\":\n      return {\n        ...state,\n        userSettings: {\n          ...state.userSettings,\n          color: payload,\n        },\n      };\n\n    case \"CHANGE_TYPE\":\n      return {\n        ...state,\n        userSettings: {\n          ...state.userSettings,\n          type: state.userSettings.type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n\n    case \"DRAG_AND_DROP\":\n      let copyRoutine = [...state.routine];\n\n      newRoutine = moveAt(copyRoutine, payload.destination, payload.sorce);\n\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\n","export const createObjArraysMatchedId = (copy_sorce_array, target) => {\n  let newArray = [];\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      newArray.push(copy_sorce_array[i]);\n    }\n  }\n  return newArray;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { rootReducer } from \"./store/reducers/rootReducer\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst data = localStorage.getItem(\"data\")\n  ? JSON.parse(localStorage.getItem(\"data\"))\n  : {\n      projects: { todos: [], history: [] },\n      users: {\n        routine: [],\n        userSettings: { color: \"#2196f3\", type: \"light\" },\n      },\n    };\nconst persistedState = data;\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  window.devToolsExtension && window.devToolsExtension()\n);\n\nstore.subscribe(() => {\n  localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import projectReducer from \"./projectReducer\";\nimport usersReducer from \"./usersReducer\";\nimport { createObjArraysMatchedId } from \"../../util/createObjArraysMatchedId\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function rootReducer(state, { type, payload }) {\n  let copyHistory;\n  let newRoutine;\n  let result;\n  let checkedId = [];\n  state.projects.history.forEach((item) => {\n    checkedId.push(item.id);\n  });\n\n  switch (type) {\n    case \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\":\n      copyHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(copyHistory, checkedId);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          id: uuidv4(),\n          check: false,\n        };\n      });\n      result = [\n        {\n          id: uuidv4(),\n          folderName: payload.folderName,\n          items: [...newRoutine],\n        },\n      ];\n\n      return {\n        projects: projectReducer(\n          {\n            ...state.projects,\n            history: state.projects.history.map((item) => {\n              return {\n                ...item,\n                check: false,\n              };\n            }),\n          },\n          { type, payload }\n        ),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: state.users.routine.concat(result),\n          },\n          { type, payload }\n        ),\n      };\n\n    case \"ADD_NEW_ROUTINE_TO_EXIT_FOLDER\":\n      copyHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(copyHistory, checkedId);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          id: uuidv4(),\n          check: false,\n        };\n      });\n\n      return {\n        projects: projectReducer(\n          {\n            ...state.projects,\n            history: state.projects.history.map((item) => {\n              return {\n                ...item,\n                check: false,\n              };\n            }),\n          },\n          { type, payload }\n        ),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: state.users.routine.map((item) =>\n              item.id === payload\n                ? { ...item, items: item.items.concat(newRoutine) }\n                : item\n            ),\n          },\n          { type, payload }\n        ),\n      };\n\n    default:\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(state.users, { type, payload }),\n      };\n  }\n}\n\n// newRoutine.concat(state.users.routine);\n"],"sourceRoot":""}