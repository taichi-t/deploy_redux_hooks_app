{"version":3,"sources":["util/deleteMatchedObjArrays.js","util/changeValuesOfOjbArrays.js","store/reducers/projectReducer.js","util/moveAt.js","store/reducers/usersReducer.js","util/createObjArraysMatchedId.js","store/reducers/rootReducer.js","store/actions.js","util/toggleSelectAllButton.js","components/todo/TodoInput.jsx","components/todo/TodoItems.jsx","components/todo/TodoList.jsx","components/nav/ColorPicker.jsx","components/nav/Navbar.jsx","store/context/provider.js","components/dialog/Form.jsx","components/dialog/folders/Item.jsx","components/dialog/folders/List.jsx","components/dialog/folders/Folders.jsx","components/history/Input.jsx","util/checkHistory.js","components/history/CreateItems.jsx","components/history/CreateLists.jsx","components/history/List.jsx","util/sortByDate.js","components/routine/Input.jsx","components/routine/More.jsx","components/routine/create/Elements.jsx","components/routine/create/Items.jsx","components/routine/create/Lists.jsx","components/routine/List.jsx","GlobalStyle.jsx","components/home/Home.jsx","hooks/useTheme.js","components/app/App.jsx","serviceWorker.js","index.js"],"names":["deleteMatchedObjArrays","copy_sorce_array","target","i","length","includes","id","splice","changeValuesOfObjArrays","pram","boolean","initialState","todos","history","projectReducer","newHistory","result","state","type","payload","map","todo","complete","filter","item","finishedAt","moment","format","check","concat","moveAt","array","index","at","console","log","value","tail","slice","Array","prototype","push","apply","routine","userSettings","color","usersReducer","newRoutine","key","folderName","newFolderName","items","uuidv4","name","listId","el","routineId","copyRoutine","destination","sorce","createObjArraysMatchedId","newArray","rootReducer","copyHistory","checkedId","projects","forEach","users","selectHistoriesAction","todoIds","uncheckHistoriesAction","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","undefined","TodoInput","useState","setTodo","useSelector","isActiveButton","setIsActiveButton","isActiveSellectAllButton","toggleButton","dispatch","useDispatch","classes","useStyles","useEffect","indicatorOfExecuteButton","button","Button","startIcon","onClick","e","preventDefault","variant","size","className","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","action","noValidate","autoComplete","style","padding","Box","placeholder","onChange","autoFocus","styled","div","makeStyles","theme","margin","spacing","textAlign","lineHeight","TodoItems","props","hidden","setHidden","component","todoId","toggleTodoAction","root","Text","active","Checkbox","checked","stopPropagation","IconButton","deleteTodoAction","deleteButton","ItemRight","doneTodoAction","doneButton","position","marginBottom","top","right","checkbox","p","TodoList","useTheme","message","Message","palette","text","hint","ColorPicker","anchorEl","setAnchorEl","open","Boolean","handleClose","changeSettingColorAction","aria-label","aria-controls","aria-haspopup","currentTarget","edge","fontSize","Menu","onClose","PaperProps","width","height","colorArray","MenuItem","bind","StyledBoxColor","Navbar","now","setNow","isDarkMode","setIsDarkMode","setTime","month","date","setInterval","handleClick","icons","AppBar","Toolbar","Title","title","primary","Month","h1","span","flexGrow","UiContext","React","createContext","UiProvider","Provider","children","dialogFormFromRoutine","dialogFormFromHistory","dialogFolder","ahchorEl","Ui","setUi","Form","setFolderName","useContext","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","addRoutineAction","createNewFolderAction","createNewFolder","DialogContent","TextField","label","DialogActions","DialogFoldersItem","ListItem","addNewRoutineToExistFolderAction","ListItemAvatar","ListItemText","DialogFoldersList","keyArray","list","maxHeight","overflow","DialogFolders","Input","isActiveDeleteButton","setIsActiveDeleteButton","isActiveAddRoutineButton","setIsActiveAddRoutineButton","some","Folders","LeftContainer","RightContainer","Object","keys","disableRipple","deleteHistoryAction","deleteHistory","CreateItems","objects","setOpen","setCheck","selectHistory","selectHistoryAction","uncheckHistories","selectHistories","disableFocusRipple","checkButton","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","Divider","paddingTop","paddingBottom","secondary","CreateLists","content","List","sortedHistory","setsortedHistory","callback","Obj","ObjArr","k","sortByDate","StyledPaper","h2","More","handleEdit","handleDelete","StyledMenu","keepMounted","StyledMenuItem","ListItemIcon","menuButton","marginRight","withStyles","paper","boxShadow","shadows","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","Elements","toggleRoutineAction","toggle","deleteRoutineAction","deleteRoutine","Items","inputEl","useRef","openCollapseList","setOpenCollapseList","setRoutine","edit","setEdit","rename","setRename","mouseEvent","setMouseEvent","changeFolderName","changeFolderNameAction","folderIcon","ClickAwayListener","onClickAway","inputRef","textField","textFieldOff","onKeyPress","textOff","setTimeout","current","focus","clearTimeout","DeleteFolderAction","DeleteFolder","addRoutineFromFolderAction","AddRoutineFromFolder","display","Lists","routines","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","onDragEnd","source","droppableId","DragAndDropActions","dragAndDrop","doroppableProps","GlobalStyle","createGlobalStyle","background","default","Home","setting","setTheme","useLayoutEffect","main","themeConfig","createMuiTheme","ThemeProvider","Grid","container","xs","md","App","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.54957065.chunk.js","sourcesContent":["export const deleteMatchedObjArrays = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","export const changeValuesOfObjArrays = (\n  copy_sorce_array,\n  target,\n  pram,\n  boolean\n) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array[i][pram] = boolean;\n    }\n  }\n  return copy_sorce_array;\n};\n","import moment from \"moment\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { changeValuesOfObjArrays } from \"../../util/changeValuesOfOjbArrays\";\n\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  let newHistory;\n  let result;\n\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.complete === true);\n      newHistory.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistory.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n\n    case \"SELECT_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", true);\n\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"DELETE_HISTORY\":\n      newHistory = [...state.history];\n      result = deleteMatchedObjArrays(newHistory, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    case \"UNCHECK_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", false);\n      return {\n        ...state,\n        history: result,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","export const moveAt = (array, index, at) => {\n  console.log(array, index, at);\n  const value = array[index];\n  const tail = array.slice(index + 1);\n\n  array.splice(index);\n\n  Array.prototype.push.apply(array, tail);\n\n  array.splice(at, 0, value);\n\n  return array;\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { moveAt } from \"../../util/moveAt\";\nconst initialState = {\n  routine: [],\n  userSettings: { color: \"#2196f3\", type: \"light\" },\n};\n\nexport function usersReducer(state = initialState, { type, payload }) {\n  let newRoutine;\n  switch (type) {\n    case \"CHANGE_FOLDER_NAME\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.key\n          ? { ...item, folderName: payload.newFolderName }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    case \"DELETE_FOLDER\":\n      newRoutine = state.routine.filter((item) => item.id !== payload);\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    case \"ADD_ROUTINE_FROM_FOLDER\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.key\n          ? {\n              ...item,\n              items: item.items.concat({\n                id: uuidv4(),\n                check: false,\n                name: payload.routine,\n              }),\n            }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    case \"TOGGLE_ROUTINE\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.listId\n          ? {\n              ...item,\n              items: item.items.map((el) =>\n                el.id === payload.routineId ? { ...el, check: !el.check } : el\n              ),\n            }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n\n    case \"DELETE_ROUTINE\":\n      newRoutine = state.routine.map((item) =>\n        item.id === payload.listId\n          ? {\n              ...item,\n              items: item.items.filter((el) => el.id !== payload.routineId),\n            }\n          : item\n      );\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n\n    case \"CREATE_NEW_FOLDER\":\n      newRoutine = state.routine.concat({\n        id: uuidv4(),\n        folderName: payload,\n        items: [],\n      });\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n\n    case \"CHANGE_COLOR\":\n      return {\n        ...state,\n        userSettings: {\n          ...state.userSettings,\n          color: payload,\n        },\n      };\n\n    case \"CHANGE_TYPE\":\n      return {\n        ...state,\n        userSettings: {\n          ...state.userSettings,\n          type: state.userSettings.type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n\n    case \"DRAG_AND_DROP\":\n      let copyRoutine = [...state.routine];\n\n      newRoutine = moveAt(copyRoutine, payload.destination, payload.sorce);\n\n      return {\n        ...state,\n        routine: newRoutine,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\n","export const createObjArraysMatchedId = (copy_sorce_array, target) => {\n  let newArray = [];\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      newArray.push(copy_sorce_array[i]);\n    }\n  }\n  return newArray;\n};\n","import projectReducer from \"./projectReducer\";\nimport usersReducer from \"./usersReducer\";\nimport { createObjArraysMatchedId } from \"../../util/createObjArraysMatchedId\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function rootReducer(state, { type, payload }) {\n  let copyHistory;\n  let newRoutine;\n  let result;\n  let checkedId = [];\n  state.projects.history.forEach((item) => {\n    checkedId.push(item.id);\n  });\n\n  switch (type) {\n    case \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\":\n      copyHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(copyHistory, checkedId);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          id: uuidv4(),\n          check: false,\n        };\n      });\n      result = [\n        {\n          id: uuidv4(),\n          folderName: payload.folderName,\n          items: [...newRoutine],\n        },\n      ];\n\n      return {\n        projects: projectReducer(\n          {\n            ...state.projects,\n            history: state.projects.history.map((item) => {\n              return {\n                ...item,\n                check: false,\n              };\n            }),\n          },\n          { type, payload }\n        ),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: state.users.routine.concat(result),\n          },\n          { type, payload }\n        ),\n      };\n\n    case \"ADD_NEW_ROUTINE_TO_EXIT_FOLDER\":\n      copyHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(copyHistory, checkedId);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          id: uuidv4(),\n          check: false,\n        };\n      });\n\n      return {\n        projects: projectReducer(\n          {\n            ...state.projects,\n            history: state.projects.history.map((item) => {\n              return {\n                ...item,\n                check: false,\n              };\n            }),\n          },\n          { type, payload }\n        ),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: state.users.routine.map((item) =>\n              item.id === payload\n                ? { ...item, items: item.items.concat(newRoutine) }\n                : item\n            ),\n          },\n          { type, payload }\n        ),\n      };\n\n    default:\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(state.users, { type, payload }),\n      };\n  }\n}\n\n// newRoutine.concat(state.users.routine);\n","/* -------------------------------------------------------------------------- */\n/*                                TODO ACTIONS                                */\n/* -------------------------------------------------------------------------- */\n\n/* ----------------------------------- ADD ---------------------------------- */\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               HISTORY ACTIONS                              */\n/* -------------------------------------------------------------------------- */\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\nexport const selectHistoriesAction = (todoIds) => ({\n  type: \"SELECT_HISTORIES\",\n  payload: todoIds,\n});\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\nexport const uncheckHistoriesAction = (todoIds) => ({\n  type: \"UNCHECK_HISTORIES\",\n  payload: todoIds,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               ROUTINE ACTIONS                              */\n/* -------------------------------------------------------------------------- */\nexport const addRoutineAction = (folderName) => ({\n  type: \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\",\n  payload: { folderName },\n});\n\nexport const changeFolderNameAction = (newFolderName, key) => ({\n  type: \"CHANGE_FOLDER_NAME\",\n  payload: { newFolderName, key },\n});\n\nexport const DeleteFolderAction = (key) => ({\n  type: \"DELETE_FOLDER\",\n  payload: key,\n});\n\nexport const addRoutineFromFolderAction = (key, routine) => ({\n  type: \"ADD_ROUTINE_FROM_FOLDER\",\n  payload: { key, routine },\n});\n\nexport const toggleRoutineAction = (listId, routineId) => ({\n  type: \"TOGGLE_ROUTINE\",\n  payload: { listId, routineId },\n});\n\nexport const deleteRoutineAction = (listId, routineId) => ({\n  type: \"DELETE_ROUTINE\",\n  payload: { listId, routineId },\n});\n\nexport const addNewRoutineToExistFolderAction = (listId) => ({\n  type: \"ADD_NEW_ROUTINE_TO_EXIT_FOLDER\",\n  payload: listId,\n});\n\nexport const createNewFolderAction = (folderName) => ({\n  type: \"CREATE_NEW_FOLDER\",\n  payload: folderName,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                                USER SETTINGS                               */\n/* -------------------------------------------------------------------------- */\nexport const changeSettingColorAction = (color) => ({\n  type: \"CHANGE_COLOR\",\n  payload: color,\n});\n\nexport const changeTypeAction = () => ({\n  type: \"CHANGE_TYPE\",\n});\n\nexport const DragAndDropActions = (sorce, destination) => ({\n  type: \"DRAG_AND_DROP\",\n  payload: { sorce, destination },\n});\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../../store/actions\";\nimport { selectAllAction } from \"../../store/actions\";\nimport { executeAction } from \"../../store/actions\";\nimport { uncheckAction } from \"../../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport const TodoInput = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.projects.todos);\n  const [isActiveButton, setIsActiveButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n  const classes = useStyles();\n\n  useEffect(() => {\n    const indicatorOfExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorOfExecuteButton === undefined || todos.length === 0) {\n      setIsActiveButton(true);\n    } else {\n      setIsActiveButton(false);\n    }\n  }, [todos]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              HANDLE FUNCTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <Button\n      color=\"secondary\"\n      startIcon={<UndoIcon />}\n      onClick={handleUncheck}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Uncheck All\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Select All\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n              autoFocus={true}\n            />\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              size=\"small\"\n              className={classes.button}\n            >\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <Button\n            onClick={handleExecute}\n            startIcon={<DoneIcon />}\n            disabled={isActiveButton}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n          >\n            Done\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Box = styled.div``;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    lineHeight: \"initial\",\n  },\n}));\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const TodoItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { todo } = props;\n  const [hidden, setHidden] = useState(false);\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleShow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setHidden(!hidden);\n  };\n  const handleToggle = (e) => {\n    e.preventDefault();\n    toggleTodo(todo.id);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteTodo(todo.id);\n  };\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    doneTodo(todo.id);\n  };\n\n  return (\n    <>\n      <Paper\n        key={todo.id}\n        component=\"div\"\n        onClick={handleToggle}\n        className={classes.root}\n      >\n        <Text complete={todo.complete} active={hidden}>\n          <Checkbox type=\"checkbox\" checked={todo.complete} color=\"default\" />\n          <span onClick={handleShow}>{todo.name}</span>\n        </Text>\n\n        <IconButton\n          color=\"secondary\"\n          onClick={handleDelete}\n          className={classes.deleteButton}\n          size=\"small\"\n        >\n          <DeleteIcon />\n        </IconButton>\n\n        <ItemRight>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<DoneIcon />}\n            disabled={!todo.complete}\n            onClick={handleDone}\n            className={classes.doneButton}\n            size=\"small\"\n          >\n            Done\n          </Button>\n        </ItemRight>\n      </Paper>\n    </>\n  );\n};\n\nexport default TodoItems;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    margin: \"1rem 1rem 0 0\",\n    padding: 0,\n  },\n  doneButton: {\n    lineHeight: \"initial\",\n  },\n  checkbox: {},\n}));\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\n\nconst Text = styled.p`\n  font-size: 1.4rem;\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n  ${({ active }) =>\n    active &&\n    `\n    cursor: pointer;\n  word-wrap: break-word;\n  text-overflow: initial;\n  overflow: initial;\n  white-space: initial;\n  `}\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { TodoItems } from \"./TodoItems\";\n\nexport const TodoList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const todos = useSelector((state) => state.projects.todos);\n\n  //toggle component\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos && todos.map((todo) => <TodoItems todo={todo} key={todo.id} />)}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\n/* ---------------------------------- STYLE --------------------------------- */\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.4rem;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ACTIONS -------------------------------- */\nimport { changeSettingColorAction } from \"../../store/actions\";\n\n/* --------------------------------- style -------------------------------- */\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\nexport const ColorPicker = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   state                                  */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const changeSettingColor = (color) =>\n    dispatch(changeSettingColorAction(color));\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      changeSettingColor(item);\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        edge=\"start\"\n      >\n        <ColorLensIcon fontSize=\"large\" />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            height: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            {item === \"default\" ? item : null}\n            {item === \"default\" ? null : <StyledBoxColor color={item} />}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ColorPicker;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst colorArray = [\n  \"default\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\n/* --------------------------------- ACTIONS -------------------------------- */\nimport { changeTypeAction } from \"../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { ColorPicker } from \"./ColorPicker\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport const Navbar = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const type = useSelector((state) => state.users.userSettings.type);\n  const theme = useTheme();\n  const [now, setNow] = useState(\"\");\n  const classes = useStyles();\n  const [isDarkMode, setIsDarkMode] = useState(type === \"light\" ? true : false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               DISPATCH ACTION                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const changeType = () => dispatch(changeTypeAction());\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handle　actions                             */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    changeType();\n  };\n\n  // toggle component\n  const icons = isDarkMode ? (\n    <IconButton\n      aria-label=\"darkmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness4Icon fontSize=\"large\" />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label=\"lightmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness7Icon fontSize=\"large\" />\n    </IconButton>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Title className={classes.title} color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <ColorPicker />\n          {icons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\n/* ---------------------------------- style --------------------------------- */\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n","import React, { useState } from \"react\";\n\nexport const UiContext = React.createContext();\nexport const UiProvider = UiContext.Provider;\n\nexport const Provider = ({ children }) => {\n  const UiInitialState = {\n    dialogFormFromRoutine: false,\n    dialogFormFromHistory: false,\n    dialogFolder: false,\n    ahchorEl: null,\n  };\n\n  const [Ui, setUi] = useState(UiInitialState);\n\n  //\n  return <UiProvider value={{ Ui, setUi }}>{children}</UiProvider>;\n};\n","import React, { useState, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport { addRoutineAction, createNewFolderAction } from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Form = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const [folderName, setFolderName] = useState(\"\");\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addRoutine = (todoIds, folderName) =>\n    dispatch(addRoutineAction(todoIds, folderName));\n  const createNewFolder = (folderName) =>\n    dispatch(createNewFolderAction(folderName));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  const handleChange = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (folderName.trim() === \"\") return;\n    if (Ui.dialogFormFromHistory) {\n      addRoutine(folderName);\n      setFolderName(\"\");\n    }\n    if (Ui.dialogFormFromRoutine) {\n      createNewFolder(folderName);\n      setFolderName(\"\");\n    }\n    setUi({\n      ...Ui,\n      dialogFormFromHistory: false,\n      dialogFormFromRoutine: false,\n    });\n  };\n\n  return (\n    <>\n      <Dialog\n        open={Ui.dialogFormFromRoutine || Ui.dialogFormFromHistory}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a folder</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"name\"\n              type=\"text\"\n              fullWidth={true}\n              onChange={handleChange}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Form;\n","import React, { useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- ACITONS -------------------------------- */\nimport { addNewRoutineToExistFolderAction } from \"../../../store/actions\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersItem = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { item } = props;\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addHistoryToExitFolder = (listId) =>\n    dispatch(addNewRoutineToExistFolderAction(listId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleListItemClick = (e) => {\n    e.preventDefault();\n    addHistoryToExitFolder(item.id);\n    setUi({ ...Ui, dialogFolder: false });\n  };\n\n  return (\n    <>\n      <ListItem button onClick={handleListItemClick}>\n        <ListItemAvatar>\n          <FolderIcon color=\"action\" />\n        </ListItemAvatar>\n        <ListItemText primary={item.folderName} />\n      </ListItem>\n    </>\n  );\n};\nexport default DialogFoldersItem;\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DialogFoldersItem from \"./Item\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../../store/context/provider\";\n\nexport const DialogFoldersList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const routine = useSelector((state) => state.users.routine);\n  const { Ui, setUi } = useContext(UiContext);\n  const classes = useStyles();\n\n  let keyArray = [];\n  routine.map((item) =>\n    keyArray.push({ folderName: item.folderName, id: item.id })\n  );\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleDialogFormOpen = () => {\n    setUi({ ...Ui, dialogFolder: false, dialogFormFromHistory: true });\n  };\n\n  const handleClose = (value) => {\n    setUi({ ...Ui, dialogFolder: false });\n    if (typeof value !== \"string\") return;\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"dialog-title\"\n      open={Ui.dialogFolder}\n    >\n      <DialogTitle id=\"dialog-title\">add routines</DialogTitle>\n      <List className={classes.list}>\n        {keyArray &&\n          keyArray.map((item) => (\n            <DialogFoldersItem item={item} key={item.id} />\n          ))}\n      </List>\n      <ListItem button onClick={() => handleDialogFormOpen()}>\n        <ListItemAvatar>\n          <AddIcon color=\"primary\" />\n        </ListItemAvatar>\n        <ListItemText primary=\"Create a new folder\" />\n      </ListItem>\n    </Dialog>\n  );\n};\n\nexport default DialogFoldersList;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    maxHeight: \"10rem\",\n    overflow: \"scroll\",\n  },\n}));\n","import React from \"react\";\n\n/* -------------------------------- COMPONENT ------------------------------- */\nimport { DialogFoldersList } from \"./List\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const DialogFolders = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <DialogFoldersList />\n    </>\n  );\n};\n\nexport default DialogFolders;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n} from \"../../store/actions\";\n\n/* ------------------------------ components ------------------------------ */\nimport Form from \"../dialog/Form\";\nimport Folders from \"../dialog/folders/Folders\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\n\n/* --------------------------------- util --------------------------------- */\nimport { checkHistory } from \"../../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { Ui, setUi } = useContext(UiContext);\n  const history = useSelector((state) => state.projects.history);\n  const routine = useSelector((state) => state.users.routine);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [isActiveAddRoutineButton, setIsActiveAddRoutineButton] = useState(\n    true\n  );\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n\n  useEffect(() => {\n    //toggle select-button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete-button and add-routine-button\n    if (checkHistory(history)) {\n      setIsActiveAddRoutineButton(false);\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveAddRoutineButton(true);\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                             handle actions                              */\n  /* -------------------------------------------------------------------------- */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n\n    deleteHistory(todoIds);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    if (Object.keys(routine).length === 0) {\n      setUi({ ...Ui, dialogFormFromHistory: true });\n    } else {\n      setUi({ ...Ui, dialogFolder: true });\n    }\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <Folders />\n      <Form />\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"add routine\"\n          color=\"primary\"\n          disabled={isActiveAddRoutineButton}\n          onClick={handleAdd}\n          disableRipple={true}\n        >\n          <PlaylistAddIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\nimport {\n  selectHistoryAction,\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const CreateItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handleActions                               */\n  /* -------------------------------------------------------------------------- */\n  const todoIds = objects && objects.map((object) => object.id);\n  const handleSelect = (e) => {\n    e.stopPropagation();\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={(e) => setOpen(!open)}>\n          <div className={classes.text}>\n            <IconButton\n              color=\"default\"\n              onClick={handleSelect}\n              edge=\"start\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              className={classes.checkButton}\n            >\n              <Checkbox checked={check} color=\"default\" />\n            </IconButton>\n            {moment(index).calendar(null, {\n              sameDay: \"[Today]\",\n              nextDay: \"[Tomorrow]\",\n              nextWeek: \"dddd\",\n              lastDay: \"[Yesterday]\",\n              lastWeek: \"[Last] dddd\",\n              sameElse: \"DD/MM/YYYY\",\n            })}\n          </div>\n\n          <ListItemSecondaryAction>\n            {open ? (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandLess />\n              </IconButton>\n            ) : (\n              <IconButton onClick={(e) => setOpen(!open)} edge=\"end\">\n                <ExpandMore />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item, index) => (\n              <ListItem\n                id={index}\n                onClick={selectHistory.bind(null, item.id)}\n                button={true}\n                key={index}\n              >\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={item.check}\n                  color=\"default\"\n                  size=\"small\"\n                />\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  checkButton: {\n    padding: \"0\",\n  },\n\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: \"1.6rem\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport { CreateItems } from \"./CreateItems\";\n\nexport const CreateLists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <CreateItems objects={result} key={`section-${keys}`} index={keys} />\n    );\n  }\n\n  return <>{content}</>;\n};\n\nexport default CreateLists;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Input } from \"./Input\";\n\n/* --------------------------------- util --------------------------------- */\nimport { sortByDate } from \"../../util/sortByDate\";\n\n/* ------------------------------ components ------------------------------ */\nimport { CreateLists } from \"./CreateLists\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const history = useSelector((state) => state.projects.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      {history.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no history...\n        </Message>\n      ) : (\n        <CreateLists objects={sortedHistory && sortedHistory} />\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React, { useContext } from \"react\";\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Form as DialogForm } from \"../dialog/Form\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\nimport { UiContext } from \"../../store/context/provider\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  // const routine = useSelector((state) => state.users.routine);\n  // console.log(routine);\n\n  const { Ui, setUi } = useContext(UiContext);\n\n  /* ----------------------------- HANDLE ACTIONS ----------------------------- */\n  const handleCreate = (e) => {\n    setUi({ ...Ui, dialogFormFromRoutine: true });\n  };\n\n  return (\n    <>\n      <DialogForm />\n      <LeftContainer></LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"create a new folder\"\n          color=\"primary\"\n          onClick={handleCreate}\n          disableRipple={true}\n        >\n          <CreateNewFolderIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\nexport default Input;\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","import React from \"react\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nexport const More = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { anchorEl, setAnchorEl, handleEdit, handleDelete } = props;\n\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n  };\n\n  const handleEditClick = (e) => {\n    e.preventDefault();\n    handleEdit();\n  };\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    handleDelete();\n  };\n\n  return (\n    <>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClick={handleClose}\n      >\n        <StyledMenuItem onClick={handleDeleteClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </StyledMenuItem>\n        <StyledMenuItem onClick={handleEditClick}>\n          <ListItemIcon className={classes.menuButton}>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    boxShadow: theme.shadows[3],\n  },\n}))((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"& .MuiListItemIcon-root\": {\n      minWidth: 0,\n    },\n  },\n}))(MenuItem);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  toggleRoutineAction,\n  deleteRoutineAction,\n} from \"../../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport const Elements = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const { item, listId } = props;\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggle = (listId, routineId) =>\n    dispatch(toggleRoutineAction(listId, routineId));\n  const deleteRoutine = (listId, routineId) =>\n    dispatch(deleteRoutineAction(listId, routineId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleCheck = (e) => {\n    e.preventDefault();\n    toggle(listId, item.id);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteRoutine(listId, item.id);\n  };\n\n  return (\n    <>\n      <ListItem onClick={handleCheck} button={true}>\n        <Checkbox\n          type=\"checkbox\"\n          checked={item.check}\n          color=\"primary\"\n          size=\"small\"\n        />\n        <ListItemText primary={`${item.name}`} />\n        <ListItemSecondaryAction>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            color=\"secondary\"\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </>\n  );\n};\n\nexport default Elements;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n  changeFolderNameAction,\n  DeleteFolderAction,\n  addRoutineFromFolderAction,\n} from \"../../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { More } from \"../More\";\nimport Elements from \"./Elements\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Input from \"@material-ui/core/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TextField } from \"@material-ui/core\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\n/* ------------------------------- CONTEXT API ------------------------------ */\n\nexport const Items = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects } = props;\n  const key = objects.id;\n  const folderName = objects.folderName;\n  const items = objects.items;\n  let inputEl = useRef(null);\n\n  const [openCollapseList, setOpenCollapseList] = useState(false);\n  const [check, setCheck] = useState(\n    items.filter((object) => object.check === false).length === 0 ? true : false\n  );\n  const [routine, setRoutine] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [rename, setRename] = useState(folderName);\n  const [mouseEvent, setMouseEvent] = useState(false);\n\n  useEffect(() => {\n    items.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [items]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n  const todoIds = items && items.map((object) => object.id);\n  const changeFolderName = (newFolderName, key) =>\n    dispatch(changeFolderNameAction(newFolderName, key));\n  const DeleteFolder = (key) => dispatch(DeleteFolderAction(key));\n  const AddRoutineFromFolder = (key, routine) =>\n    dispatch(addRoutineFromFolderAction(key, routine));\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleSelect = (e) => {\n    setCheck(!check);\n    items && items.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (routine.trim() === \"\") return;\n    //submit here\n\n    AddRoutineFromFolder(key, routine);\n    setRoutine(\"\");\n  };\n  const handleChange = (e) => {\n    setRoutine(e.target.value);\n  };\n\n  const handleOpen = (e) => {\n    e.stopPropagation();\n    setOpenCollapseList(!openCollapseList);\n  };\n\n  //folder rename functions\n  const keyPressed = (e) => {\n    setMouseEvent(false);\n    if (e.key === \"Enter\") {\n      if (rename.trim() === \"\" || rename === folderName) {\n        setEdit(false);\n        setRename(folderName);\n        return;\n      }\n      setEdit(false);\n      changeFolderName(rename, key);\n      setRename(\"\");\n    }\n  };\n\n  const handleClickAway = (e) => {\n    setMouseEvent(false);\n    if (rename.trim() === \"\" || rename === folderName) {\n      setEdit(false);\n      setRename(folderName);\n      setMouseEvent(false);\n      return;\n    }\n    setEdit(false);\n    changeFolderName(rename, key);\n    setRename(\"\");\n  };\n\n  const handleNameChange = (e) => {\n    setRename(e.target.value);\n  };\n\n  const handleEdit = () => {\n    setEdit(!edit);\n    const timeout = setTimeout(() => {\n      inputEl.current.focus();\n      setMouseEvent(\"onClick\");\n    });\n    return () => {\n      clearTimeout(timeout);\n    };\n  };\n\n  //delete folder\n  const handleDelete = () => {\n    DeleteFolder(key);\n  };\n\n  //toggle components\n  const folderIcon = openCollapseList ? (\n    <FolderOpenIcon className={classes.menuButton} />\n  ) : (\n    <FolderIcon className={classes.menuButton} />\n  );\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list} onClick={handleOpen}>\n          <ListItemIcon>\n            <Box>\n              <IconButton\n                onClick={handleSelect}\n                edge=\"start\"\n                disableRipple={true}\n                disableFocusRipple={true}\n                color=\"default\"\n              >\n                {folderIcon}\n              </IconButton>\n\n              <ClickAwayListener\n                onClickAway={handleClickAway}\n                mouseEvent={mouseEvent}\n              >\n                <TextField\n                  id={key}\n                  value={rename}\n                  inputRef={inputEl}\n                  onChange={handleNameChange}\n                  className={edit ? classes.textField : classes.textFieldOff}\n                  onKeyPress={keyPressed}\n                />\n              </ClickAwayListener>\n\n              <span className={edit ? classes.textOff : classes.text}>\n                {folderName}\n              </span>\n            </Box>\n          </ListItemIcon>\n\n          <ListItemSecondaryAction>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"end\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <More\n              edit={edit}\n              setEdit={setEdit}\n              anchorEl={anchorEl}\n              setAnchorEl={setAnchorEl}\n              inputEl={inputEl}\n              handleEdit={handleEdit}\n              handleDelete={handleDelete}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={openCollapseList} timeout=\"auto\" unmountOnExit>\n          {items &&\n            items.map((item) => (\n              <Elements item={item} key={item.id} listId={key} />\n            ))}\n\n          <ListItem>\n            <IconButton edge=\"start\" color=\"primary\">\n              <AddIcon />\n            </IconButton>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n              <Input\n                name=\"todo\"\n                type=\"text\"\n                onChange={handleChange}\n                value={routine}\n              />\n            </form>\n          </ListItem>\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\nexport default Items;\n\n/* ---------------------------------- style --------------------------------- */\nconst Box = styled.div`\n  font-size: 1.6rem;\n`;\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  menuButton: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n  },\n  textOff: {\n    display: \"none\",\n  },\n  textField: {\n    color: theme.palette.text.secondary,\n  },\n  textFieldOff: {\n    display: \"none\",\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport Items from \"./Items\";\n\n/* ------------------------------ DRAG AND DROP ----------------------------- */\nimport { Draggable } from \"react-beautiful-dnd\";\n\nexport const Lists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { routines } = props;\n\n  let content = [];\n  routines.map((routine, index) =>\n    content.push(\n      <Draggable draggableId={routine.id} index={index} key={routine.id}>\n        {(provided) => (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <Items objects={routine} key={routine.id} />\n          </div>\n        )}\n      </Draggable>\n    )\n  );\n\n  return <>{content}</>;\n};\n\nexport default Lists;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Input from \"./Input\";\n\n/* --------------------------------- ACTIONS -------------------------------- */\nimport { DragAndDropActions } from \"../../store/actions\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Lists as CreateList } from \"./create/Lists\";\n\n/* ------------------------------ DRAG AND DROP ----------------------------- */\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const routine = useSelector((state) => state.users.routine);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dragAndDrop = (sorce, destination) =>\n    dispatch(DragAndDropActions(sorce, destination));\n\n  const onDragEnd = (result) => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    dragAndDrop(destination.index, source.index);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <StyledPaper>\n        <Title>\n          <ListIcon fontSize=\"large\" />\n        </Title>\n        {routine && routine.length !== 0 ? (\n          <Droppable droppableId=\"list\">\n            {(provided) => (\n              <div\n                key={1}\n                {...provided.doroppableProps}\n                ref={provided.innerRef}\n              >\n                <CreateList routines={routine}></CreateList>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ) : (\n          <Message color={theme.palette.text.hint}>\n            There is no routine...\n          </Message>\n        )}\n\n        <Input />\n      </StyledPaper>\n    </DragDropContext>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\nh2{\n  margin:0;\n}\n`;\n","import React from \"react\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport TodoInput from \"../todo/TodoInput\";\nimport TodoList from \"../todo/TodoList\";\nimport Navbar from \"../nav/Navbar\";\nimport { List as HistoryList } from \"../history/List\";\nimport { List as RoutineList } from \"../routine/List\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Grid from \"@material-ui/core/Grid\";\nimport { GlobalStyle } from \"../../GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useTheme } from \"../../hooks/useTheme\";\n\nexport const Home = () => {\n  const [theme] = useTheme();\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <>\n      <GlobalStyle theme={themeConfig} />\n      <ThemeProvider theme={themeConfig}>\n        <Navbar />\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={4}>\n            <RoutineList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TodoInput />\n            <TodoList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HistoryList />\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </>\n  );\n};\n","import { useState, useLayoutEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const useTheme = () => {\n  const setting = useSelector((state) => state.users.userSettings);\n  const [theme, setTheme] = useState();\n  useLayoutEffect(() => {\n    setTheme({\n      palette: {\n        type: setting.type,\n        primary: {\n          main: setting.color,\n        },\n        secondary: {\n          main: \"#f50057\",\n        },\n      },\n    });\n  }, [setting]);\n\n  return [theme];\n};\n","import React from \"react\";\nimport \"normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"../../store/reducers/rootReducer\";\nimport { createStore } from \"redux\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Home } from \"../home/Home\";\n\n/* ------------------------------- CONTEXT Provider ------------------------------ */\nimport { Provider as UiProvider } from \"../../store/context/provider\";\n\nexport const App = () => {\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : {\n        projects: { todos: [], history: [] },\n        users: {\n          routine: [],\n          userSettings: { color: \"#2196f3\", type: \"light\" },\n        },\n      };\n  const persistedState = data;\n\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  return (\n    <Provider store={store}>\n      <UiProvider>\n        <Home />\n      </UiProvider>\n    </Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}