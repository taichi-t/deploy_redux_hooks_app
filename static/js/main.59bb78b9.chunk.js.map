{"version":3,"sources":["util/multipleDelete.js","store/reducers/projectReducer.js","util/toggleSelectAllButton.js","components/TodoInput.jsx","store/actions.js","components/TodoList.jsx","components/ColorPicker.jsx","components/Navbar.jsx","components/HistoryInput.jsx","util/checkHistory.js","components/HistoryList.jsx","util/sortByDate.js","util/createList.js","components/RoutineWork.jsx","GlobalStyle.jsx","App.js","hooks/useTheme.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["multipleDelete","copy_sorce_array","target","i","length","includes","id","splice","initialState","todos","history","projectReducer","state","type","payload","map","todo","complete","newHistory","filter","item","finishedAt","moment","format","check","concat","newHistories","copy_history","result","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","undefined","TodoInput","useState","setTodo","useSelector","isActiveExecuteButton","setIsActiveExecuteButton","isActiveSellectAllButton","toggleButton","dispatch","useDispatch","useEffect","indicatorWithExecuteButton","button","Button","color","startIcon","onClick","e","preventDefault","Text","fontSize","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","uuidv4","name","action","noValidate","autoComplete","style","padding","Box","Input","placeholder","value","onChange","ColorButton","styled","div","p","props","withStyles","theme","root","palette","success","main","TodoList","useTheme","toggleTodo","todoId","toggleTodoAction","deleteTodo","deleteTodoAction","doneTodo","doneTodoAction","message","Message","text","hint","key","bind","ItemLeft","Checkbox","checked","ItemRight","variant","span","colorArray","ColorPicker","toggleTheme","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","PaperProps","width","maxHeight","index","MenuItem","StyledBoxColor","Navbar","isDarkMode","setIsDarkMode","now","setNow","setTime","month","date","setInterval","AppBar","position","Toolbar","Title","primary","Month","SettingContainer","marginRight","size","speed","h1","HistoryInput","isActiveDeleteButton","setIsActiveDeleteButton","some","LeftContainer","RightContainer","todoIds","push","deleteHistoryAction","deleteHistory","HistoryList","sortedHistory","setsortedHistory","array","callback","Obj","ObjArr","k","sortByDate","content","objects","selectHistory","results","ListSubheader","fontFamily","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItem","ListItemText","Divider","createList","selectHistoryAction","StyledPaper","List","subheader","overflow","h2","RoutineWork","GlobalStyle","createGlobalStyle","background","default","themeObjectFunction","secondary","App","setTheme","updatedTheme","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","themeConfig","createMuiTheme","ThemeProvider","Grid","container","spacing","xs","md","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.59bb78b9.chunk.js","sourcesContent":["export const multipleDelete = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","import moment from \"moment\";\nimport { multipleDelete } from \"../../util/multipleDelete\";\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      let newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      let newHistories = state.todos.filter((todo) => todo.complete === true);\n      newHistories.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistories.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n    case \"DELETE_HISTORY\":\n      let copy_history = [...state.history];\n      const result = multipleDelete(copy_history, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../store/actions\";\nimport { selectAllAction } from \"../store/actions\";\nimport { executeAction } from \"../store/actions\";\nimport { uncheckAction } from \"../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//util\nimport { toggleSelectAllButton } from \"../util/toggleSelectAllButton\";\n\n//style\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nexport const TodoInput = () => {\n  //state\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.todos);\n  const [isActiveExecuteButton, setIsActiveExecuteButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  //dispatch actions\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n\n  useEffect(() => {\n    const indicatorWithExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorWithExecuteButton === undefined || todos.length === 0) {\n      setIsActiveExecuteButton(true);\n    } else {\n      setIsActiveExecuteButton(false);\n    }\n  }, [todos]);\n\n  //handle functions\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  const button = toggleButton ? (\n    <Button color=\"secondary\" startIcon={<UndoIcon />} onClick={handleUncheck}>\n      <Text fontSize={0.5}>Uncheck All</Text>\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <Text fontSize={0.5}>Select All</Text>\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n            />\n            <Button type=\"submit\" color=\"primary\" startIcon={<AddIcon />}>\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <ColorButton\n            onClick={handleExecute}\n            startIcon={<CheckCircleOutlineIcon />}\n            disabled={isActiveExecuteButton}\n          >\n            <Text fontSize={0.5}>Execute</Text>\n          </ColorButton>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n//style\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Text = styled.p`\n  font-size: ${(props) => props.fontSize}rem;\n`;\n\nconst Box = styled.div``;\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.success.main,\n  },\n}))(Button);\n","export const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\n\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\n\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\n\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\n\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\n\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\n\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../store/actions\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const TodoList = () => {\n  const theme = useTheme();\n  const todos = useSelector((state) => state.todos);\n\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos &&\n        todos.map((todo) => (\n          <Paper key={todo.id}>\n            <Box\n              onClick={\n                ((e) => e.preventDefault(), toggleTodo.bind(null, todo.id))\n              }\n            >\n              <ItemLeft>\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={todo.complete}\n                  color=\"primary\"\n                />\n                <Text complete={todo.complete}>{todo.name}</Text>\n              </ItemLeft>\n\n              <ItemRight>\n                {todo.complete ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<DoneIcon />}\n                    onClick={doneTodo.bind(null, todo.id)}\n                  >\n                    Done\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    onClick={deleteTodo.bind(null, todo.id)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </ItemRight>\n            </Box>\n          </Paper>\n        ))}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.6rem;\n`;\n\nconst Box = styled.div`\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\nconst ItemLeft = styled.div`\n  text-align: left;\n`;\n\nconst Text = styled.span`\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\n//style\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst colorArray = [\n  \"default\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n\nexport const ColorPicker = (props) => {\n  const { toggleTheme } = props;\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      toggleTheme(item);\n    }\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <ColorLensIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            maxHeight: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            {item === \"default\" ? item : null}\n            {item === \"default\" ? null : <StyledBoxColor color={item} />}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\n//components\nimport { ColorPicker } from \"./ColorPicker\";\n\n//style\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nexport const Navbar = (props) => {\n  //state\n  const theme = useTheme();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const { toggleTheme } = props;\n  const [now, setNow] = useState(\"\");\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  //handle actions\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    toggleTheme();\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Box>\n          <Title color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <SettingContainer>\n            <div style={{ marginRight: \"2rem\" }}>\n              <ColorPicker toggleTheme={toggleTheme} />\n            </div>\n\n            <div onClick={handleClick}>\n              <DarkModeToggle checked={isDarkMode} size={50} speed={6} />\n            </div>\n          </SettingContainer>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n\n//style\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 2.4rem;\n  text-align: center;\n`;\n\nconst Box = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n\nconst SettingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: space-between;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n} from \"../store/actions\";\n\n//style\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\n\n//util\nimport { checkHistory } from \"../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../util/toggleSelectAllButton\";\n\nexport const HistoryInput = () => {\n  //state\n  const history = useSelector((state) => state.history);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n\n  //dispatchActions\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n  useEffect(() => {\n    //toggle select button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete button\n    if (checkHistory(history)) {\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  //handle actions\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n    deleteHistory(todoIds);\n    setIsActiveDeleteButton(false);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n//style\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { HistoryInput } from \"./HistoryInput\";\n//actions\nimport { selectHistoryAction } from \"../store/actions\";\n\n//util\nimport { sortByDate } from \"../util/sortByDate\";\nimport { createList } from \"../util/createList\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const HistoryList = () => {\n  //state\n  const theme = useTheme();\n  const history = useSelector((state) => state.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  //dispatchActions\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  //toggle components\n  const content =\n    history && history.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no history...</Message>\n    ) : (\n      sortedHistory && createList(sortedHistory, selectHistory)\n    );\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      <List\n        subheader={<li />}\n        style={{ maxHeight: \"300px\", overflow: \"scroll\" }}\n      >\n        {content}\n      </List>\n\n      <HistoryInput />\n    </StyledPaper>\n  );\n};\n\nexport default HistoryList;\n\n//style\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 500px;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React from \"react\";\n\n//style\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\n\nexport const createList = (objects, selectHistory) => {\n  const results = [];\n  for (let key in objects) {\n    results.push(\n      <li key={`section-${key}`}>\n        <ul style={{ padding: \"0\" }}>\n          <ListSubheader\n            style={{ fontSize: \"1.5rem\", fontFamily: \"'Oswald', sans-serif\" }}\n          >\n            {moment(key).calendar(null, {\n              sameDay: \"[Today]\",\n              nextDay: \"[Tomorrow]\",\n              nextWeek: \"dddd\",\n              lastDay: \"[Yesterday]\",\n              lastWeek: \"[Last] dddd\",\n              sameElse: \"DD/MM/YYYY\",\n            })}\n          </ListSubheader>\n          {objects &&\n            objects[key].map((item, index) => (\n              <ListItem\n                key={index}\n                onClick={selectHistory.bind(null, item.id)}\n                button={true}\n              >\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={item.check}\n                  color=\"primary\"\n                />\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </ul>\n        <Divider variant=\"middle\" />\n      </li>\n    );\n  }\n  return results;\n};\n","import React from \"react\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport const RoutineWork = () => {\n  return (\n    <Container>\n      <StyledPaper>\n        <Title>\n          <RepeatIcon fontSize=\"large\" />\n        </Title>\n      </StyledPaper>\n    </Container>\n  );\n};\n\nexport default RoutineWork;\n\n//style\nconst Container = styled.div`\n  padding: 1rem;\n`;\n\nconst StyledPaper = styled(Paper)`\n  max-height: 600px;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  font-weight: normal;\n  padding: 1rem 0;\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\n`;\n\nexport const themeObjectFunction = () => {\n  return {\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#f50057\",\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport \"normalize.css\";\nimport { Provider } from \"react-redux\";\nimport projectReducer from \"./store/reducers/projectReducer\";\nimport { createStore } from \"redux\";\n\n//components\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport Navbar from \"./components/Navbar\";\nimport HistoryList from \"./components/HistoryList\";\nimport RoutineWork from \"./components/RoutineWork\";\n//style\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n//hooks\nimport { useTheme } from \"./hooks/useTheme\";\n\nfunction App() {\n  const [theme, toggleTheme] = useTheme();\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : { todos: [], history: [] };\n  const persistedState = data;\n\n  const store = createStore(\n    projectReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={themeConfig}>\n        <GlobalStyle theme={themeConfig} />\n        <Navbar toggleTheme={toggleTheme} />\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <RoutineWork />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TodoInput />\n            <TodoList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HistoryList />\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport { themeObjectFunction } from \"../GlobalStyle\";\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(themeObjectFunction);\n\n  const {\n    palette: { type },\n  } = theme;\n  const toggleTheme = (props) => {\n    let updatedTheme;\n    if (props) {\n      const color = props === \"default\" ? \"#2196f3\" : props;\n\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          primary: {\n            ...theme.palette.primary,\n            main: `${color}`,\n          },\n        },\n      };\n    } else {\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n    }\n\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleTheme];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}