{"version":3,"sources":["util/deleteMatchedObjArrays.js","util/changeValuesOfOjbArrays.js","store/reducers/projectReducer.js","store/reducers/usersReducer.js","store/reducers/rootReducer.js","util/createObjArraysMatchedId.js","store/actions.js","util/toggleSelectAllButton.js","components/todo/TodoInput.jsx","components/todo/TodoList.jsx","components/nav/ColorPicker.jsx","components/nav/Navbar.jsx","components/routine/dialog/Form.jsx","components/routine/dialog/folders/Item.jsx","components/routine/dialog/folders/List.jsx","components/routine/dialog/folders/Folders.jsx","components/history/Input.jsx","util/checkHistory.js","components/history/CreateItems.jsx","components/history/CreateLists.jsx","components/history/List.jsx","util/sortByDate.js","components/routine/Input.jsx","components/routine/More.jsx","components/routine/create/Elements.jsx","components/routine/create/Items.jsx","components/routine/create/Lists.jsx","components/routine/List.jsx","GlobalStyle.jsx","App.js","hooks/useTheme.js","serviceWorker.js","index.js"],"names":["deleteMatchedObjArrays","copy_sorce_array","target","i","length","includes","id","splice","changeValuesOfObjArrays","pram","boolean","initialState","todos","history","projectReducer","newHistory","result","state","type","payload","map","todo","complete","filter","item","finishedAt","moment","format","check","concat","routine","userSettings","usersReducer","rootReducer","newRoutine","newArray","push","createObjArraysMatchedId","projects","todoIds","users","folderName","selectHistoriesAction","uncheckHistoriesAction","toggleSelectAllButton","object","setToggleButton","setIsActiveSellectAll","param","indicatorWithSellectAllButton","find","undefined","TodoInput","useState","setTodo","useSelector","isActiveButton","setIsActiveButton","isActiveSellectAllButton","toggleButton","dispatch","useDispatch","classes","useStyles","useEffect","indicatorOfExecuteButton","button","Button","color","startIcon","onClick","e","preventDefault","variant","size","className","disabled","Container","Paper","onSubmit","trim","addTodoAction","addTodo","uuidv4","name","action","noValidate","autoComplete","style","padding","Box","placeholder","value","onChange","styled","div","makeStyles","theme","margin","spacing","textAlign","lineHeight","TodoList","useTheme","toggleTodo","todoId","toggleTodoAction","deleteTodo","deleteTodoAction","doneTodo","doneTodoAction","message","Message","palette","text","hint","key","bind","ItemLeft","Checkbox","checked","Text","ItemRight","span","props","p","ColorPicker","toggleTheme","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","edge","menuButton","Menu","onClose","PaperProps","width","height","colorArray","index","MenuItem","StyledBoxColor","marginRight","Navbar","isDarkMode","setIsDarkMode","now","setNow","setTime","month","date","setInterval","handleClick","icons","root","AppBar","position","Toolbar","Title","title","primary","Month","h1","flexGrow","Form","setState","setFolderName","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","addRoutineAction","addRoutine","DialogContent","TextField","autoFocus","label","DialogActions","DialogFoldersItem","handleListItemClick","ListItem","ListItemAvatar","ListItemText","DialogFoldersList","openDialogFolders","handleDialogFormOpen","routineKeys","Object","keys","Avatar","DialogFolders","setDialogFolders","setDialogForm","console","log","Input","isActiveDeleteButton","setIsActiveDeleteButton","isActiveAddRoutineButton","setIsActiveAddRoutineButton","openDialogForm","some","Folders","LeftContainer","RightContainer","deleteHistoryAction","deleteHistory","CreateItems","objects","setOpen","setCheck","selectHistory","selectHistoryAction","component","list","ListItemIcon","uncheckHistories","selectHistories","disableRipple","disableFocusRipple","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","Divider","paddingTop","paddingBottom","CreateLists","content","List","sortedHistory","setsortedHistory","array","callback","Obj","ObjArr","k","sortByDate","StyledPaper","fontSize","h2","More","StyledMenu","keepMounted","StyledMenuItem","withStyles","paper","boxShadow","shadows","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","minWidth","Elements","Items","openCollapseList","setOpenCollapseList","setRoutine","folderIcon","z","Lists","GlobalStyle","createGlobalStyle","background","default","themeObjectFunction","main","secondary","App","setTheme","updatedTheme","persistedState","localStorage","getItem","JSON","parse","store","createStore","window","devToolsExtension","subscribe","setItem","stringify","getState","themeConfig","createMuiTheme","ThemeProvider","Grid","container","xs","md","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1b0e1be0.chunk.js","sourcesContent":["export const deleteMatchedObjArrays = (copy_sorce_array, target) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array.splice(i--, 1);\n    }\n  }\n  return copy_sorce_array;\n};\n","export const changeValuesOfObjArrays = (\n  copy_sorce_array,\n  target,\n  pram,\n  boolean\n) => {\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      copy_sorce_array[i][pram] = boolean;\n    }\n  }\n  return copy_sorce_array;\n};\n","import moment from \"moment\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { changeValuesOfObjArrays } from \"../../util/changeValuesOfOjbArrays\";\n\nconst initialState = { todos: [], history: [] };\n\nexport function projectReducer(state = initialState, { type, payload }) {\n  let newHistory;\n  let result;\n\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [payload, ...state.todos],\n      };\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n\n    case \"DONE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.id === payload);\n\n      newHistory.map((item) => {\n        item.finishedAt = moment().format(\"YYYY-MM-DD\");\n        item.check = false;\n        return item;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n        history: newHistory.concat(...state.history),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    case \"SELECT_ALL\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? todo : { ...todo, complete: true }\n        ),\n      };\n\n    case \"EXECUTE_TODO\":\n      newHistory = state.todos.filter((todo) => todo.complete === true);\n      newHistory.map((history) => {\n        history.finishedAt = moment().format(\"YYYY-MM-DD\");\n        history.check = false;\n        return history;\n      });\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.complete !== true),\n        history: newHistory.concat(state.history),\n      };\n\n    case \"UNCHECK_TODO\":\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.complete ? { ...todo, complete: false } : todo\n        ),\n      };\n    case \"SELECT_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.id === payload ? { ...todo, check: !todo.check } : todo\n        ),\n      };\n\n    case \"SELECT_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", true);\n\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"DELETE_HISTORY\":\n      newHistory = [...state.history];\n      result = deleteMatchedObjArrays(newHistory, payload);\n      return {\n        ...state,\n        history: result,\n      };\n\n    case \"SELECT_ALL_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? todo : { ...todo, check: true }\n        ),\n      };\n\n    case \"UNCHECK_HISTORY\":\n      return {\n        ...state,\n        history: state.history.map((todo) =>\n          todo.check ? { ...todo, check: false } : todo\n        ),\n      };\n    case \"UNCHECK_HISTORIES\":\n      newHistory = [...state.history];\n      result = changeValuesOfObjArrays(newHistory, payload, \"check\", false);\n      return {\n        ...state,\n        history: result,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","const initialState = { routine: [], userSettings: {} };\n\nexport function usersReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;\n","import projectReducer from \"./projectReducer\";\nimport usersReducer from \"./usersReducer\";\nimport { deleteMatchedObjArrays } from \"../../util/deleteMatchedObjArrays\";\nimport { createObjArraysMatchedId } from \"../../util/createObjArraysMatchedId\";\n\nexport function rootReducer(state, { type, payload }) {\n  let newHistory;\n  let newRoutine;\n\n  switch (type) {\n    case \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\":\n      newHistory = [...state.projects.history];\n      newRoutine = createObjArraysMatchedId(newHistory, payload.todoIds);\n      newHistory = deleteMatchedObjArrays(newHistory, payload.todoIds);\n      newRoutine = newRoutine.map((todo) => {\n        delete todo.complete;\n        return {\n          ...todo,\n          check: false,\n        };\n      });\n\n      return {\n        projects: projectReducer(\n          { ...state.projects, history: newHistory },\n          { type, payload }\n        ),\n        users: usersReducer(\n          {\n            ...state.users,\n            routine: {\n              [payload.folderName]: newRoutine,\n            },\n          },\n          { type, payload }\n        ),\n      };\n\n    default:\n      return {\n        projects: projectReducer(state.projects, { type, payload }),\n        users: usersReducer(state.users, { type, payload }),\n      };\n  }\n}\n\n// newRoutine.concat(state.users.routine);\n","export const createObjArraysMatchedId = (copy_sorce_array, target) => {\n  let newArray = [];\n  for (let i = 0; i < copy_sorce_array.length; i++) {\n    if (target.includes(copy_sorce_array[i].id)) {\n      newArray.push(copy_sorce_array[i]);\n    }\n  }\n  return newArray;\n};\n","/* -------------------------------------------------------------------------- */\n/*                                TODO ACTIONS                                */\n/* -------------------------------------------------------------------------- */\n\n/* ----------------------------------- ADD ---------------------------------- */\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\nexport const doneTodoAction = (todoId) => ({\n  type: \"DONE_TODO\",\n  payload: todoId,\n});\nexport const selectAllAction = () => ({\n  type: \"SELECT_ALL\",\n});\nexport const executeAction = () => ({\n  type: \"EXECUTE_TODO\",\n});\nexport const uncheckAction = () => ({\n  type: \"UNCHECK_TODO\",\n});\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               HISTORY ACTIONS                              */\n/* -------------------------------------------------------------------------- */\n\n/* --------------------------------- DELETE --------------------------------- */\nexport const deleteHistoryAction = (todoIds) => ({\n  type: \"DELETE_HISTORY\",\n  payload: todoIds,\n});\n\n/* --------------------------------- UPDATE --------------------------------- */\nexport const selectHistoryAction = (todoId) => ({\n  type: \"SELECT_HISTORY\",\n  payload: todoId,\n});\nexport const selectHistoriesAction = (todoIds) => ({\n  type: \"SELECT_HISTORIES\",\n  payload: todoIds,\n});\nexport const selectAllHistoryAction = () => ({\n  type: \"SELECT_ALL_HISTORY\",\n});\nexport const uncheckHistoryAction = () => ({\n  type: \"UNCHECK_HISTORY\",\n});\nexport const uncheckHistoriesAction = (todoIds) => ({\n  type: \"UNCHECK_HISTORIES\",\n  payload: todoIds,\n});\n\n/* -------------------------------------------------------------------------- */\n/*                               ROUTINE ACTIONS                              */\n/* -------------------------------------------------------------------------- */\nexport const addRoutineAction = (todoIds, folderName) => ({\n  type: \"ADD_NEW_ROUTINE_TO_NEW_FOLDER\",\n  payload: { todoIds, folderName },\n});\n","export const toggleSelectAllButton = (\n  object,\n  setToggleButton,\n  setIsActiveSellectAll,\n  param\n) => {\n  const indicatorWithSellectAllButton = object.find(\n    (item) => item[param] === false\n  );\n\n  if (object.length === 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(false); //selectAllButton on\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton !== undefined) {\n    setToggleButton(false); //selectAllButton on\n    setIsActiveSellectAll(false); //selectAllButton active\n  }\n  if (object.length !== 0 && indicatorWithSellectAllButton === undefined) {\n    setIsActiveSellectAll(true); //selectAllButton disable\n    setToggleButton(true); //uncheckButton on\n  } else;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodoAction } from \"../../store/actions\";\nimport { selectAllAction } from \"../../store/actions\";\nimport { executeAction } from \"../../store/actions\";\nimport { uncheckAction } from \"../../store/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport const TodoInput = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const [todo, setTodo] = useState(\"\");\n  const todos = useSelector((state) => state.projects.todos);\n  const [isActiveButton, setIsActiveButton] = useState(true);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [toggleButton, setToggleButton] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n  const selectAll = () => dispatch(selectAllAction());\n  const execute = () => dispatch(executeAction());\n  const uncheck = () => dispatch(uncheckAction());\n  const classes = useStyles();\n\n  useEffect(() => {\n    const indicatorOfExecuteButton = todos.find(\n      (todo) => todo.complete === true\n    );\n\n    toggleSelectAllButton(\n      todos,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"complete\"\n    );\n\n    //to toggle executeButton\n    if (indicatorOfExecuteButton === undefined || todos.length === 0) {\n      setIsActiveButton(true);\n    } else {\n      setIsActiveButton(false);\n    }\n  }, [todos]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              HANDLE FUNCTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const handleChange = (e) => {\n    setTodo(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n  const handleSelect = (e) => {\n    e.preventDefault();\n    selectAll();\n  };\n  const handleExecute = (e) => {\n    e.preventDefault();\n    execute();\n  };\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheck();\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <Button\n      color=\"secondary\"\n      startIcon={<UndoIcon />}\n      onClick={handleUncheck}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Uncheck All\n    </Button>\n  ) : (\n    <Button\n      color=\"primary\"\n      startIcon={<DoneAllIcon />}\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n      variant=\"contained\"\n      size=\"small\"\n      className={classes.button}\n    >\n      Select All\n    </Button>\n  );\n  return (\n    <Container>\n      <Paper>\n        <form\n          onSubmit={handleSubmit}\n          action=\"submit\"\n          noValidate\n          autoComplete=\"off\"\n          style={{ padding: \"1rem\" }}\n        >\n          <Box>\n            <Input\n              type=\"text\"\n              name=\"todo\"\n              placeholder=\"create a todo\"\n              value={todo}\n              onChange={handleChange}\n            />\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              size=\"small\"\n              className={classes.button}\n            >\n              ADD\n            </Button>\n          </Box>\n          {button}\n          <Button\n            onClick={handleExecute}\n            startIcon={<DoneIcon />}\n            disabled={isActiveButton}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            className={classes.button}\n          >\n            Done\n          </Button>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TodoInput;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst Container = styled.div`\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 1rem;\n`;\n\nconst Box = styled.div``;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    lineHeight: \"initial\",\n  },\n}));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- ATIONS --------------------------------- */\nimport {\n  toggleTodoAction,\n  deleteTodoAction,\n  doneTodoAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const TodoList = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const todos = useSelector((state) => state.projects.todos);\n\n  /* -------------------------------------------------------------------------- */\n  /*                              DISPATCH ACTIONS                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n  const doneTodo = (todoId) => dispatch(doneTodoAction(todoId));\n\n  //toggle component\n  const message =\n    todos.length === 0 ? (\n      <Message color={theme.palette.text.hint}>There is no task...</Message>\n    ) : null;\n\n  return (\n    <Container>\n      {todos &&\n        todos.map((todo) => (\n          <Paper key={todo.id}>\n            <Box\n              onClick={\n                ((e) => e.preventDefault(), toggleTodo.bind(null, todo.id))\n              }\n            >\n              <ItemLeft>\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={todo.complete}\n                  color=\"primary\"\n                />\n                <Text complete={todo.complete}>{todo.name}</Text>\n              </ItemLeft>\n\n              <ItemRight>\n                {todo.complete ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<DoneIcon />}\n                    onClick={doneTodo.bind(null, todo.id)}\n                  >\n                    Done\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<DeleteIcon />}\n                    onClick={deleteTodo.bind(null, todo.id)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </ItemRight>\n            </Box>\n          </Paper>\n        ))}\n      {message}\n    </Container>\n  );\n};\n\nexport default TodoList;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst Container = styled.div`\n  padding: 1rem;\n  font-size: 1.6rem;\n`;\n\nconst Box = styled.div`\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst ItemRight = styled.div`\n  text-align: right;\n`;\nconst ItemLeft = styled.div`\n  text-align: left;\n`;\n\nconst Text = styled.span`\n  text-decoration: ${(props) => (props.complete ? \"line-through\" : null)};\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\n/* --------------------------------- style -------------------------------- */\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const ColorPicker = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   state                                  */\n  /* -------------------------------------------------------------------------- */\n  const { toggleTheme } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = (item) => {\n    if (typeof item === \"object\") {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(null);\n      toggleTheme(item);\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        edge=\"start\"\n        className={classes.menuButton}\n      >\n        <ColorLensIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: \"17ch\",\n            height: \"10rem\",\n          },\n        }}\n      >\n        {colorArray.map((item, index) => (\n          <MenuItem\n            value={item}\n            key={index}\n            onClick={handleClose.bind(null, item)}\n          >\n            {item === \"default\" ? item : null}\n            {item === \"default\" ? null : <StyledBoxColor color={item} />}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ColorPicker;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledBoxColor = styled(Box)`\n  background-color: ${(props) => props.color};\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(3),\n  },\n}));\n\nconst colorArray = [\n  \"default\",\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n\n/* ------------------------------- components ------------------------------- */\nimport { ColorPicker } from \"./ColorPicker\";\n\n/* ---------------------------------- style --------------------------------- */\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport const Navbar = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n  const { toggleTheme } = props;\n  const [now, setNow] = useState(\"\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    const setTime = () => {\n      const month = moment().format(\"MMMM\");\n      const date = moment().format(\"Do\");\n      setNow({ month, date });\n    };\n    setTime();\n    setInterval(setTime, 60000);\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handle　actions                             */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    e.preventDefault();\n    setIsDarkMode(!isDarkMode);\n    toggleTheme();\n  };\n\n  // toggle component\n  const icons = isDarkMode ? (\n    <IconButton\n      aria-label=\"darkmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness4Icon />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label=\"lightmode\"\n      color=\"inherit\"\n      edge=\"end\"\n      onClick={handleClick}\n    >\n      <Brightness7Icon />\n    </IconButton>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Title className={classes.title} color={theme.palette.text.primary}>\n            <span>{now.date} </span>\n            <Month>{now.month}</Month>\n          </Title>\n\n          <ColorPicker toggleTheme={toggleTheme} />\n          {icons}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\n/* ---------------------------------- style --------------------------------- */\nconst Title = styled.h1`\n  color: ${(props) => props.color};\n  font-size: 1.6rem;\n`;\n\nconst Month = styled.span`\n  font-size: 1rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport { addRoutineAction } from \"../../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport const Form = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const history = useSelector((state) => state.projects.history);\n  const { open, setState } = props;\n  const [folderName, setFolderName] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const addRoutine = (todoIds, folderName) =>\n    dispatch(addRoutineAction(todoIds, folderName));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  let todoIds = [];\n  history.map((item) => {\n    if (item.check) {\n      todoIds.push(item.id);\n    } else;\n    return item;\n  });\n  const handleClose = () => {\n    setState(false);\n  };\n\n  const handleChange = (e) => {\n    setFolderName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addRoutine(todoIds, folderName);\n    setState(false);\n  };\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a folder</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"name\"\n              type=\"text\"\n              fullWidth={true}\n              onChange={handleChange}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"secondary\" type=\"submit\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nexport const DialogFoldersItem = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { index, handleListItemClick } = props;\n\n  return (\n    <>\n      <ListItem button onClick={() => handleListItemClick(index)}>\n        <ListItemAvatar></ListItemAvatar>\n        <ListItemText primary={index} />\n      </ListItem>\n    </>\n  );\n};\nexport default DialogFoldersItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DialogFoldersItem from \"./Item\";\n\nexport const DialogFoldersList = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { handleClose, openDialogFolders, handleDialogFormOpen } = props;\n  const routine = useSelector((state) => state.users.routine);\n  const routineKeys = Object.keys(routine);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleListItemClick = (value) => {\n    handleClose(value);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"dialog-title\"\n      open={openDialogFolders}\n    >\n      <DialogTitle id=\"dialog-title\">add routines</DialogTitle>\n      <List>\n        {routineKeys &&\n          routineKeys.map((key, index) => (\n            <DialogFoldersItem\n              index={key}\n              handleListItemClick={handleListItemClick}\n              key={index}\n            />\n          ))}\n\n        <ListItem autoFocus button onClick={() => handleDialogFormOpen()}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Create new folder\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n};\n\nexport default DialogFoldersList;\n","import React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                                 COMPONENTS                                 */\n/* -------------------------------------------------------------------------- */\nimport DialogFoldersList from \"./List\";\n\nexport const DialogFolders = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const { openDialogFolders, setDialogFolders, setDialogForm } = props;\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClose = (value) => {\n    setDialogFolders(false);\n    if (typeof value === \"string\") {\n      console.log(value);\n    }\n  };\n\n  const handleDialogFormOpen = () => {\n    setDialogFolders(false);\n    setDialogForm(true);\n  };\n\n  return (\n    <>\n      <DialogFoldersList\n        openDialogFolders={openDialogFolders}\n        handleClose={handleClose}\n        handleDialogFormOpen={handleDialogFormOpen}\n      />\n    </>\n  );\n};\n\nexport default DialogFolders;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport {\n  deleteHistoryAction,\n  selectAllHistoryAction,\n  uncheckHistoryAction,\n} from \"../../store/actions\";\n\n/* ------------------------------ components ------------------------------ */\nimport Form from \"../routine/dialog/Form\";\nimport Folders from \"../routine/dialog/folders/Folders\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\n\n/* --------------------------------- util --------------------------------- */\nimport { checkHistory } from \"../../util/checkHistory\";\nimport { toggleSelectAllButton } from \"../../util/toggleSelectAllButton\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const history = useSelector((state) => state.projects.history);\n  const routine = useSelector((state) => state.users.routine);\n  const [isActiveDeleteButton, setIsActiveDeleteButton] = useState(true);\n  const [isActiveAddRoutineButton, setIsActiveAddRoutineButton] = useState(\n    true\n  );\n  const [toggleButton, setToggleButton] = useState(false);\n  const [isActiveSellectAllButton, setIsActiveSellectAll] = useState(true);\n  const [openDialogForm, setDialogForm] = useState(false);\n  const [openDialogFolders, setDialogFolders] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const deleteHistory = (todoIds) => dispatch(deleteHistoryAction(todoIds));\n  const slectAllHistory = () => dispatch(selectAllHistoryAction());\n  const uncheckHistory = () => dispatch(uncheckHistoryAction());\n\n  useEffect(() => {\n    //toggle select-button\n    toggleSelectAllButton(\n      history,\n      setToggleButton,\n      setIsActiveSellectAll,\n      \"check\"\n    );\n\n    //toggle delete-button and add-routine-button\n    if (checkHistory(history)) {\n      setIsActiveAddRoutineButton(false);\n      setIsActiveDeleteButton(false);\n    } else {\n      setIsActiveAddRoutineButton(true);\n      setIsActiveDeleteButton(true);\n    }\n  }, [history]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                             handle actions                              */\n  /* -------------------------------------------------------------------------- */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    let todoIds = [];\n    history.map((item) => {\n      if (item.check) {\n        todoIds.push(item.id);\n      } else;\n      return item;\n    });\n\n    deleteHistory(todoIds);\n  };\n\n  const handleUncheck = (e) => {\n    e.preventDefault();\n    uncheckHistory();\n  };\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    slectAllHistory();\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n\n    let keys = [];\n    for (let key in routine) {\n      keys.push(key);\n    }\n    if (keys.length === 0) {\n      setDialogForm(true);\n    } else {\n      setDialogFolders(true);\n    }\n  };\n\n  //toggle components\n  const button = toggleButton ? (\n    <IconButton color=\"secondary\" onClick={handleUncheck}>\n      <UndoIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      color=\"primary\"\n      aria-label=\"select all\"\n      disabled={isActiveSellectAllButton}\n      onClick={handleSelect}\n    >\n      <DoneAllIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <Folders\n        openDialogFolders={openDialogFolders}\n        setDialogFolders={setDialogFolders}\n        setDialogForm={setDialogForm}\n      />\n      <Form open={openDialogForm} setState={setDialogForm} />\n      <LeftContainer>{button}</LeftContainer>\n      <RightContainer>\n        <IconButton\n          aria-label=\"add routine\"\n          color=\"primary\"\n          disabled={isActiveAddRoutineButton}\n          onClick={handleAdd}\n        >\n          <PlaylistAddIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          disabled={isActiveDeleteButton}\n          color=\"secondary\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\n\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","export const checkHistory = (object) => {\n  const result = object.some((item) => {\n    return item.check === true;\n  });\n  return result;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\nimport {\n  selectHistoryAction,\n  selectHistoriesAction,\n  uncheckHistoriesAction,\n} from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const CreateItems = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n\n  const todoIds = objects && objects.map((object) => object.id);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                handleActions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelect = (e) => {\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem className={classes.list}>\n          <ListItemIcon>\n            <Box>\n              <IconButton\n                color=\"primary\"\n                onClick={handleSelect}\n                edge=\"start\"\n                disableRipple={true}\n                disableFocusRipple={true}\n              >\n                <Checkbox checked={check} color=\"primary\" />\n              </IconButton>\n              {moment(index).calendar(null, {\n                sameDay: \"[Today]\",\n                nextDay: \"[Tomorrow]\",\n                nextWeek: \"dddd\",\n                lastDay: \"[Yesterday]\",\n                lastWeek: \"[Last] dddd\",\n                sameElse: \"DD/MM/YYYY\",\n              })}\n            </Box>\n          </ListItemIcon>\n\n          <ListItemSecondaryAction>\n            {open ? (\n              <IconButton\n                className={classes.menuButton}\n                onClick={(e) => setOpen(!open)}\n                edge=\"end\"\n              >\n                <ExpandLess />\n              </IconButton>\n            ) : (\n              <IconButton\n                className={classes.menuButton}\n                onClick={(e) => setOpen(!open)}\n                edge=\"end\"\n              >\n                <ExpandMore />\n              </IconButton>\n            )}\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item, index) => (\n              <ListItem\n                id={index}\n                onClick={selectHistory.bind(null, item.id)}\n                button={true}\n                key={index}\n              >\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={item.check}\n                  color=\"primary\"\n                  size=\"small\"\n                />\n                <ListItemText primary={`${item.name}`} />\n              </ListItem>\n            ))}\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst Box = styled.div`\n  font-size: 1.6rem;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  menuButton: {\n    color: theme.palette.text.hint,\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport { CreateItems } from \"./CreateItems\";\n\nexport const CreateLists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <CreateItems objects={result} key={`section-${keys}`} index={keys} />\n    );\n  }\n\n  return <>{content}</>;\n};\n\nexport default CreateLists;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Input } from \"./Input\";\n\n/* --------------------------------- util --------------------------------- */\nimport { sortByDate } from \"../../util/sortByDate\";\n\n/* ------------------------------ components ------------------------------ */\nimport { CreateLists } from \"./CreateLists\";\n\n/* --------------------------------- style -------------------------------- */\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const history = useSelector((state) => state.projects.history);\n  const [sortedHistory, setsortedHistory] = useState();\n\n  useEffect(() => {\n    setsortedHistory(sortByDate(history));\n  }, [history]);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <HistoryIcon fontSize=\"large\" />\n      </Title>\n      {history && history.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no history...\n        </Message>\n      ) : (\n        <CreateLists objects={sortedHistory && sortedHistory} />\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- style --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","export const sortByDate = (array, callback) => {\n  let Obj = {};\n  let ObjArr = [];\n\n  for (let k = 0; k < array.length; k++) {\n    if (array[k].finishedAt in Obj !== true) ObjArr = [];\n    ObjArr.push(array[k]);\n    Obj[array[k].finishedAt] = ObjArr;\n  }\n\n  return Obj;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\nexport const Input = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const routine = useSelector((state) => state.users.routine);\n  console.log(routine);\n\n  return (\n    <>\n      <LeftContainer></LeftContainer>\n      <RightContainer>\n        <IconButton aria-label=\"create a folder\" color=\"primary\">\n          <CreateNewFolderIcon />\n        </IconButton>\n      </RightContainer>\n    </>\n  );\n};\n\nexport default Input;\n\n/* ---------------------------------- style --------------------------------- */\nconst LeftContainer = styled.div`\n  display: inline-block;\n  text-align: left;\n  width: 50%;\n`;\nconst RightContainer = styled.div`\n  display: inline-block;\n  text-align: right;\n  width: 50%;\n`;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n/* ---------------------------------- style --------------------------------- */\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const More = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { anchorEl, setAnchorEl } = props;\n  const classes = useStyles();\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClick={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemIcon className={classes.menuButton}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon className={classes.menuButton}>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" />\n        </StyledMenuItem>\n        {/* <StyledMenuItem button onClick={handleAdd}>\n          <ListItemIcon className={classes.menuButton}>\n            <PlaylistAddIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Add\" />\n        </StyledMenuItem> */}\n      </StyledMenu>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n/*                                    style                                   */\n/* -------------------------------------------------------------------------- */\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    boxShadow: theme.shadows[3],\n  },\n}))((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"& .MuiListItemIcon-root\": {\n      minWidth: 0,\n    },\n  },\n}))(MenuItem);\n","import React from \"react\";\n// import { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\n\n// import { selectHistoryAction } from \"../../store/actions\";\n\n/* ---------------------------------- style --------------------------------- */\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nexport const Elements = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const { item, index } = props;\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  // const dispatch = useDispatch();\n  // const selectHistory = (todoId) => dispatch(selectHistoryAction(todoId));\n\n  /* -------------------------------------------------------------------------- */\n  /*                               HANDLE ACTIONS                               */\n  /* -------------------------------------------------------------------------- */\n  const handleClick = (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <ListItem id={index} onClick={handleClick} button={true} key={index}>\n        <Checkbox\n          type=\"checkbox\"\n          checked={item.check}\n          color=\"primary\"\n          size=\"small\"\n        />\n        <ListItemText primary={`${item.name}`} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default Elements;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n/* --------------------------------- actions -------------------------------- */\nimport { selectHistoriesAction } from \"../../../store/actions\";\nimport { uncheckHistoriesAction } from \"../../../store/actions\";\n\n/* ------------------------------- components ------------------------------- */\nimport { More } from \"../More\";\nimport Elements from \"./Elements\";\n\n/* ---------------------------------- style --------------------------------- */\nimport styled from \"styled-components\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Input from \"@material-ui/core/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nexport const Items = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const classes = useStyles();\n  const { objects, index } = props;\n  const [openCollapseList, setOpenCollapseList] = useState(false);\n  const [check, setCheck] = useState(\n    objects.filter((object) => object.check === false).length === 0\n      ? true\n      : false\n  );\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [routine, setRoutine] = useState(\"\");\n\n  useEffect(() => {\n    objects.filter((object) => object.check === false).length === 0\n      ? setCheck(true)\n      : setCheck(false);\n  }, [objects]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               dispatchActions                              */\n  /* -------------------------------------------------------------------------- */\n  const dispatch = useDispatch();\n  const selectHistories = (todoIds) => dispatch(selectHistoriesAction(todoIds));\n  const uncheckHistories = (todoIds) =>\n    dispatch(uncheckHistoriesAction(todoIds));\n  const todoIds = objects && objects.map((object) => object.id);\n\n  /* -------------------------------------------------------------------------- */\n  /*                               handle actions                               */\n  /* -------------------------------------------------------------------------- */\n  const handleSelect = (e) => {\n    setCheck(!check);\n    objects.filter((object) => object.check === false).length === 0\n      ? uncheckHistories(todoIds)\n      : selectHistories(todoIds);\n  };\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (routine.trim() === \"\") return;\n    setRoutine(\"\");\n    console.log(routine);\n  };\n  const handleChange = (e) => {\n    setRoutine(e.target.value);\n  };\n\n  //toggle components\n  const folderIcon = openCollapseList ? (\n    <FolderOpenIcon color=\"primary\" />\n  ) : (\n    <FolderIcon color=\"primary\" />\n  );\n\n  return (\n    <>\n      <List component=\"ul\" className={classes.list}>\n        <ListItem\n          className={classes.list}\n          onClick={(e) => setOpenCollapseList(!openCollapseList)}\n        >\n          <ListItemIcon>\n            <Box>\n              <IconButton\n                color=\"primary\"\n                onClick={handleSelect}\n                edge=\"start\"\n                disableRipple={true}\n                disableFocusRipple={true}\n              >\n                {folderIcon}\n              </IconButton>\n              {index}\n            </Box>\n          </ListItemIcon>\n\n          <ListItemSecondaryAction>\n            <IconButton\n              className={classes.menuButton}\n              edge=\"end\"\n              disableRipple={true}\n              disableFocusRipple={true}\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n            <More\n              anchorEl={anchorEl}\n              setAnchorEl={setAnchorEl}\n              setOpenCollapseList={setOpenCollapseList}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={openCollapseList} timeout=\"auto\" unmountOnExit>\n          {objects &&\n            objects.map((item, index) => (\n              <Elements item={item} index={index} key={index} />\n            ))}\n\n          <ListItem>\n            <IconButton edge=\"start\" color=\"primary\">\n              <AddIcon />\n            </IconButton>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\" z>\n              <Input\n                name=\"todo\"\n                type=\"text\"\n                onChange={handleChange}\n                autoFocus={true}\n                value={routine}\n              />\n            </form>\n          </ListItem>\n        </Collapse>\n      </List>\n      <Divider variant=\"middle\" />\n    </>\n  );\n};\n\nexport default Items;\n\n/* ---------------------------------- style --------------------------------- */\nconst Box = styled.div`\n  font-size: 1.6rem;\n`;\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n  },\n  menuButton: {\n    color: theme.palette.text.hint,\n  },\n}));\n","import React from \"react\";\n\n/* ------------------------------- components ------------------------------- */\nimport Items from \"./Items\";\n\nexport const Lists = (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    state                                   */\n  /* -------------------------------------------------------------------------- */\n  const { objects } = props;\n\n  let content = [];\n  for (let keys in objects) {\n    let result = objects[keys];\n    content.push(\n      <Items objects={result} key={`section-${keys}`} index={keys} />\n    );\n  }\n\n  return <div>{content}</div>;\n};\n\nexport default Lists;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Input from \"./Input\";\n\n/* ---------------------------------- UTIL ---------------------------------- */\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport { Lists as CreateList } from \"./create/Lists\";\n\n//style\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport const List = () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                    STATE                                   */\n  /* -------------------------------------------------------------------------- */\n  const theme = useTheme();\n  const routine = useSelector((state) => state.users.routine);\n\n  return (\n    <StyledPaper>\n      <Title>\n        <ListIcon fontSize=\"large\" />\n      </Title>\n      {routine && routine.length === 0 ? (\n        <Message color={theme.palette.text.hint}>\n          There is no routine...\n        </Message>\n      ) : (\n        <CreateList objects={routine && routine} />\n      )}\n\n      <Input />\n    </StyledPaper>\n  );\n};\n\nexport default List;\n\n/* ---------------------------------- STYLE --------------------------------- */\nconst StyledPaper = styled(Paper)`\n  margin: 1rem;\n  max-height: 50rem;\n  overflow: scroll;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  padding: 1rem 0;\n`;\n\nconst Message = styled.p`\n  text-align: center;\n  font-size: 1.4rem;\n  color: ${(props) => props.color};\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  font-size:62.5%;\n  background: ${({ theme }) => theme.palette.background.default};\n  color:${({ theme }) => theme.palette.text.primary};\n  margin:0 auto;\n  font-family: 'Oswald', sans-serif;\n  user-select:text;\n  }\n#root{\n  overflow:hidden\n}\nh2{\n  margin:0;\n}\n`;\n\nexport const themeObjectFunction = () => {\n  return {\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#2196f3\",\n      },\n      secondary: {\n        main: \"#f50057\",\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport \"normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./store/reducers/rootReducer\";\nimport { createStore } from \"redux\";\n\n/* ------------------------------- COMPONENTS ------------------------------- */\nimport TodoInput from \"./components/todo/TodoInput\";\nimport TodoList from \"./components/todo/TodoList\";\nimport Navbar from \"./components/nav/Navbar\";\nimport { List as HistoryList } from \"./components/history/List\";\nimport { List as RoutineList } from \"./components/routine/List\";\n\n/* ---------------------------------- STYLE --------------------------------- */\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\n/* ---------------------------------- HOOKS --------------------------------- */\nimport { useTheme } from \"./hooks/useTheme\";\n\nexport const App = () => {\n  const [theme, toggleTheme] = useTheme();\n  const data = localStorage.getItem(\"data\")\n    ? JSON.parse(localStorage.getItem(\"data\"))\n    : {\n        projects: { todos: [], history: [] },\n        users: { routine: [], userSettings: {} },\n      };\n  const persistedState = data;\n\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    window.devToolsExtension && window.devToolsExtension()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"data\", JSON.stringify(store.getState()));\n  });\n\n  const themeConfig = createMuiTheme(theme);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={themeConfig}>\n        <GlobalStyle theme={themeConfig} />\n        <Navbar toggleTheme={toggleTheme} />\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={4}>\n            <RoutineList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <TodoInput />\n            <TodoList />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <HistoryList />\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\nimport { themeObjectFunction } from \"../GlobalStyle\";\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(themeObjectFunction);\n\n  const {\n    palette: { type },\n  } = theme;\n  const toggleTheme = (props) => {\n    let updatedTheme;\n    if (props) {\n      const color = props === \"default\" ? \"#2196f3\" : props;\n\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          primary: {\n            ...theme.palette.primary,\n            main: `${color}`,\n          },\n        },\n      };\n    } else {\n      updatedTheme = {\n        ...theme,\n        palette: {\n          ...theme.palette,\n          type: type === \"light\" ? \"dark\" : \"light\",\n        },\n      };\n    }\n\n    setTheme(updatedTheme);\n  };\n  return [theme, toggleTheme];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}